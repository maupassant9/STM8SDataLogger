                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module leds
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _leds_cathode
                                     12 	.globl _leds_anode
                                     13 	.globl _LedsInit
                                     14 	.globl _UpdateLedState
                                     15 	.globl _SetLedRaw
                                     16 	.globl _GetLedState
                                     17 	.globl _SetLedState
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area DATA
      000000                         22 _ledsState:
      000000                         23 	.ds 2
      000002                         24 _UpdateLedState_ledId_65536_325:
      000002                         25 	.ds 1
      000003                         26 _UpdateLedState_ledIdPrev_65536_325:
      000003                         27 	.ds 1
                                     28 ;--------------------------------------------------------
                                     29 ; ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area INITIALIZED
                                     32 ;--------------------------------------------------------
                                     33 ; absolute external ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area DABS (ABS)
                                     36 
                                     37 ; default segment ordering for linker
                                     38 	.area HOME
                                     39 	.area GSINIT
                                     40 	.area GSFINAL
                                     41 	.area CONST
                                     42 	.area INITIALIZER
                                     43 	.area CODE
                                     44 
                                     45 ;--------------------------------------------------------
                                     46 ; global & static initialisations
                                     47 ;--------------------------------------------------------
                                     48 	.area HOME
                                     49 	.area GSINIT
                                     50 	.area GSFINAL
                                     51 	.area GSINIT
                                     52 ;	../src/leds.c: 98: static uint8_t ledId = NUM_OF_LEDS-1;
      000000 35 0Bu00u02      [ 1]   53 	mov	_UpdateLedState_ledId_65536_325+0, #0x0b
                                     54 ;	../src/leds.c: 100: static uint8_t ledIdPrev = 0;
      000004 72 5Fu00u03      [ 1]   55 	clr	_UpdateLedState_ledIdPrev_65536_325+0
                                     56 ;--------------------------------------------------------
                                     57 ; Home
                                     58 ;--------------------------------------------------------
                                     59 	.area HOME
                                     60 	.area HOME
                                     61 ;--------------------------------------------------------
                                     62 ; code
                                     63 ;--------------------------------------------------------
                                     64 	.area CODE
                                     65 ;	../src/leds.c: 55: void LedsInit( void )
                                     66 ;	-----------------------------------------
                                     67 ;	 function LedsInit
                                     68 ;	-----------------------------------------
      000000                         69 _LedsInit:
                                     70 ;	../src/leds.c: 57: ledsState = 0x00;
      000000 5F               [ 1]   71 	clrw	x
      000001 CFu00u00         [ 2]   72 	ldw	_ledsState+0, x
                                     73 ;	../src/leds.c: 58: GpioInit();
                                     74 ;	../src/leds.c: 59: }
      000004 CCr00r07         [ 2]   75 	jp	_GpioInit
                                     76 ;	../src/leds.c: 72: static void GpioInit( void ){
                                     77 ;	-----------------------------------------
                                     78 ;	 function GpioInit
                                     79 ;	-----------------------------------------
      000007                         80 _GpioInit:
                                     81 ;	../src/leds.c: 75: for(idx = 0; idx < NUM_OF_LEDS; idx++){
      000007 4F               [ 1]   82 	clr	a
      000008                         83 00102$:
                                     84 ;	../src/leds.c: 76: SetLedRaw(idx, LED_OFF_STATE);
      000008 88               [ 1]   85 	push	a
      000009 4B 00            [ 1]   86 	push	#0x00
      00000B 88               [ 1]   87 	push	a
      00000C CDr00r65         [ 4]   88 	call	_SetLedRaw
      00000F 85               [ 2]   89 	popw	x
      000010 84               [ 1]   90 	pop	a
                                     91 ;	../src/leds.c: 75: for(idx = 0; idx < NUM_OF_LEDS; idx++){
      000011 4C               [ 1]   92 	inc	a
      000012 A1 0C            [ 1]   93 	cp	a, #0x0c
      000014 25 F2            [ 1]   94 	jrc	00102$
                                     95 ;	../src/leds.c: 78: }
      000016 81               [ 4]   96 	ret
                                     97 ;	../src/leds.c: 95: void UpdateLedState( void )
                                     98 ;	-----------------------------------------
                                     99 ;	 function UpdateLedState
                                    100 ;	-----------------------------------------
      000017                        101 _UpdateLedState:
      000017 89               [ 2]  102 	pushw	x
                                    103 ;	../src/leds.c: 99: LED_STATE_T ledBit = (0x01 << ledId);
      000018 C6u00u02         [ 1]  104 	ld	a, _UpdateLedState_ledId_65536_325+0
      00001B 88               [ 1]  105 	push	a
      00001C 5F               [ 1]  106 	clrw	x
      00001D 5C               [ 1]  107 	incw	x
      00001E 4D               [ 1]  108 	tnz	a
      00001F 27 04            [ 1]  109 	jreq	00118$
      000021                        110 00117$:
      000021 58               [ 2]  111 	sllw	x
      000022 4A               [ 1]  112 	dec	a
      000023 26 FC            [ 1]  113 	jrne	00117$
      000025                        114 00118$:
      000025 84               [ 1]  115 	pop	a
      000026 1F 01            [ 2]  116 	ldw	(0x01, sp), x
                                    117 ;	../src/leds.c: 103: ledIdPrev = ledId;
      000028 C7u00u03         [ 1]  118 	ld	_UpdateLedState_ledIdPrev_65536_325+0, a
                                    119 ;	../src/leds.c: 104: ledId = (ledId == NUM_OF_LEDS-1)?0:(ledId+1);
      00002B C6u00u02         [ 1]  120 	ld	a, _UpdateLedState_ledId_65536_325+0
      00002E A1 0B            [ 1]  121 	cp	a, #0x0b
      000030 26 03            [ 1]  122 	jrne	00105$
      000032 4F               [ 1]  123 	clr	a
      000033 20 0A            [ 2]  124 	jra	00106$
      000035                        125 00105$:
      000035 C6u00u02         [ 1]  126 	ld	a, _UpdateLedState_ledId_65536_325+0
      000038 4C               [ 1]  127 	inc	a
      000039 88               [ 1]  128 	push	a
      00003A 49               [ 1]  129 	rlc	a
      00003B 4F               [ 1]  130 	clr	a
      00003C A2 00            [ 1]  131 	sbc	a, #0x00
      00003E 84               [ 1]  132 	pop	a
      00003F                        133 00106$:
      00003F C7u00u02         [ 1]  134 	ld	_UpdateLedState_ledId_65536_325+0, a
                                    135 ;	../src/leds.c: 106: SetLedRaw(ledIdPrev, LED_OFF_STATE);
      000042 4B 00            [ 1]  136 	push	#0x00
      000044 3Bu00u03         [ 1]  137 	push	_UpdateLedState_ledIdPrev_65536_325+0
      000047 CDr00r65         [ 4]  138 	call	_SetLedRaw
      00004A 85               [ 2]  139 	popw	x
                                    140 ;	../src/leds.c: 107: if(ledBit&ledsState){
      00004B 7B 02            [ 1]  141 	ld	a, (0x02, sp)
      00004D C4u00u01         [ 1]  142 	and	a, _ledsState+1
      000050 97               [ 1]  143 	ld	xl, a
      000051 7B 01            [ 1]  144 	ld	a, (0x01, sp)
      000053 C4u00u00         [ 1]  145 	and	a, _ledsState+0
      000056 95               [ 1]  146 	ld	xh, a
      000057 5D               [ 2]  147 	tnzw	x
      000058 27 09            [ 1]  148 	jreq	00103$
                                    149 ;	../src/leds.c: 108: SetLedRaw(ledId,LED_ON_STATE);
      00005A 4B 01            [ 1]  150 	push	#0x01
      00005C 3Bu00u02         [ 1]  151 	push	_UpdateLedState_ledId_65536_325+0
      00005F CDr00r65         [ 4]  152 	call	_SetLedRaw
      000062 85               [ 2]  153 	popw	x
      000063                        154 00103$:
                                    155 ;	../src/leds.c: 110: }
      000063 85               [ 2]  156 	popw	x
      000064 81               [ 4]  157 	ret
                                    158 ;	../src/leds.c: 130: void SetLedRaw(uint8_t ledId, uint8_t state){
                                    159 ;	-----------------------------------------
                                    160 ;	 function SetLedRaw
                                    161 ;	-----------------------------------------
      000065                        162 _SetLedRaw:
      000065 52 0B            [ 2]  163 	sub	sp, #11
                                    164 ;	../src/leds.c: 132: ledId = ledId << 2;
      000067 7B 0E            [ 1]  165 	ld	a, (0x0e, sp)
      000069 48               [ 1]  166 	sll	a
      00006A 48               [ 1]  167 	sll	a
      00006B 6B 0E            [ 1]  168 	ld	(0x0e, sp), a
                                    169 ;	../src/leds.c: 134: GPIO_TypeDef * gpioPortPos = (GPIO_TypeDef * )leds_anode[ledId];
      00006D 5F               [ 1]  170 	clrw	x
      00006E 7B 0E            [ 1]  171 	ld	a, (0x0e, sp)
      000070 97               [ 1]  172 	ld	xl, a
      000071 58               [ 2]  173 	sllw	x
      000072 90 93            [ 1]  174 	ldw	y, x
      000074 DEu00u00         [ 2]  175 	ldw	x, (_leds_anode+0, x)
      000077 1F 03            [ 2]  176 	ldw	(0x03, sp), x
                                    177 ;	../src/leds.c: 135: GPIO_TypeDef * gpioPortNeg = (GPIO_TypeDef *) leds_cathode[ledId];
      000079 93               [ 1]  178 	ldw	x, y
      00007A 1Cr00r30         [ 2]  179 	addw	x, #(_leds_cathode+0)
      00007D FE               [ 2]  180 	ldw	x, (x)
      00007E 1F 05            [ 2]  181 	ldw	(0x05, sp), x
                                    182 ;	../src/leds.c: 136: ADDR_BANK_T gpioPinPos = leds_anode[ledId+1];
      000080 7B 0E            [ 1]  183 	ld	a, (0x0e, sp)
      000082 4C               [ 1]  184 	inc	a
      000083 97               [ 1]  185 	ld	xl, a
      000084 49               [ 1]  186 	rlc	a
      000085 4F               [ 1]  187 	clr	a
      000086 A2 00            [ 1]  188 	sbc	a, #0x00
      000088 95               [ 1]  189 	ld	xh, a
      000089 58               [ 2]  190 	sllw	x
      00008A 90 93            [ 1]  191 	ldw	y, x
      00008C DEu00u00         [ 2]  192 	ldw	x, (_leds_anode+0, x)
      00008F 1F 01            [ 2]  193 	ldw	(0x01, sp), x
                                    194 ;	../src/leds.c: 137: ADDR_BANK_T gpioPinNeg = leds_cathode[ledId+1];
      000091 93               [ 1]  195 	ldw	x, y
      000092 DEu00u30         [ 2]  196 	ldw	x, (_leds_cathode+0, x)
      000095 9F               [ 1]  197 	ld	a, xl
                                    198 ;	../src/leds.c: 142: gpioPortNeg->ODR &= ~(gpioPinNeg);
      000096 6B 07            [ 1]  199 	ld	(0x07, sp), a
                                    200 ;	../src/leds.c: 144: gpioPortPos->DDR |= gpioPinPos;
      000098 1E 03            [ 2]  201 	ldw	x, (0x03, sp)
      00009A 5C               [ 1]  202 	incw	x
      00009B 5C               [ 1]  203 	incw	x
                                    204 ;	../src/leds.c: 145: gpioPortNeg->DDR |= gpioPinNeg;
      00009C 16 05            [ 2]  205 	ldw	y, (0x05, sp)
      00009E 90 5C            [ 1]  206 	incw	y
      0000A0 90 5C            [ 1]  207 	incw	y
      0000A2 17 08            [ 2]  208 	ldw	(0x08, sp), y
                                    209 ;	../src/leds.c: 141: gpioPortPos->ODR |= (gpioPinPos);
      0000A4 7B 02            [ 1]  210 	ld	a, (0x02, sp)
      0000A6 6B 0A            [ 1]  211 	ld	(0x0a, sp), a
                                    212 ;	../src/leds.c: 142: gpioPortNeg->ODR &= ~(gpioPinNeg);
      0000A8 7B 07            [ 1]  213 	ld	a, (0x07, sp)
      0000AA 43               [ 1]  214 	cpl	a
      0000AB 6B 0B            [ 1]  215 	ld	(0x0b, sp), a
                                    216 ;	../src/leds.c: 139: if(state) //turn on
      0000AD 0D 0F            [ 1]  217 	tnz	(0x0f, sp)
      0000AF 27 22            [ 1]  218 	jreq	00102$
                                    219 ;	../src/leds.c: 141: gpioPortPos->ODR |= (gpioPinPos);
      0000B1 16 03            [ 2]  220 	ldw	y, (0x03, sp)
      0000B3 90 F6            [ 1]  221 	ld	a, (y)
      0000B5 1A 0A            [ 1]  222 	or	a, (0x0a, sp)
      0000B7 16 03            [ 2]  223 	ldw	y, (0x03, sp)
      0000B9 90 F7            [ 1]  224 	ld	(y), a
                                    225 ;	../src/leds.c: 142: gpioPortNeg->ODR &= ~(gpioPinNeg);
      0000BB 16 05            [ 2]  226 	ldw	y, (0x05, sp)
      0000BD 90 F6            [ 1]  227 	ld	a, (y)
      0000BF 14 0B            [ 1]  228 	and	a, (0x0b, sp)
      0000C1 16 05            [ 2]  229 	ldw	y, (0x05, sp)
      0000C3 90 F7            [ 1]  230 	ld	(y), a
                                    231 ;	../src/leds.c: 144: gpioPortPos->DDR |= gpioPinPos;
      0000C5 F6               [ 1]  232 	ld	a, (x)
      0000C6 1A 0A            [ 1]  233 	or	a, (0x0a, sp)
      0000C8 F7               [ 1]  234 	ld	(x), a
                                    235 ;	../src/leds.c: 145: gpioPortNeg->DDR |= gpioPinNeg;
      0000C9 1E 08            [ 2]  236 	ldw	x, (0x08, sp)
      0000CB F6               [ 1]  237 	ld	a, (x)
      0000CC 1A 07            [ 1]  238 	or	a, (0x07, sp)
      0000CE 1E 08            [ 2]  239 	ldw	x, (0x08, sp)
      0000D0 F7               [ 1]  240 	ld	(x), a
      0000D1 20 11            [ 2]  241 	jra	00104$
      0000D3                        242 00102$:
                                    243 ;	../src/leds.c: 149: gpioPortPos->DDR &= ~gpioPinPos;
      0000D3 F6               [ 1]  244 	ld	a, (x)
      0000D4 6B 07            [ 1]  245 	ld	(0x07, sp), a
      0000D6 7B 0A            [ 1]  246 	ld	a, (0x0a, sp)
      0000D8 43               [ 1]  247 	cpl	a
      0000D9 14 07            [ 1]  248 	and	a, (0x07, sp)
      0000DB F7               [ 1]  249 	ld	(x), a
                                    250 ;	../src/leds.c: 150: gpioPortNeg->DDR &= ~gpioPinNeg;
      0000DC 1E 08            [ 2]  251 	ldw	x, (0x08, sp)
      0000DE F6               [ 1]  252 	ld	a, (x)
      0000DF 14 0B            [ 1]  253 	and	a, (0x0b, sp)
      0000E1 1E 08            [ 2]  254 	ldw	x, (0x08, sp)
      0000E3 F7               [ 1]  255 	ld	(x), a
      0000E4                        256 00104$:
                                    257 ;	../src/leds.c: 152: }
      0000E4 5B 0B            [ 2]  258 	addw	sp, #11
      0000E6 81               [ 4]  259 	ret
                                    260 ;	../src/leds.c: 155: uint8_t GetLedState(uint8_t ledID)
                                    261 ;	-----------------------------------------
                                    262 ;	 function GetLedState
                                    263 ;	-----------------------------------------
      0000E7                        264 _GetLedState:
      0000E7 89               [ 2]  265 	pushw	x
                                    266 ;	../src/leds.c: 157: return (ledsState & (1 << ledID))?1:0;
      0000E8 7B 05            [ 1]  267 	ld	a, (0x05, sp)
      0000EA 5F               [ 1]  268 	clrw	x
      0000EB 5C               [ 1]  269 	incw	x
      0000EC 4D               [ 1]  270 	tnz	a
      0000ED 27 04            [ 1]  271 	jreq	00111$
      0000EF                        272 00110$:
      0000EF 58               [ 2]  273 	sllw	x
      0000F0 4A               [ 1]  274 	dec	a
      0000F1 26 FC            [ 1]  275 	jrne	00110$
      0000F3                        276 00111$:
      0000F3 90 CEu00u00      [ 2]  277 	ldw	y, _ledsState+0
      0000F7 17 01            [ 2]  278 	ldw	(0x01, sp), y
      0000F9 9F               [ 1]  279 	ld	a, xl
      0000FA 14 02            [ 1]  280 	and	a, (0x02, sp)
      0000FC 02               [ 1]  281 	rlwa	x
      0000FD 14 01            [ 1]  282 	and	a, (0x01, sp)
      0000FF 95               [ 1]  283 	ld	xh, a
      000100 5D               [ 2]  284 	tnzw	x
      000101 27 03            [ 1]  285 	jreq	00103$
      000103 5F               [ 1]  286 	clrw	x
      000104 5C               [ 1]  287 	incw	x
      000105 21                     288 	.byte 0x21
      000106                        289 00103$:
      000106 5F               [ 1]  290 	clrw	x
      000107                        291 00104$:
      000107 9F               [ 1]  292 	ld	a, xl
                                    293 ;	../src/leds.c: 158: }
      000108 85               [ 2]  294 	popw	x
      000109 81               [ 4]  295 	ret
                                    296 ;	../src/leds.c: 161: void SetLedState(uint8_t ledID, uint8_t state)
                                    297 ;	-----------------------------------------
                                    298 ;	 function SetLedState
                                    299 ;	-----------------------------------------
      00010A                        300 _SetLedState:
      00010A 89               [ 2]  301 	pushw	x
                                    302 ;	../src/leds.c: 163: if(state) ledsState |= (1 << ledID);
      00010B 7B 05            [ 1]  303 	ld	a, (0x05, sp)
      00010D CEu00u00         [ 2]  304 	ldw	x, _ledsState+0
      000110 1F 01            [ 2]  305 	ldw	(0x01, sp), x
      000112 5F               [ 1]  306 	clrw	x
      000113 5C               [ 1]  307 	incw	x
      000114 4D               [ 1]  308 	tnz	a
      000115 27 04            [ 1]  309 	jreq	00112$
      000117                        310 00111$:
      000117 58               [ 2]  311 	sllw	x
      000118 4A               [ 1]  312 	dec	a
      000119 26 FC            [ 1]  313 	jrne	00111$
      00011B                        314 00112$:
      00011B 0D 06            [ 1]  315 	tnz	(0x06, sp)
      00011D 27 0C            [ 1]  316 	jreq	00102$
      00011F 9F               [ 1]  317 	ld	a, xl
      000120 1A 02            [ 1]  318 	or	a, (0x02, sp)
      000122 02               [ 1]  319 	rlwa	x
      000123 1A 01            [ 1]  320 	or	a, (0x01, sp)
      000125 95               [ 1]  321 	ld	xh, a
      000126 CFu00u00         [ 2]  322 	ldw	_ledsState+0, x
      000129 20 0B            [ 2]  323 	jra	00104$
      00012B                        324 00102$:
                                    325 ;	../src/leds.c: 164: else ledsState &= ~(1 << ledID); 
      00012B 53               [ 2]  326 	cplw	x
      00012C 9F               [ 1]  327 	ld	a, xl
      00012D 14 02            [ 1]  328 	and	a, (0x02, sp)
      00012F 02               [ 1]  329 	rlwa	x
      000130 14 01            [ 1]  330 	and	a, (0x01, sp)
      000132 95               [ 1]  331 	ld	xh, a
      000133 CFu00u00         [ 2]  332 	ldw	_ledsState+0, x
      000136                        333 00104$:
                                    334 ;	../src/leds.c: 165: }
      000136 85               [ 2]  335 	popw	x
      000137 81               [ 4]  336 	ret
                                    337 	.area CODE
                                    338 	.area CONST
      000000                        339 _leds_anode:
      000000 50 00                  340 	.dw #0x5000
      000002 00 08                  341 	.dw #0x0008
      000004 50 0A                  342 	.dw #0x500a
      000006 00 08                  343 	.dw #0x0008
      000008 50 00                  344 	.dw #0x5000
      00000A 00 08                  345 	.dw #0x0008
      00000C 50 05                  346 	.dw #0x5005
      00000E 00 10                  347 	.dw #0x0010
      000010 50 0A                  348 	.dw #0x500a
      000012 00 08                  349 	.dw #0x0008
      000014 50 05                  350 	.dw #0x5005
      000016 00 10                  351 	.dw #0x0010
      000018 50 05                  352 	.dw #0x5005
      00001A 00 20                  353 	.dw #0x0020
      00001C 50 00                  354 	.dw #0x5000
      00001E 00 08                  355 	.dw #0x0008
      000020 50 05                  356 	.dw #0x5005
      000022 00 20                  357 	.dw #0x0020
      000024 50 0A                  358 	.dw #0x500a
      000026 00 08                  359 	.dw #0x0008
      000028 50 05                  360 	.dw #0x5005
      00002A 00 10                  361 	.dw #0x0010
      00002C 50 05                  362 	.dw #0x5005
      00002E 00 20                  363 	.dw #0x0020
      000030                        364 _leds_cathode:
      000030 50 0A                  365 	.dw #0x500a
      000032 00 08                  366 	.dw #0x0008
      000034 50 00                  367 	.dw #0x5000
      000036 00 08                  368 	.dw #0x0008
      000038 50 05                  369 	.dw #0x5005
      00003A 00 10                  370 	.dw #0x0010
      00003C 50 00                  371 	.dw #0x5000
      00003E 00 08                  372 	.dw #0x0008
      000040 50 05                  373 	.dw #0x5005
      000042 00 10                  374 	.dw #0x0010
      000044 50 0A                  375 	.dw #0x500a
      000046 00 08                  376 	.dw #0x0008
      000048 50 00                  377 	.dw #0x5000
      00004A 00 08                  378 	.dw #0x0008
      00004C 50 05                  379 	.dw #0x5005
      00004E 00 20                  380 	.dw #0x0020
      000050 50 0A                  381 	.dw #0x500a
      000052 00 08                  382 	.dw #0x0008
      000054 50 05                  383 	.dw #0x5005
      000056 00 20                  384 	.dw #0x0020
      000058 50 05                  385 	.dw #0x5005
      00005A 00 20                  386 	.dw #0x0020
      00005C 50 05                  387 	.dw #0x5005
      00005E 00 10                  388 	.dw #0x0010
                                    389 	.area INITIALIZER
                                    390 	.area CABS (ABS)
