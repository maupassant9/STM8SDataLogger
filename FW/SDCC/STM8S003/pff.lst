                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module pff
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _disk_writep
                                     12 	.globl _disk_readp
                                     13 	.globl _disk_initialize
                                     14 	.globl _pf_mount
                                     15 	.globl _pf_open
                                     16 	.globl _pf_read
                                     17 	.globl _pf_write
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area DATA
                           000000    22 Fpff$FatFs$0_0$0==.
      000000                         23 _FatFs:
      000000                         24 	.ds 2
                                     25 ;--------------------------------------------------------
                                     26 ; ram data
                                     27 ;--------------------------------------------------------
                                     28 	.area INITIALIZED
                                     29 ;--------------------------------------------------------
                                     30 ; absolute external ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DABS (ABS)
                                     33 
                                     34 ; default segment ordering for linker
                                     35 	.area HOME
                                     36 	.area GSINIT
                                     37 	.area GSFINAL
                                     38 	.area CONST
                                     39 	.area INITIALIZER
                                     40 	.area CODE
                                     41 
                                     42 ;--------------------------------------------------------
                                     43 ; global & static initialisations
                                     44 ;--------------------------------------------------------
                                     45 	.area HOME
                                     46 	.area GSINIT
                                     47 	.area GSFINAL
                                     48 	.area GSINIT
                                     49 ;--------------------------------------------------------
                                     50 ; Home
                                     51 ;--------------------------------------------------------
                                     52 	.area HOME
                                     53 	.area HOME
                                     54 ;--------------------------------------------------------
                                     55 ; code
                                     56 ;--------------------------------------------------------
                                     57 	.area CODE
                           000000    58 	Fpff$ld_word$0$0 ==.
                           000000    59 	C$pff.c$384$0_0$323 ==.
                                     60 ;	../src/pff.c: 384: static WORD ld_word (const BYTE* ptr)	/*	 Load a 2-byte little-endian word */
                                     61 ; genLabel
                                     62 ;	-----------------------------------------
                                     63 ;	 function ld_word
                                     64 ;	-----------------------------------------
                                     65 ;	Register assignment might be sub-optimal.
                                     66 ;	Stack space usage: 2 bytes.
      000000                         67 _ld_word:
      000000 89               [ 2]   68 	pushw	x
                           000001    69 	C$pff.c$388$1_0$323 ==.
                                     70 ;	../src/pff.c: 388: rv = ptr[1];
                                     71 ; genAssign
      000001 1E 05            [ 2]   72 	ldw	x, (0x05, sp)
                                     73 ; genPointerGet
      000003 E6 01            [ 1]   74 	ld	a, (0x1, x)
                                     75 ; genCast
                                     76 ; genAssign
      000005 5F               [ 1]   77 	clrw	x
                                     78 ; genAssign
                           000006    79 	C$pff.c$389$1_0$323 ==.
                                     80 ;	../src/pff.c: 389: rv = rv << 8 | ptr[0];
                                     81 ; genLeftShiftLiteral
      000006 6B 01            [ 1]   82 	ld	(0x01, sp), a
      000008 0F 02            [ 1]   83 	clr	(0x02, sp)
                                     84 ; genAssign
      00000A 1E 05            [ 2]   85 	ldw	x, (0x05, sp)
                                     86 ; genPointerGet
      00000C F6               [ 1]   87 	ld	a, (x)
                                     88 ; genCast
                                     89 ; genAssign
      00000D 5F               [ 1]   90 	clrw	x
                                     91 ; genOr
      00000E 1A 02            [ 1]   92 	or	a, (0x02, sp)
      000010 97               [ 1]   93 	ld	xl, a
      000011 9E               [ 1]   94 	ld	a, xh
      000012 1A 01            [ 1]   95 	or	a, (0x01, sp)
                                     96 ; genAssign
                           000014    97 	C$pff.c$390$1_0$323 ==.
                                     98 ;	../src/pff.c: 390: return rv;
                                     99 ; genReturn
      000014 95               [ 1]  100 	ld	xh, a
                                    101 ; genLabel
      000015                        102 00101$:
                           000015   103 	C$pff.c$391$1_0$323 ==.
                                    104 ;	../src/pff.c: 391: }
                                    105 ; genEndFunction
      000015 5B 02            [ 2]  106 	addw	sp, #2
                           000017   107 	C$pff.c$391$1_0$323 ==.
                           000017   108 	XFpff$ld_word$0$0 ==.
      000017 81               [ 4]  109 	ret
                           000018   110 	Fpff$ld_dword$0$0 ==.
                           000018   111 	C$pff.c$393$1_0$325 ==.
                                    112 ;	../src/pff.c: 393: static DWORD ld_dword (const BYTE* ptr)	/* Load a 4-byte little-endian word */
                                    113 ; genLabel
                                    114 ;	-----------------------------------------
                                    115 ;	 function ld_dword
                                    116 ;	-----------------------------------------
                                    117 ;	Register assignment might be sub-optimal.
                                    118 ;	Stack space usage: 8 bytes.
      000018                        119 _ld_dword:
      000018 52 08            [ 2]  120 	sub	sp, #8
                           00001A   121 	C$pff.c$397$1_0$325 ==.
                                    122 ;	../src/pff.c: 397: rv = ptr[3];
                                    123 ; genAssign
      00001A 1E 0B            [ 2]  124 	ldw	x, (0x0b, sp)
                                    125 ; genPointerGet
      00001C E6 03            [ 1]  126 	ld	a, (0x3, x)
                                    127 ; genCast
                                    128 ; genAssign
      00001E 5F               [ 1]  129 	clrw	x
      00001F 90 5F            [ 1]  130 	clrw	y
                                    131 ; genAssign
      000021 97               [ 1]  132 	ld	xl, a
                           000022   133 	C$pff.c$398$1_0$325 ==.
                                    134 ;	../src/pff.c: 398: rv = rv << 8 | ptr[2];
                                    135 ; genLeftShiftLiteral
      000022 1F 02            [ 2]  136 	ldw	(0x02, sp), x
      000024 0F 04            [ 1]  137 	clr	(0x04, sp)
                                    138 ; genAssign
      000026 1E 0B            [ 2]  139 	ldw	x, (0x0b, sp)
                                    140 ; genPointerGet
      000028 E6 02            [ 1]  141 	ld	a, (0x2, x)
                                    142 ; genCast
                                    143 ; genAssign
      00002A 0F 07            [ 1]  144 	clr	(0x07, sp)
      00002C 5F               [ 1]  145 	clrw	x
      00002D 0F 05            [ 1]  146 	clr	(0x05, sp)
                                    147 ; genOr
      00002F 1A 04            [ 1]  148 	or	a, (0x04, sp)
      000031 95               [ 1]  149 	ld	xh, a
      000032 7B 03            [ 1]  150 	ld	a, (0x03, sp)
      000034 1A 07            [ 1]  151 	or	a, (0x07, sp)
      000036 90 95            [ 1]  152 	ld	yh, a
      000038 89               [ 2]  153 	pushw	x
      000039 7B 04            [ 1]  154 	ld	a, (0x04, sp)
      00003B 1A 02            [ 1]  155 	or	a, (2, sp)
      00003D 85               [ 2]  156 	popw	x
      00003E 97               [ 1]  157 	ld	xl, a
      00003F 90 9F            [ 1]  158 	ld	a, yl
      000041 1A 05            [ 1]  159 	or	a, (0x05, sp)
                                    160 ; genAssign
      000043 01               [ 1]  161 	rrwa	x
                           000044   162 	C$pff.c$399$1_0$325 ==.
                                    163 ;	../src/pff.c: 399: rv = rv << 8 | ptr[1];
                                    164 ; genLeftShiftLiteral
      000044 6B 01            [ 1]  165 	ld	(0x01, sp), a
      000046 61               [ 1]  166 	exg	a, yl
      000047 9F               [ 1]  167 	ld	a, xl
      000048 61               [ 1]  168 	exg	a, yl
      000049 0F 04            [ 1]  169 	clr	(0x04, sp)
                                    170 ; genAssign
      00004B 1E 0B            [ 2]  171 	ldw	x, (0x0b, sp)
                                    172 ; genPointerGet
      00004D E6 01            [ 1]  173 	ld	a, (0x1, x)
                                    174 ; genCast
                                    175 ; genAssign
      00004F 5F               [ 1]  176 	clrw	x
      000050 0F 06            [ 1]  177 	clr	(0x06, sp)
      000052 0F 05            [ 1]  178 	clr	(0x05, sp)
                                    179 ; genOr
      000054 1A 04            [ 1]  180 	or	a, (0x04, sp)
      000056 97               [ 1]  181 	ld	xl, a
      000057 89               [ 2]  182 	pushw	x
      000058 90 9F            [ 1]  183 	ld	a, yl
      00005A 1A 01            [ 1]  184 	or	a, (1, sp)
      00005C 85               [ 2]  185 	popw	x
      00005D 95               [ 1]  186 	ld	xh, a
      00005E 90 9E            [ 1]  187 	ld	a, yh
      000060 1A 06            [ 1]  188 	or	a, (0x06, sp)
      000062 90 97            [ 1]  189 	ld	yl, a
      000064 7B 01            [ 1]  190 	ld	a, (0x01, sp)
      000066 1A 05            [ 1]  191 	or	a, (0x05, sp)
                                    192 ; genAssign
                           000068   193 	C$pff.c$400$1_0$325 ==.
                                    194 ;	../src/pff.c: 400: rv = rv << 8 | ptr[0];
                                    195 ; genLeftShiftLiteral
      000068 1F 02            [ 2]  196 	ldw	(0x02, sp), x
      00006A 0F 04            [ 1]  197 	clr	(0x04, sp)
                                    198 ; genAssign
      00006C 1E 0B            [ 2]  199 	ldw	x, (0x0b, sp)
                                    200 ; genPointerGet
      00006E F6               [ 1]  201 	ld	a, (x)
                                    202 ; genCast
                                    203 ; genAssign
      00006F 0F 07            [ 1]  204 	clr	(0x07, sp)
      000071 5F               [ 1]  205 	clrw	x
      000072 0F 05            [ 1]  206 	clr	(0x05, sp)
                                    207 ; genOr
      000074 1A 04            [ 1]  208 	or	a, (0x04, sp)
      000076 95               [ 1]  209 	ld	xh, a
      000077 7B 03            [ 1]  210 	ld	a, (0x03, sp)
      000079 1A 07            [ 1]  211 	or	a, (0x07, sp)
      00007B 90 95            [ 1]  212 	ld	yh, a
      00007D 89               [ 2]  213 	pushw	x
      00007E 7B 04            [ 1]  214 	ld	a, (0x04, sp)
      000080 1A 02            [ 1]  215 	or	a, (2, sp)
      000082 85               [ 2]  216 	popw	x
      000083 97               [ 1]  217 	ld	xl, a
      000084 90 9F            [ 1]  218 	ld	a, yl
      000086 1A 05            [ 1]  219 	or	a, (0x05, sp)
                                    220 ; genAssign
      000088 61               [ 1]  221 	exg	a, yl
      000089 9E               [ 1]  222 	ld	a, xh
      00008A 61               [ 1]  223 	exg	a, yl
      00008B 95               [ 1]  224 	ld	xh, a
                           00008C   225 	C$pff.c$401$1_0$325 ==.
                                    226 ;	../src/pff.c: 401: return rv;
                                    227 ; genReturn
      00008C 51               [ 1]  228 	exgw	x, y
                                    229 ; genLabel
      00008D                        230 00101$:
                           00008D   231 	C$pff.c$402$1_0$325 ==.
                                    232 ;	../src/pff.c: 402: }
                                    233 ; genEndFunction
      00008D 5B 08            [ 2]  234 	addw	sp, #8
                           00008F   235 	C$pff.c$402$1_0$325 ==.
                           00008F   236 	XFpff$ld_dword$0$0 ==.
      00008F 81               [ 4]  237 	ret
                           000090   238 	Fpff$mem_set$0$0 ==.
                           000090   239 	C$pff.c$411$1_0$327 ==.
                                    240 ;	../src/pff.c: 411: static void mem_set (void* dst, int val, int cnt) {
                                    241 ; genLabel
                                    242 ;	-----------------------------------------
                                    243 ;	 function mem_set
                                    244 ;	-----------------------------------------
                                    245 ;	Register assignment might be sub-optimal.
                                    246 ;	Stack space usage: 2 bytes.
      000090                        247 _mem_set:
      000090 89               [ 2]  248 	pushw	x
                           000091   249 	C$pff.c$412$1_0$327 ==.
                                    250 ;	../src/pff.c: 412: char *d = (char*)dst;
                                    251 ; genCast
                                    252 ; genAssign
      000091 1E 05            [ 2]  253 	ldw	x, (0x05, sp)
                                    254 ; genAssign
                           000093   255 	C$pff.c$413$1_0$327 ==.
                                    256 ;	../src/pff.c: 413: while (cnt--) *d++ = (char)val;
                                    257 ; genAssign
      000093 1F 01            [ 2]  258 	ldw	(0x01, sp), x
                                    259 ; genAssign
      000095 16 09            [ 2]  260 	ldw	y, (0x09, sp)
                                    261 ; genLabel
      000097                        262 00101$:
                                    263 ; genAssign
      000097 93               [ 1]  264 	ldw	x, y
                                    265 ; genMinus
      000098 90 5A            [ 2]  266 	decw	y
                                    267 ; genIfx
      00009A 5D               [ 2]  268 	tnzw	x
      00009B 26 03            [ 1]  269 	jrne	00117$
      00009D CCr00rAD         [ 2]  270 	jp	00104$
      0000A0                        271 00117$:
                                    272 ; genCast
                                    273 ; genAssign
      0000A0 7B 08            [ 1]  274 	ld	a, (0x08, sp)
                                    275 ; genPointerSet
      0000A2 1E 01            [ 2]  276 	ldw	x, (0x01, sp)
      0000A4 F7               [ 1]  277 	ld	(x), a
                                    278 ; genPlus
      0000A5 1E 01            [ 2]  279 	ldw	x, (0x01, sp)
      0000A7 5C               [ 1]  280 	incw	x
      0000A8 1F 01            [ 2]  281 	ldw	(0x01, sp), x
      0000AA                        282 00118$:
                                    283 ; genGoto
      0000AA CCr00r97         [ 2]  284 	jp	00101$
                                    285 ; genLabel
      0000AD                        286 00104$:
                           0000AD   287 	C$pff.c$414$1_0$327 ==.
                                    288 ;	../src/pff.c: 414: }
                                    289 ; genEndFunction
      0000AD 85               [ 2]  290 	popw	x
                           0000AE   291 	C$pff.c$414$1_0$327 ==.
                           0000AE   292 	XFpff$mem_set$0$0 ==.
      0000AE 81               [ 4]  293 	ret
                           0000AF   294 	Fpff$mem_cmp$0$0 ==.
                           0000AF   295 	C$pff.c$417$1_0$329 ==.
                                    296 ;	../src/pff.c: 417: static int mem_cmp (const void* dst, const void* src, int cnt) {
                                    297 ; genLabel
                                    298 ;	-----------------------------------------
                                    299 ;	 function mem_cmp
                                    300 ;	-----------------------------------------
                                    301 ;	Register assignment might be sub-optimal.
                                    302 ;	Stack space usage: 10 bytes.
      0000AF                        303 _mem_cmp:
      0000AF 52 0A            [ 2]  304 	sub	sp, #10
                           0000B1   305 	C$pff.c$418$1_0$329 ==.
                                    306 ;	../src/pff.c: 418: const char *d = (const char *)dst, *s = (const char *)src;
                                    307 ; genCast
                                    308 ; genAssign
      0000B1 16 0D            [ 2]  309 	ldw	y, (0x0d, sp)
                                    310 ; genAssign
                                    311 ; genCast
                                    312 ; genAssign
      0000B3 1E 0F            [ 2]  313 	ldw	x, (0x0f, sp)
                                    314 ; genAssign
                           0000B5   315 	C$pff.c$419$1_0$329 ==.
                                    316 ;	../src/pff.c: 419: int r = 0;
                                    317 ; genAssign
      0000B5 0F 02            [ 1]  318 	clr	(0x02, sp)
      0000B7 0F 01            [ 1]  319 	clr	(0x01, sp)
                           0000B9   320 	C$pff.c$420$1_0$329 ==.
                                    321 ;	../src/pff.c: 420: while (cnt-- && (r = *d++ - *s++) == 0) ;
                                    322 ; genAssign
      0000B9 17 05            [ 2]  323 	ldw	(0x05, sp), y
                                    324 ; genAssign
      0000BB 1F 07            [ 2]  325 	ldw	(0x07, sp), x
                                    326 ; genAssign
      0000BD 16 11            [ 2]  327 	ldw	y, (0x11, sp)
      0000BF 17 09            [ 2]  328 	ldw	(0x09, sp), y
                                    329 ; genLabel
      0000C1                        330 00102$:
                                    331 ; genAssign
      0000C1 16 09            [ 2]  332 	ldw	y, (0x09, sp)
      0000C3 17 03            [ 2]  333 	ldw	(0x03, sp), y
                                    334 ; genMinus
      0000C5 1E 09            [ 2]  335 	ldw	x, (0x09, sp)
      0000C7 5A               [ 2]  336 	decw	x
      0000C8 1F 09            [ 2]  337 	ldw	(0x09, sp), x
                                    338 ; genIfx
      0000CA 1E 03            [ 2]  339 	ldw	x, (0x03, sp)
      0000CC 26 03            [ 1]  340 	jrne	00118$
      0000CE CCr00rF4         [ 2]  341 	jp	00104$
      0000D1                        342 00118$:
                                    343 ; genPointerGet
      0000D1 1E 05            [ 2]  344 	ldw	x, (0x05, sp)
      0000D3 F6               [ 1]  345 	ld	a, (x)
                                    346 ; genPlus
      0000D4 1E 05            [ 2]  347 	ldw	x, (0x05, sp)
      0000D6 5C               [ 1]  348 	incw	x
      0000D7 1F 05            [ 2]  349 	ldw	(0x05, sp), x
      0000D9                        350 00119$:
                                    351 ; genCast
                                    352 ; genAssign
      0000D9 5F               [ 1]  353 	clrw	x
      0000DA 97               [ 1]  354 	ld	xl, a
                                    355 ; genPointerGet
      0000DB 16 07            [ 2]  356 	ldw	y, (0x07, sp)
      0000DD 90 F6            [ 1]  357 	ld	a, (y)
                                    358 ; genPlus
      0000DF 16 07            [ 2]  359 	ldw	y, (0x07, sp)
      0000E1 90 5C            [ 1]  360 	incw	y
      0000E3 17 07            [ 2]  361 	ldw	(0x07, sp), y
                                    362 ; genCast
                                    363 ; genAssign
      0000E5 6B 04            [ 1]  364 	ld	(0x04, sp), a
      0000E7 0F 03            [ 1]  365 	clr	(0x03, sp)
                                    366 ; genMinus
      0000E9 72 F0 03         [ 2]  367 	subw	x, (0x03, sp)
                                    368 ; genAssign
      0000EC 1F 01            [ 2]  369 	ldw	(0x01, sp), x
                                    370 ; genIfx
      0000EE 5D               [ 2]  371 	tnzw	x
      0000EF 26 03            [ 1]  372 	jrne	00120$
      0000F1 CCr00rC1         [ 2]  373 	jp	00102$
      0000F4                        374 00120$:
                                    375 ; genLabel
      0000F4                        376 00104$:
                           0000F4   377 	C$pff.c$421$1_0$329 ==.
                                    378 ;	../src/pff.c: 421: return r;
                                    379 ; genReturn
      0000F4 1E 01            [ 2]  380 	ldw	x, (0x01, sp)
                                    381 ; genLabel
      0000F6                        382 00105$:
                           0000F6   383 	C$pff.c$422$1_0$329 ==.
                                    384 ;	../src/pff.c: 422: }
                                    385 ; genEndFunction
      0000F6 5B 0A            [ 2]  386 	addw	sp, #10
                           0000F8   387 	C$pff.c$422$1_0$329 ==.
                           0000F8   388 	XFpff$mem_cmp$0$0 ==.
      0000F8 81               [ 4]  389 	ret
                           0000F9   390 	Fpff$get_fat$0$0 ==.
                           0000F9   391 	C$pff.c$430$1_0$331 ==.
                                    392 ;	../src/pff.c: 430: static CLUST get_fat (	/* 1:IO error, Else:Cluster status */
                                    393 ; genLabel
                                    394 ;	-----------------------------------------
                                    395 ;	 function get_fat
                                    396 ;	-----------------------------------------
                                    397 ;	Register assignment might be sub-optimal.
                                    398 ;	Stack space usage: 18 bytes.
      0000F9                        399 _get_fat:
      0000F9 52 12            [ 2]  400 	sub	sp, #18
                           0000FB   401 	C$pff.c$435$2_0$331 ==.
                                    402 ;	../src/pff.c: 435: FATFS *fs = FatFs;
                                    403 ; genAssign
      0000FB 90 CEu00u00      [ 2]  404 	ldw	y, _FatFs+0
                           0000FF   405 	C$pff.c$440$1_0$331 ==.
                                    406 ;	../src/pff.c: 440: if (clst < 2 || clst >= fs->n_fatent) return 1;	/* Range check */
                                    407 ; genCmp
                                    408 ; genCmpTop
      0000FF 1E 17            [ 2]  409 	ldw	x, (0x17, sp)
      000101 A3 00 02         [ 2]  410 	cpw	x, #0x0002
      000104 7B 16            [ 1]  411 	ld	a, (0x16, sp)
      000106 A2 00            [ 1]  412 	sbc	a, #0x00
      000108 7B 15            [ 1]  413 	ld	a, (0x15, sp)
      00010A A2 00            [ 1]  414 	sbc	a, #0x00
      00010C 24 03            [ 1]  415 	jrnc	00125$
      00010E CCr01r2F         [ 2]  416 	jp	00101$
      000111                        417 00125$:
                                    418 ; skipping generated iCode
                                    419 ; genAssign
      000111 93               [ 1]  420 	ldw	x, y
                                    421 ; genPointerGet
      000112 E6 09            [ 1]  422 	ld	a, (0x9, x)
      000114 6B 12            [ 1]  423 	ld	(0x12, sp), a
      000116 E6 08            [ 1]  424 	ld	a, (0x8, x)
      000118 6B 11            [ 1]  425 	ld	(0x11, sp), a
      00011A EE 06            [ 2]  426 	ldw	x, (0x6, x)
      00011C 1F 0F            [ 2]  427 	ldw	(0x0f, sp), x
                                    428 ; genCmp
                                    429 ; genCmpTop
      00011E 1E 17            [ 2]  430 	ldw	x, (0x17, sp)
      000120 13 11            [ 2]  431 	cpw	x, (0x11, sp)
      000122 7B 16            [ 1]  432 	ld	a, (0x16, sp)
      000124 12 10            [ 1]  433 	sbc	a, (0x10, sp)
      000126 7B 15            [ 1]  434 	ld	a, (0x15, sp)
      000128 12 0F            [ 1]  435 	sbc	a, (0x0f, sp)
      00012A 24 03            [ 1]  436 	jrnc	00126$
      00012C CCr01r36         [ 2]  437 	jp	00102$
      00012F                        438 00126$:
                                    439 ; skipping generated iCode
                                    440 ; genLabel
      00012F                        441 00101$:
                                    442 ; genReturn
      00012F 5F               [ 1]  443 	clrw	x
      000130 5C               [ 1]  444 	incw	x
      000131 90 5F            [ 1]  445 	clrw	y
      000133 CCr01rAE         [ 2]  446 	jp	00108$
                                    447 ; genLabel
      000136                        448 00102$:
                           000136   449 	C$pff.c$442$1_0$331 ==.
                                    450 ;	../src/pff.c: 442: switch (fs->fs_type) {
                                    451 ; genPointerGet
      000136 90 F6            [ 1]  452 	ld	a, (y)
                                    453 ; genCmpEQorNE
      000138 A1 03            [ 1]  454 	cp	a, #0x03
      00013A 26 03            [ 1]  455 	jrne	00128$
      00013C CCr01r42         [ 2]  456 	jp	00129$
      00013F                        457 00128$:
      00013F CCr01rAA         [ 2]  458 	jp	00107$
      000142                        459 00129$:
                                    460 ; skipping generated iCode
                           000142   461 	C$pff.c$464$2_0$332 ==.
                                    462 ;	../src/pff.c: 464: if (disk_readp(buf, fs->fatbase + clst / 128, ((UINT)clst % 128) * 4, 4)) break;
                                    463 ; genCast
                                    464 ; genAssign
      000142 1E 17            [ 2]  465 	ldw	x, (0x17, sp)
                                    466 ; genAnd
      000144 9F               [ 1]  467 	ld	a, xl
      000145 A4 7F            [ 1]  468 	and	a, #0x7f
      000147 97               [ 1]  469 	ld	xl, a
      000148 4F               [ 1]  470 	clr	a
      000149 95               [ 1]  471 	ld	xh, a
                                    472 ; genLeftShiftLiteral
      00014A 58               [ 2]  473 	sllw	x
      00014B 58               [ 2]  474 	sllw	x
      00014C 1F 05            [ 2]  475 	ldw	(0x05, sp), x
                                    476 ; genAssign
      00014E 93               [ 1]  477 	ldw	x, y
                                    478 ; genPointerGet
      00014F E6 0D            [ 1]  479 	ld	a, (0xd, x)
      000151 6B 0A            [ 1]  480 	ld	(0x0a, sp), a
      000153 E6 0C            [ 1]  481 	ld	a, (0xc, x)
      000155 EE 0A            [ 2]  482 	ldw	x, (0xa, x)
      000157 1F 07            [ 2]  483 	ldw	(0x07, sp), x
                                    484 ; genRightShiftLiteral
      000159 1E 17            [ 2]  485 	ldw	x, (0x17, sp)
      00015B 16 15            [ 2]  486 	ldw	y, (0x15, sp)
      00015D 88               [ 1]  487 	push	a
      00015E 4F               [ 1]  488 	clr	a
      00015F 90 01            [ 1]  489 	rrwa	y
      000161 01               [ 1]  490 	rrwa	x
      000162 48               [ 1]  491 	sll	a
      000163 59               [ 2]  492 	rlcw	x
      000164 90 59            [ 2]  493 	rlcw	y
      000166 84               [ 1]  494 	pop	a
      000167 1F 0D            [ 2]  495 	ldw	(0x0d, sp), x
                                    496 ; genPlus
      000169 95               [ 1]  497 	ld	xh, a
      00016A 41               [ 1]  498 	exg	a, xl
      00016B 7B 0A            [ 1]  499 	ld	a, (0x0a, sp)
      00016D 41               [ 1]  500 	exg	a, xl
      00016E 72 FB 0D         [ 2]  501 	addw	x, (0x0d, sp)
      000171 90 9F            [ 1]  502 	ld	a, yl
      000173 19 08            [ 1]  503 	adc	a, (0x08, sp)
      000175 6B 10            [ 1]  504 	ld	(0x10, sp), a
      000177 90 9E            [ 1]  505 	ld	a, yh
      000179 19 07            [ 1]  506 	adc	a, (0x07, sp)
      00017B 6B 0F            [ 1]  507 	ld	(0x0f, sp), a
                                    508 ; skipping iCode since result will be rematerialized
                                    509 ; skipping iCode since result will be rematerialized
                                    510 ; genIPush
      00017D 4B 04            [ 1]  511 	push	#0x04
      00017F 4B 00            [ 1]  512 	push	#0x00
                                    513 ; genIPush
      000181 16 07            [ 2]  514 	ldw	y, (0x07, sp)
      000183 90 89            [ 2]  515 	pushw	y
                                    516 ; genIPush
      000185 89               [ 2]  517 	pushw	x
      000186 1E 15            [ 2]  518 	ldw	x, (0x15, sp)
      000188 89               [ 2]  519 	pushw	x
                                    520 ; genIPush
      000189 96               [ 1]  521 	ldw	x, sp
      00018A 1C 00 09         [ 2]  522 	addw	x, #9
      00018D 89               [ 2]  523 	pushw	x
                                    524 ; genCall
      00018E CDr00r00         [ 4]  525 	call	_disk_readp
      000191 5B 0A            [ 2]  526 	addw	sp, #10
                                    527 ; genIfx
      000193 4D               [ 1]  528 	tnz	a
      000194 27 03            [ 1]  529 	jreq	00130$
      000196 CCr01rAA         [ 2]  530 	jp	00107$
      000199                        531 00130$:
                           000199   532 	C$pff.c$465$2_0$332 ==.
                                    533 ;	../src/pff.c: 465: return ld_dword(buf) & 0x0FFFFFFF;
                                    534 ; skipping iCode since result will be rematerialized
                                    535 ; skipping iCode since result will be rematerialized
                                    536 ; genIPush
      000199 96               [ 1]  537 	ldw	x, sp
      00019A 5C               [ 1]  538 	incw	x
      00019B 89               [ 2]  539 	pushw	x
                                    540 ; genCall
      00019C CDr00r18         [ 4]  541 	call	_ld_dword
      00019F 5B 02            [ 2]  542 	addw	sp, #2
                                    543 ; genAnd
      0001A1 90 9E            [ 1]  544 	ld	a, yh
      0001A3 A4 0F            [ 1]  545 	and	a, #0x0f
                                    546 ; genReturn
      0001A5 90 95            [ 1]  547 	ld	yh, a
      0001A7 CCr01rAE         [ 2]  548 	jp	00108$
                           0001AA   549 	C$pff.c$467$1_0$331 ==.
                                    550 ;	../src/pff.c: 467: }
                                    551 ; genLabel
      0001AA                        552 00107$:
                           0001AA   553 	C$pff.c$469$1_0$331 ==.
                                    554 ;	../src/pff.c: 469: return 1;	/* An error occured at the disk I/O layer */
                                    555 ; genReturn
      0001AA 5F               [ 1]  556 	clrw	x
      0001AB 5C               [ 1]  557 	incw	x
      0001AC 90 5F            [ 1]  558 	clrw	y
                                    559 ; genLabel
      0001AE                        560 00108$:
                           0001AE   561 	C$pff.c$470$1_0$331 ==.
                                    562 ;	../src/pff.c: 470: }
                                    563 ; genEndFunction
      0001AE 5B 12            [ 2]  564 	addw	sp, #18
                           0001B0   565 	C$pff.c$470$1_0$331 ==.
                           0001B0   566 	XFpff$get_fat$0$0 ==.
      0001B0 81               [ 4]  567 	ret
                           0001B1   568 	Fpff$clust2sect$0$0 ==.
                           0001B1   569 	C$pff.c$479$1_0$334 ==.
                                    570 ;	../src/pff.c: 479: static DWORD clust2sect (	/* !=0: Sector number, 0: Failed - invalid cluster# */
                                    571 ; genLabel
                                    572 ;	-----------------------------------------
                                    573 ;	 function clust2sect
                                    574 ;	-----------------------------------------
                                    575 ;	Register assignment might be sub-optimal.
                                    576 ;	Stack space usage: 8 bytes.
      0001B1                        577 _clust2sect:
      0001B1 52 08            [ 2]  578 	sub	sp, #8
                           0001B3   579 	C$pff.c$483$2_0$334 ==.
                                    580 ;	../src/pff.c: 483: FATFS *fs = FatFs;
                                    581 ; genAssign
      0001B3 CEu00u00         [ 2]  582 	ldw	x, _FatFs+0
      0001B6 1F 07            [ 2]  583 	ldw	(0x07, sp), x
                           0001B8   584 	C$pff.c$486$1_0$334 ==.
                                    585 ;	../src/pff.c: 486: clst -= 2;
                                    586 ; genMinus
      0001B8 1E 0D            [ 2]  587 	ldw	x, (0x0d, sp)
      0001BA 1D 00 02         [ 2]  588 	subw	x, #0x0002
      0001BD 16 0B            [ 2]  589 	ldw	y, (0x0b, sp)
      0001BF 24 02            [ 1]  590 	jrnc	00110$
      0001C1 90 5A            [ 2]  591 	decw	y
      0001C3                        592 00110$:
                                    593 ; genAssign
      0001C3 1F 0D            [ 2]  594 	ldw	(0x0d, sp), x
      0001C5 17 0B            [ 2]  595 	ldw	(0x0b, sp), y
                           0001C7   596 	C$pff.c$487$1_0$334 ==.
                                    597 ;	../src/pff.c: 487: if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
                                    598 ; genAssign
      0001C7 1E 07            [ 2]  599 	ldw	x, (0x07, sp)
                                    600 ; genPointerGet
      0001C9 90 93            [ 1]  601 	ldw	y, x
      0001CB 90 EE 08         [ 2]  602 	ldw	y, (0x8, y)
      0001CE EE 06            [ 2]  603 	ldw	x, (0x6, x)
                                    604 ; genMinus
      0001D0 72 A2 00 02      [ 2]  605 	subw	y, #0x0002
      0001D4 17 05            [ 2]  606 	ldw	(0x05, sp), y
      0001D6 24 01            [ 1]  607 	jrnc	00111$
      0001D8 5A               [ 2]  608 	decw	x
      0001D9                        609 00111$:
      0001D9 1F 03            [ 2]  610 	ldw	(0x03, sp), x
                                    611 ; genCmp
                                    612 ; genCmpTop
      0001DB 1E 0D            [ 2]  613 	ldw	x, (0x0d, sp)
      0001DD 13 05            [ 2]  614 	cpw	x, (0x05, sp)
      0001DF 7B 0C            [ 1]  615 	ld	a, (0x0c, sp)
      0001E1 12 04            [ 1]  616 	sbc	a, (0x04, sp)
      0001E3 7B 0B            [ 1]  617 	ld	a, (0x0b, sp)
      0001E5 12 03            [ 1]  618 	sbc	a, (0x03, sp)
      0001E7 24 03            [ 1]  619 	jrnc	00112$
      0001E9 CCr01rF2         [ 2]  620 	jp	00102$
      0001EC                        621 00112$:
                                    622 ; skipping generated iCode
                                    623 ; genReturn
      0001EC 5F               [ 1]  624 	clrw	x
      0001ED 90 5F            [ 1]  625 	clrw	y
      0001EF CCr02r24         [ 2]  626 	jp	00103$
                                    627 ; genLabel
      0001F2                        628 00102$:
                           0001F2   629 	C$pff.c$488$1_0$334 ==.
                                    630 ;	../src/pff.c: 488: return (DWORD)clst * fs->csize + fs->database;
                                    631 ; genAssign
      0001F2 1E 07            [ 2]  632 	ldw	x, (0x07, sp)
                                    633 ; genPointerGet
      0001F4 E6 02            [ 1]  634 	ld	a, (0x2, x)
                                    635 ; genCast
                                    636 ; genAssign
      0001F6 5F               [ 1]  637 	clrw	x
      0001F7 97               [ 1]  638 	ld	xl, a
      0001F8 90 5F            [ 1]  639 	clrw	y
                                    640 ; genIPush
      0001FA 89               [ 2]  641 	pushw	x
      0001FB 90 89            [ 2]  642 	pushw	y
                                    643 ; genIPush
      0001FD 1E 11            [ 2]  644 	ldw	x, (0x11, sp)
      0001FF 89               [ 2]  645 	pushw	x
      000200 1E 11            [ 2]  646 	ldw	x, (0x11, sp)
      000202 89               [ 2]  647 	pushw	x
                                    648 ; genCall
      000203 CDr00r00         [ 4]  649 	call	__mullong
      000206 5B 08            [ 2]  650 	addw	sp, #8
      000208 1F 03            [ 2]  651 	ldw	(0x03, sp), x
      00020A 17 01            [ 2]  652 	ldw	(0x01, sp), y
                                    653 ; genAssign
      00020C 1E 07            [ 2]  654 	ldw	x, (0x07, sp)
                                    655 ; genPointerGet
      00020E 90 93            [ 1]  656 	ldw	y, x
      000210 90 EE 14         [ 2]  657 	ldw	y, (0x14, y)
      000213 EE 12            [ 2]  658 	ldw	x, (0x12, x)
      000215 1F 05            [ 2]  659 	ldw	(0x05, sp), x
                                    660 ; genPlus
      000217 93               [ 1]  661 	ldw	x, y
      000218 72 FB 03         [ 2]  662 	addw	x, (0x03, sp)
      00021B 16 05            [ 2]  663 	ldw	y, (0x05, sp)
      00021D 24 02            [ 1]  664 	jrnc	00113$
      00021F 90 5C            [ 1]  665 	incw	y
      000221                        666 00113$:
      000221 72 F9 01         [ 2]  667 	addw	y, (0x01, sp)
                                    668 ; genReturn
                                    669 ; genLabel
      000224                        670 00103$:
                           000224   671 	C$pff.c$489$1_0$334 ==.
                                    672 ;	../src/pff.c: 489: }
                                    673 ; genEndFunction
      000224 5B 08            [ 2]  674 	addw	sp, #8
                           000226   675 	C$pff.c$489$1_0$334 ==.
                           000226   676 	XFpff$clust2sect$0$0 ==.
      000226 81               [ 4]  677 	ret
                           000227   678 	Fpff$get_clust$0$0 ==.
                           000227   679 	C$pff.c$492$1_0$336 ==.
                                    680 ;	../src/pff.c: 492: static CLUST get_clust (
                                    681 ; genLabel
                                    682 ;	-----------------------------------------
                                    683 ;	 function get_clust
                                    684 ;	-----------------------------------------
                                    685 ;	Register assignment might be sub-optimal.
                                    686 ;	Stack space usage: 4 bytes.
      000227                        687 _get_clust:
      000227 52 04            [ 2]  688 	sub	sp, #4
                           000229   689 	C$pff.c$501$2_0$337 ==.
                                    690 ;	../src/pff.c: 501: clst = ld_word(dir+DIR_FstClusHI);
                                    691 ; genPlus
      000229 1E 07            [ 2]  692 	ldw	x, (0x07, sp)
      00022B 1C 00 14         [ 2]  693 	addw	x, #0x0014
                                    694 ; genIPush
      00022E 89               [ 2]  695 	pushw	x
                                    696 ; genCall
      00022F CDr00r00         [ 4]  697 	call	_ld_word
      000232 5B 02            [ 2]  698 	addw	sp, #2
                                    699 ; genCast
                                    700 ; genAssign
      000234 51               [ 1]  701 	exgw	x, y
      000235 5F               [ 1]  702 	clrw	x
                                    703 ; genAssign
                           000236   704 	C$pff.c$502$2_0$337 ==.
                                    705 ;	../src/pff.c: 502: clst <<= 16;
                                    706 ; genLeftShiftLiteral
      000236 5F               [ 1]  707 	clrw	x
                                    708 ; genAssign
      000237 1F 03            [ 2]  709 	ldw	(0x03, sp), x
      000239 17 01            [ 2]  710 	ldw	(0x01, sp), y
                           00023B   711 	C$pff.c$504$1_0$336 ==.
                                    712 ;	../src/pff.c: 504: clst |= ld_word(dir+DIR_FstClusLO);
                                    713 ; genPlus
      00023B 1E 07            [ 2]  714 	ldw	x, (0x07, sp)
      00023D 1C 00 1A         [ 2]  715 	addw	x, #0x001a
                                    716 ; genIPush
      000240 89               [ 2]  717 	pushw	x
                                    718 ; genCall
      000241 CDr00r00         [ 4]  719 	call	_ld_word
      000244 5B 02            [ 2]  720 	addw	sp, #2
                                    721 ; genCast
                                    722 ; genAssign
      000246 4F               [ 1]  723 	clr	a
      000247 90 5F            [ 1]  724 	clrw	y
                                    725 ; genOr
      000249 1A 02            [ 1]  726 	or	a, (0x02, sp)
      00024B 90 97            [ 1]  727 	ld	yl, a
      00024D 9F               [ 1]  728 	ld	a, xl
      00024E 1A 04            [ 1]  729 	or	a, (0x04, sp)
      000250 97               [ 1]  730 	ld	xl, a
      000251 9E               [ 1]  731 	ld	a, xh
      000252 1A 03            [ 1]  732 	or	a, (0x03, sp)
      000254 95               [ 1]  733 	ld	xh, a
      000255 90 9E            [ 1]  734 	ld	a, yh
      000257 1A 01            [ 1]  735 	or	a, (0x01, sp)
                                    736 ; genAssign
                           000259   737 	C$pff.c$506$1_0$336 ==.
                                    738 ;	../src/pff.c: 506: return clst;
                                    739 ; genReturn
      000259 90 95            [ 1]  740 	ld	yh, a
                                    741 ; genLabel
      00025B                        742 00105$:
                           00025B   743 	C$pff.c$507$1_0$336 ==.
                                    744 ;	../src/pff.c: 507: }
                                    745 ; genEndFunction
      00025B 5B 04            [ 2]  746 	addw	sp, #4
                           00025D   747 	C$pff.c$507$1_0$336 ==.
                           00025D   748 	XFpff$get_clust$0$0 ==.
      00025D 81               [ 4]  749 	ret
                           00025E   750 	Fpff$dir_rewind$0$0 ==.
                           00025E   751 	C$pff.c$514$1_0$339 ==.
                                    752 ;	../src/pff.c: 514: static FRESULT dir_rewind (
                                    753 ; genLabel
                                    754 ;	-----------------------------------------
                                    755 ;	 function dir_rewind
                                    756 ;	-----------------------------------------
                                    757 ;	Register assignment might be sub-optimal.
                                    758 ;	Stack space usage: 12 bytes.
      00025E                        759 _dir_rewind:
      00025E 52 0C            [ 2]  760 	sub	sp, #12
                           000260   761 	C$pff.c$519$2_0$339 ==.
                                    762 ;	../src/pff.c: 519: FATFS *fs = FatFs;
                                    763 ; genAssign
      000260 CEu00u00         [ 2]  764 	ldw	x, _FatFs+0
      000263 1F 07            [ 2]  765 	ldw	(0x07, sp), x
                           000265   766 	C$pff.c$522$1_0$339 ==.
                                    767 ;	../src/pff.c: 522: dj->index = 0;
                                    768 ; genAssign
      000265 16 0F            [ 2]  769 	ldw	y, (0x0f, sp)
      000267 17 05            [ 2]  770 	ldw	(0x05, sp), y
                                    771 ; genPointerSet
      000269 1E 05            [ 2]  772 	ldw	x, (0x05, sp)
      00026B 6F 01            [ 1]  773 	clr	(0x1, x)
      00026D 7F               [ 1]  774 	clr	(x)
                           00026E   775 	C$pff.c$523$1_0$339 ==.
                                    776 ;	../src/pff.c: 523: clst = dj->sclust;
                                    777 ; genAssign
      00026E 1E 05            [ 2]  778 	ldw	x, (0x05, sp)
                                    779 ; genPointerGet
      000270 90 93            [ 1]  780 	ldw	y, x
      000272 90 EE 06         [ 2]  781 	ldw	y, (0x6, y)
      000275 EE 04            [ 2]  782 	ldw	x, (0x4, x)
                                    783 ; genAssign
      000277 17 0B            [ 2]  784 	ldw	(0x0b, sp), y
      000279 1F 09            [ 2]  785 	ldw	(0x09, sp), x
                           00027B   786 	C$pff.c$524$1_0$339 ==.
                                    787 ;	../src/pff.c: 524: if (clst == 1 || clst >= fs->n_fatent) {	/* Check start cluster range */
                                    788 ; genCmpEQorNE
      00027B 1E 0B            [ 2]  789 	ldw	x, (0x0b, sp)
      00027D 5A               [ 2]  790 	decw	x
      00027E 26 07            [ 1]  791 	jrne	00129$
      000280 1E 09            [ 2]  792 	ldw	x, (0x09, sp)
      000282 26 03            [ 1]  793 	jrne	00129$
      000284 CCr02rA5         [ 2]  794 	jp	00101$
      000287                        795 00129$:
                                    796 ; skipping generated iCode
                                    797 ; genAssign
      000287 1E 07            [ 2]  798 	ldw	x, (0x07, sp)
                                    799 ; genPointerGet
      000289 90 93            [ 1]  800 	ldw	y, x
      00028B 90 EE 08         [ 2]  801 	ldw	y, (0x8, y)
      00028E 17 03            [ 2]  802 	ldw	(0x03, sp), y
      000290 EE 06            [ 2]  803 	ldw	x, (0x6, x)
      000292 1F 01            [ 2]  804 	ldw	(0x01, sp), x
                                    805 ; genCmp
                                    806 ; genCmpTop
      000294 1E 0B            [ 2]  807 	ldw	x, (0x0b, sp)
      000296 13 03            [ 2]  808 	cpw	x, (0x03, sp)
      000298 7B 0A            [ 1]  809 	ld	a, (0x0a, sp)
      00029A 12 02            [ 1]  810 	sbc	a, (0x02, sp)
      00029C 7B 09            [ 1]  811 	ld	a, (0x09, sp)
      00029E 12 01            [ 1]  812 	sbc	a, (0x01, sp)
      0002A0 24 03            [ 1]  813 	jrnc	00131$
      0002A2 CCr02rAA         [ 2]  814 	jp	00106$
      0002A5                        815 00131$:
                                    816 ; skipping generated iCode
                                    817 ; genLabel
      0002A5                        818 00101$:
                           0002A5   819 	C$pff.c$525$2_0$340 ==.
                                    820 ;	../src/pff.c: 525: return FR_DISK_ERR;
                                    821 ; genReturn
      0002A5 A6 01            [ 1]  822 	ld	a, #0x01
      0002A7 CCr02rEB         [ 2]  823 	jp	00109$
                           0002AA   824 	C$pff.c$527$1_0$339 ==.
                                    825 ;	../src/pff.c: 527: if (PF_FS_FAT32 && !clst && (_FS_32ONLY || fs->fs_type == FS_FAT32)) {	/* Replace cluster# 0 with root cluster# if in FAT32 */
                                    826 ; genLabel
      0002AA                        827 00106$:
                                    828 ; genIfx
      0002AA 1E 0B            [ 2]  829 	ldw	x, (0x0b, sp)
      0002AC 26 04            [ 1]  830 	jrne	00132$
      0002AE 1E 09            [ 2]  831 	ldw	x, (0x09, sp)
      0002B0 27 03            [ 1]  832 	jreq	00133$
      0002B2                        833 00132$:
      0002B2 CCr02rC2         [ 2]  834 	jp	00105$
      0002B5                        835 00133$:
                           0002B5   836 	C$pff.c$528$2_0$341 ==.
                                    837 ;	../src/pff.c: 528: clst = (CLUST)fs->dirbase;
                                    838 ; genAssign
                                    839 ; genPointerGet
      0002B5 1E 07            [ 2]  840 	ldw	x, (0x07, sp)
      0002B7 90 93            [ 1]  841 	ldw	y, x
      0002B9 90 EE 10         [ 2]  842 	ldw	y, (0x10, y)
      0002BC 17 0B            [ 2]  843 	ldw	(0x0b, sp), y
      0002BE EE 0E            [ 2]  844 	ldw	x, (0xe, x)
      0002C0 1F 09            [ 2]  845 	ldw	(0x09, sp), x
                                    846 ; genAssign
                                    847 ; genLabel
      0002C2                        848 00105$:
                           0002C2   849 	C$pff.c$530$1_0$339 ==.
                                    850 ;	../src/pff.c: 530: dj->clust = clst;						/* Current cluster */
                                    851 ; genPlus
      0002C2 1E 05            [ 2]  852 	ldw	x, (0x05, sp)
      0002C4 1C 00 08         [ 2]  853 	addw	x, #0x0008
                                    854 ; genPointerSet
      0002C7 16 0B            [ 2]  855 	ldw	y, (0x0b, sp)
      0002C9 EF 02            [ 2]  856 	ldw	(0x2, x), y
      0002CB 16 09            [ 2]  857 	ldw	y, (0x09, sp)
      0002CD FF               [ 2]  858 	ldw	(x), y
                           0002CE   859 	C$pff.c$531$1_0$339 ==.
                                    860 ;	../src/pff.c: 531: dj->sect = (_FS_32ONLY || clst) ? clust2sect(clst) : fs->dirbase;	/* Current sector */
                                    861 ; genPlus
      0002CE 1E 05            [ 2]  862 	ldw	x, (0x05, sp)
      0002D0 1C 00 0C         [ 2]  863 	addw	x, #0x000c
      0002D3 1F 07            [ 2]  864 	ldw	(0x07, sp), x
                                    865 ; genIPush
      0002D5 1E 0B            [ 2]  866 	ldw	x, (0x0b, sp)
      0002D7 89               [ 2]  867 	pushw	x
      0002D8 1E 0B            [ 2]  868 	ldw	x, (0x0b, sp)
      0002DA 89               [ 2]  869 	pushw	x
                                    870 ; genCall
      0002DB CDr01rB1         [ 4]  871 	call	_clust2sect
      0002DE 5B 04            [ 2]  872 	addw	sp, #4
      0002E0 51               [ 1]  873 	exgw	x, y
                                    874 ; genAssign
      0002E1 1F 09            [ 2]  875 	ldw	(0x09, sp), x
                                    876 ; genPointerSet
      0002E3 1E 07            [ 2]  877 	ldw	x, (0x07, sp)
      0002E5 EF 02            [ 2]  878 	ldw	(0x2, x), y
      0002E7 16 09            [ 2]  879 	ldw	y, (0x09, sp)
      0002E9 FF               [ 2]  880 	ldw	(x), y
                           0002EA   881 	C$pff.c$533$1_0$339 ==.
                                    882 ;	../src/pff.c: 533: return FR_OK;	/* Seek succeeded */
                                    883 ; genReturn
      0002EA 4F               [ 1]  884 	clr	a
                                    885 ; genLabel
      0002EB                        886 00109$:
                           0002EB   887 	C$pff.c$534$1_0$339 ==.
                                    888 ;	../src/pff.c: 534: }
                                    889 ; genEndFunction
      0002EB 5B 0C            [ 2]  890 	addw	sp, #12
                           0002ED   891 	C$pff.c$534$1_0$339 ==.
                           0002ED   892 	XFpff$dir_rewind$0$0 ==.
      0002ED 81               [ 4]  893 	ret
                           0002EE   894 	Fpff$dir_next$0$0 ==.
                           0002EE   895 	C$pff.c$543$1_0$343 ==.
                                    896 ;	../src/pff.c: 543: static FRESULT dir_next (	/* FR_OK:Succeeded, FR_NO_FILE:End of table */
                                    897 ; genLabel
                                    898 ;	-----------------------------------------
                                    899 ;	 function dir_next
                                    900 ;	-----------------------------------------
                                    901 ;	Register assignment might be sub-optimal.
                                    902 ;	Stack space usage: 20 bytes.
      0002EE                        903 _dir_next:
      0002EE 52 14            [ 2]  904 	sub	sp, #20
                           0002F0   905 	C$pff.c$549$2_0$343 ==.
                                    906 ;	../src/pff.c: 549: FATFS *fs = FatFs;
                                    907 ; genAssign
      0002F0 CEu00u00         [ 2]  908 	ldw	x, _FatFs+0
      0002F3 1F 05            [ 2]  909 	ldw	(0x05, sp), x
                           0002F5   910 	C$pff.c$552$1_0$343 ==.
                                    911 ;	../src/pff.c: 552: i = dj->index + 1;
                                    912 ; genAssign
      0002F5 16 17            [ 2]  913 	ldw	y, (0x17, sp)
      0002F7 17 07            [ 2]  914 	ldw	(0x07, sp), y
                                    915 ; genPointerGet
      0002F9 1E 07            [ 2]  916 	ldw	x, (0x07, sp)
      0002FB FE               [ 2]  917 	ldw	x, (x)
                                    918 ; genCast
                                    919 ; genAssign
                                    920 ; genPlus
      0002FC 5C               [ 1]  921 	incw	x
                                    922 ; genCast
                                    923 ; genAssign
                                    924 ; genAssign
      0002FD 1F 09            [ 2]  925 	ldw	(0x09, sp), x
                           0002FF   926 	C$pff.c$553$1_0$343 ==.
                                    927 ;	../src/pff.c: 553: if (!i || !dj->sect) return FR_NO_FILE;	/* Report EOT when index has reached 65535 */
                                    928 ; genIfx
      0002FF 1E 09            [ 2]  929 	ldw	x, (0x09, sp)
      000301 26 03            [ 1]  930 	jrne	00154$
      000303 CCr03r24         [ 2]  931 	jp	00101$
      000306                        932 00154$:
                                    933 ; genPlus
      000306 1E 07            [ 2]  934 	ldw	x, (0x07, sp)
      000308 1C 00 0C         [ 2]  935 	addw	x, #0x000c
      00030B 1F 0B            [ 2]  936 	ldw	(0x0b, sp), x
                                    937 ; genPointerGet
      00030D 1E 0B            [ 2]  938 	ldw	x, (0x0b, sp)
      00030F 90 93            [ 1]  939 	ldw	y, x
      000311 90 EE 02         [ 2]  940 	ldw	y, (0x2, y)
      000314 17 03            [ 2]  941 	ldw	(0x03, sp), y
      000316 FE               [ 2]  942 	ldw	x, (x)
      000317 1F 01            [ 2]  943 	ldw	(0x01, sp), x
                                    944 ; genIfx
      000319 1E 03            [ 2]  945 	ldw	x, (0x03, sp)
      00031B 26 04            [ 1]  946 	jrne	00155$
      00031D 1E 01            [ 2]  947 	ldw	x, (0x01, sp)
      00031F 27 03            [ 1]  948 	jreq	00156$
      000321                        949 00155$:
      000321 CCr03r29         [ 2]  950 	jp	00102$
      000324                        951 00156$:
                                    952 ; genLabel
      000324                        953 00101$:
                                    954 ; genReturn
      000324 A6 03            [ 1]  955 	ld	a, #0x03
      000326 CCr04r10         [ 2]  956 	jp	00117$
                                    957 ; genLabel
      000329                        958 00102$:
                           000329   959 	C$pff.c$555$1_0$343 ==.
                                    960 ;	../src/pff.c: 555: if (!(i % 16)) {		/* Sector changed? */
                                    961 ; genCast
                                    962 ; genAssign
      000329 16 09            [ 2]  963 	ldw	y, (0x09, sp)
      00032B 17 13            [ 2]  964 	ldw	(0x13, sp), y
                                    965 ; genAnd
      00032D 7B 14            [ 1]  966 	ld	a, (0x14, sp)
      00032F A5 0F            [ 1]  967 	bcp	a, #0x0f
      000331 27 03            [ 1]  968 	jreq	00157$
      000333 CCr04r0A         [ 2]  969 	jp	00116$
      000336                        970 00157$:
                                    971 ; skipping generated iCode
                           000336   972 	C$pff.c$556$2_0$344 ==.
                                    973 ;	../src/pff.c: 556: dj->sect++;			/* Next sector */
                                    974 ; genPlus
      000336 7B 04            [ 1]  975 	ld	a, (0x04, sp)
      000338 AB 01            [ 1]  976 	add	a, #0x01
      00033A 88               [ 1]  977 	push	a
      00033B 7B 04            [ 1]  978 	ld	a, (0x04, sp)
      00033D A9 00            [ 1]  979 	adc	a, #0x00
      00033F 6B 12            [ 1]  980 	ld	(0x12, sp), a
      000341 16 02            [ 2]  981 	ldw	y, (0x02, sp)
      000343 24 02            [ 1]  982 	jrnc	00158$
      000345 90 5C            [ 1]  983 	incw	y
      000347                        984 00158$:
      000347 84               [ 1]  985 	pop	a
                                    986 ; genPointerSet
      000348 1E 0B            [ 2]  987 	ldw	x, (0x0b, sp)
      00034A E7 03            [ 1]  988 	ld	(0x3, x), a
      00034C 7B 11            [ 1]  989 	ld	a, (0x11, sp)
      00034E E7 02            [ 1]  990 	ld	(0x2, x), a
      000350 FF               [ 2]  991 	ldw	(x), y
                           000351   992 	C$pff.c$558$1_0$343 ==.
                                    993 ;	../src/pff.c: 558: if (dj->clust == 0) {	/* Static table */
                                    994 ; genPlus
      000351 1E 07            [ 2]  995 	ldw	x, (0x07, sp)
      000353 1C 00 08         [ 2]  996 	addw	x, #0x0008
      000356 1F 0D            [ 2]  997 	ldw	(0x0d, sp), x
                                    998 ; genPointerGet
      000358 1E 0D            [ 2]  999 	ldw	x, (0x0d, sp)
      00035A 90 93            [ 1] 1000 	ldw	y, x
      00035C 90 EE 02         [ 2] 1001 	ldw	y, (0x2, y)
      00035F FE               [ 2] 1002 	ldw	x, (x)
      000360 1F 0F            [ 2] 1003 	ldw	(0x0f, sp), x
                                   1004 ; genIfx
      000362 90 5D            [ 2] 1005 	tnzw	y
      000364 26 04            [ 1] 1006 	jrne	00159$
      000366 1E 0F            [ 2] 1007 	ldw	x, (0x0f, sp)
      000368 27 03            [ 1] 1008 	jreq	00160$
      00036A                       1009 00159$:
      00036A CCr03r81         [ 2] 1010 	jp	00113$
      00036D                       1011 00160$:
                           00036D  1012 	C$pff.c$559$3_0$345 ==.
                                   1013 ;	../src/pff.c: 559: if (i >= fs->n_rootdir) return FR_NO_FILE;	/* Report EOT when end of table */
                                   1014 ; genAssign
      00036D 1E 05            [ 2] 1015 	ldw	x, (0x05, sp)
                                   1016 ; genPointerGet
      00036F EE 04            [ 2] 1017 	ldw	x, (0x4, x)
      000371 1F 13            [ 2] 1018 	ldw	(0x13, sp), x
                                   1019 ; genCmp
                                   1020 ; genCmpTop
      000373 1E 09            [ 2] 1021 	ldw	x, (0x09, sp)
      000375 13 13            [ 2] 1022 	cpw	x, (0x13, sp)
      000377 24 03            [ 1] 1023 	jrnc	00161$
      000379 CCr04r0A         [ 2] 1024 	jp	00116$
      00037C                       1025 00161$:
                                   1026 ; skipping generated iCode
                                   1027 ; genReturn
      00037C A6 03            [ 1] 1028 	ld	a, #0x03
      00037E CCr04r10         [ 2] 1029 	jp	00117$
                                   1030 ; genLabel
      000381                       1031 00113$:
                           000381  1032 	C$pff.c$562$3_0$346 ==.
                                   1033 ;	../src/pff.c: 562: if (((i / 16) & (fs->csize - 1)) == 0) {	/* Cluster changed? */
                                   1034 ; genRightShiftLiteral
      000381 04 13            [ 1] 1035 	srl	(0x13, sp)
      000383 06 14            [ 1] 1036 	rrc	(0x14, sp)
      000385 04 13            [ 1] 1037 	srl	(0x13, sp)
      000387 06 14            [ 1] 1038 	rrc	(0x14, sp)
      000389 04 13            [ 1] 1039 	srl	(0x13, sp)
      00038B 06 14            [ 1] 1040 	rrc	(0x14, sp)
      00038D 04 13            [ 1] 1041 	srl	(0x13, sp)
      00038F 06 14            [ 1] 1042 	rrc	(0x14, sp)
                                   1043 ; genAssign
      000391 1E 05            [ 2] 1044 	ldw	x, (0x05, sp)
                                   1045 ; genPointerGet
      000393 E6 02            [ 1] 1046 	ld	a, (0x2, x)
                                   1047 ; genCast
                                   1048 ; genAssign
      000395 5F               [ 1] 1049 	clrw	x
      000396 97               [ 1] 1050 	ld	xl, a
                                   1051 ; genMinus
      000397 5A               [ 2] 1052 	decw	x
      000398 9F               [ 1] 1053 	ld	a, xl
                                   1054 ; genAnd
      000399 14 14            [ 1] 1055 	and	a, (0x14, sp)
      00039B 97               [ 1] 1056 	ld	xl, a
      00039C 9E               [ 1] 1057 	ld	a, xh
      00039D 14 13            [ 1] 1058 	and	a, (0x13, sp)
      00039F 95               [ 1] 1059 	ld	xh, a
                                   1060 ; genIfx
      0003A0 5D               [ 2] 1061 	tnzw	x
      0003A1 27 03            [ 1] 1062 	jreq	00162$
      0003A3 CCr04r0A         [ 2] 1063 	jp	00116$
      0003A6                       1064 00162$:
                           0003A6  1065 	C$pff.c$563$4_0$347 ==.
                                   1066 ;	../src/pff.c: 563: clst = get_fat(dj->clust);		/* Get next cluster */
                                   1067 ; genIPush
      0003A6 90 89            [ 2] 1068 	pushw	y
      0003A8 1E 11            [ 2] 1069 	ldw	x, (0x11, sp)
      0003AA 89               [ 2] 1070 	pushw	x
                                   1071 ; genCall
      0003AB CDr00rF9         [ 4] 1072 	call	_get_fat
      0003AE 5B 04            [ 2] 1073 	addw	sp, #4
                                   1074 ; genAssign
      0003B0 1F 13            [ 2] 1075 	ldw	(0x13, sp), x
      0003B2 17 11            [ 2] 1076 	ldw	(0x11, sp), y
                           0003B4  1077 	C$pff.c$564$4_0$347 ==.
                                   1078 ;	../src/pff.c: 564: if (clst <= 1) return FR_DISK_ERR;
                                   1079 ; genCmp
                                   1080 ; genCmpTop
      0003B4 5F               [ 1] 1081 	clrw	x
      0003B5 5C               [ 1] 1082 	incw	x
      0003B6 13 13            [ 2] 1083 	cpw	x, (0x13, sp)
      0003B8 4F               [ 1] 1084 	clr	a
      0003B9 12 12            [ 1] 1085 	sbc	a, (0x12, sp)
      0003BB 4F               [ 1] 1086 	clr	a
      0003BC 12 11            [ 1] 1087 	sbc	a, (0x11, sp)
      0003BE 24 03            [ 1] 1088 	jrnc	00163$
      0003C0 CCr03rC8         [ 2] 1089 	jp	00107$
      0003C3                       1090 00163$:
                                   1091 ; skipping generated iCode
                                   1092 ; genReturn
      0003C3 A6 01            [ 1] 1093 	ld	a, #0x01
      0003C5 CCr04r10         [ 2] 1094 	jp	00117$
                                   1095 ; genLabel
      0003C8                       1096 00107$:
                           0003C8  1097 	C$pff.c$565$4_0$347 ==.
                                   1098 ;	../src/pff.c: 565: if (clst >= fs->n_fatent) return FR_NO_FILE;	/* Report EOT when it reached end of dynamic table */
                                   1099 ; genAssign
      0003C8 1E 05            [ 2] 1100 	ldw	x, (0x05, sp)
                                   1101 ; genPointerGet
      0003CA 90 93            [ 1] 1102 	ldw	y, x
      0003CC 90 EE 08         [ 2] 1103 	ldw	y, (0x8, y)
      0003CF 17 05            [ 2] 1104 	ldw	(0x05, sp), y
      0003D1 EE 06            [ 2] 1105 	ldw	x, (0x6, x)
      0003D3 1F 03            [ 2] 1106 	ldw	(0x03, sp), x
                                   1107 ; genCmp
                                   1108 ; genCmpTop
      0003D5 1E 13            [ 2] 1109 	ldw	x, (0x13, sp)
      0003D7 13 05            [ 2] 1110 	cpw	x, (0x05, sp)
      0003D9 7B 12            [ 1] 1111 	ld	a, (0x12, sp)
      0003DB 12 04            [ 1] 1112 	sbc	a, (0x04, sp)
      0003DD 7B 11            [ 1] 1113 	ld	a, (0x11, sp)
      0003DF 12 03            [ 1] 1114 	sbc	a, (0x03, sp)
      0003E1 24 03            [ 1] 1115 	jrnc	00164$
      0003E3 CCr03rEB         [ 2] 1116 	jp	00109$
      0003E6                       1117 00164$:
                                   1118 ; skipping generated iCode
                                   1119 ; genReturn
      0003E6 A6 03            [ 1] 1120 	ld	a, #0x03
      0003E8 CCr04r10         [ 2] 1121 	jp	00117$
                                   1122 ; genLabel
      0003EB                       1123 00109$:
                           0003EB  1124 	C$pff.c$566$4_0$347 ==.
                                   1125 ;	../src/pff.c: 566: dj->clust = clst;				/* Initialize data for new cluster */
                                   1126 ; genPointerSet
      0003EB 1E 0D            [ 2] 1127 	ldw	x, (0x0d, sp)
      0003ED 16 13            [ 2] 1128 	ldw	y, (0x13, sp)
      0003EF EF 02            [ 2] 1129 	ldw	(0x2, x), y
      0003F1 16 11            [ 2] 1130 	ldw	y, (0x11, sp)
      0003F3 FF               [ 2] 1131 	ldw	(x), y
                           0003F4  1132 	C$pff.c$567$4_0$347 ==.
                                   1133 ;	../src/pff.c: 567: dj->sect = clust2sect(clst);
                                   1134 ; genIPush
      0003F4 1E 13            [ 2] 1135 	ldw	x, (0x13, sp)
      0003F6 89               [ 2] 1136 	pushw	x
      0003F7 1E 13            [ 2] 1137 	ldw	x, (0x13, sp)
      0003F9 89               [ 2] 1138 	pushw	x
                                   1139 ; genCall
      0003FA CDr01rB1         [ 4] 1140 	call	_clust2sect
      0003FD 5B 04            [ 2] 1141 	addw	sp, #4
      0003FF 17 11            [ 2] 1142 	ldw	(0x11, sp), y
                                   1143 ; genPointerSet
      000401 16 0B            [ 2] 1144 	ldw	y, (0x0b, sp)
      000403 90 EF 02         [ 2] 1145 	ldw	(0x2, y), x
      000406 1E 11            [ 2] 1146 	ldw	x, (0x11, sp)
      000408 90 FF            [ 2] 1147 	ldw	(y), x
                                   1148 ; genLabel
      00040A                       1149 00116$:
                           00040A  1150 	C$pff.c$572$1_0$343 ==.
                                   1151 ;	../src/pff.c: 572: dj->index = i;
                                   1152 ; genPointerSet
      00040A 1E 07            [ 2] 1153 	ldw	x, (0x07, sp)
      00040C 16 09            [ 2] 1154 	ldw	y, (0x09, sp)
      00040E FF               [ 2] 1155 	ldw	(x), y
                           00040F  1156 	C$pff.c$574$1_0$343 ==.
                                   1157 ;	../src/pff.c: 574: return FR_OK;
                                   1158 ; genReturn
      00040F 4F               [ 1] 1159 	clr	a
                                   1160 ; genLabel
      000410                       1161 00117$:
                           000410  1162 	C$pff.c$575$1_0$343 ==.
                                   1163 ;	../src/pff.c: 575: }
                                   1164 ; genEndFunction
      000410 5B 14            [ 2] 1165 	addw	sp, #20
                           000412  1166 	C$pff.c$575$1_0$343 ==.
                           000412  1167 	XFpff$dir_next$0$0 ==.
      000412 81               [ 4] 1168 	ret
                           000413  1169 	Fpff$dir_find$0$0 ==.
                           000413  1170 	C$pff.c$584$1_0$349 ==.
                                   1171 ;	../src/pff.c: 584: static FRESULT dir_find (
                                   1172 ; genLabel
                                   1173 ;	-----------------------------------------
                                   1174 ;	 function dir_find
                                   1175 ;	-----------------------------------------
                                   1176 ;	Register assignment might be sub-optimal.
                                   1177 ;	Stack space usage: 13 bytes.
      000413                       1178 _dir_find:
      000413 52 0D            [ 2] 1179 	sub	sp, #13
                           000415  1180 	C$pff.c$593$1_0$349 ==.
                                   1181 ;	../src/pff.c: 593: res = dir_rewind(dj);			/* Rewind directory object */
                                   1182 ; genIPush
      000415 1E 10            [ 2] 1183 	ldw	x, (0x10, sp)
      000417 89               [ 2] 1184 	pushw	x
                                   1185 ; genCall
      000418 CDr02r5E         [ 4] 1186 	call	_dir_rewind
      00041B 85               [ 2] 1187 	popw	x
                                   1188 ; genAssign
                           00041C  1189 	C$pff.c$594$1_0$349 ==.
                                   1190 ;	../src/pff.c: 594: if (res != FR_OK) return res;
                                   1191 ; genIfx
      00041C 4D               [ 1] 1192 	tnz	a
      00041D 26 03            [ 1] 1193 	jrne	00147$
      00041F CCr04r25         [ 2] 1194 	jp	00122$
      000422                       1195 00147$:
                                   1196 ; genReturn
      000422 CCr04rC3         [ 2] 1197 	jp	00113$
                           000425  1198 	C$pff.c$596$1_0$349 ==.
                                   1199 ;	../src/pff.c: 596: do {
                                   1200 ; genLabel
      000425                       1201 00122$:
                                   1202 ; genAssign
      000425 16 12            [ 2] 1203 	ldw	y, (0x12, sp)
      000427 17 03            [ 2] 1204 	ldw	(0x03, sp), y
                                   1205 ; genAssign
      000429 16 10            [ 2] 1206 	ldw	y, (0x10, sp)
      00042B 17 05            [ 2] 1207 	ldw	(0x05, sp), y
                                   1208 ; genAssign
      00042D 16 05            [ 2] 1209 	ldw	y, (0x05, sp)
      00042F 17 07            [ 2] 1210 	ldw	(0x07, sp), y
                                   1211 ; genAssign
      000431 16 03            [ 2] 1212 	ldw	y, (0x03, sp)
      000433 17 09            [ 2] 1213 	ldw	(0x09, sp), y
                                   1214 ; genAssign
      000435 16 05            [ 2] 1215 	ldw	y, (0x05, sp)
      000437 17 0B            [ 2] 1216 	ldw	(0x0b, sp), y
                                   1217 ; genLabel
      000439                       1218 00110$:
                           000439  1219 	C$pff.c$597$2_0$350 ==.
                                   1220 ;	../src/pff.c: 597: res = disk_readp(dir, dj->sect, (dj->index % 16) * 32, 32)	/* Read an entry */
                                   1221 ; genPointerGet
      000439 1E 05            [ 2] 1222 	ldw	x, (0x05, sp)
      00043B FE               [ 2] 1223 	ldw	x, (x)
                                   1224 ; genCast
                                   1225 ; genAssign
      00043C 9F               [ 1] 1226 	ld	a, xl
                                   1227 ; genAnd
      00043D A4 0F            [ 1] 1228 	and	a, #0x0f
      00043F 97               [ 1] 1229 	ld	xl, a
      000440 4F               [ 1] 1230 	clr	a
      000441 95               [ 1] 1231 	ld	xh, a
                                   1232 ; genLeftShiftLiteral
      000442 58               [ 2] 1233 	sllw	x
      000443 58               [ 2] 1234 	sllw	x
      000444 58               [ 2] 1235 	sllw	x
      000445 58               [ 2] 1236 	sllw	x
      000446 58               [ 2] 1237 	sllw	x
      000447 1F 01            [ 2] 1238 	ldw	(0x01, sp), x
                                   1239 ; genPointerGet
      000449 1E 0B            [ 2] 1240 	ldw	x, (0x0b, sp)
      00044B 90 93            [ 1] 1241 	ldw	y, x
      00044D 90 EE 0E         [ 2] 1242 	ldw	y, (0xe, y)
      000450 EE 0C            [ 2] 1243 	ldw	x, (0xc, x)
                                   1244 ; genIPush
      000452 4B 20            [ 1] 1245 	push	#0x20
      000454 4B 00            [ 1] 1246 	push	#0x00
                                   1247 ; genIPush
      000456 7B 04            [ 1] 1248 	ld	a, (0x04, sp)
      000458 88               [ 1] 1249 	push	a
      000459 7B 04            [ 1] 1250 	ld	a, (0x04, sp)
      00045B 88               [ 1] 1251 	push	a
                                   1252 ; genIPush
      00045C 90 89            [ 2] 1253 	pushw	y
      00045E 89               [ 2] 1254 	pushw	x
                                   1255 ; genIPush
      00045F 1E 0B            [ 2] 1256 	ldw	x, (0x0b, sp)
      000461 89               [ 2] 1257 	pushw	x
                                   1258 ; genCall
      000462 CDr00r00         [ 4] 1259 	call	_disk_readp
      000465 5B 0A            [ 2] 1260 	addw	sp, #10
                                   1261 ; genIfx
      000467 4D               [ 1] 1262 	tnz	a
      000468 26 03            [ 1] 1263 	jrne	00148$
      00046A CCr04r73         [ 2] 1264 	jp	00115$
      00046D                       1265 00148$:
                           00046D  1266 	C$pff.c$598$2_0$350 ==.
                                   1267 ;	../src/pff.c: 598: ? FR_DISK_ERR : FR_OK;
                                   1268 ; genAssign
      00046D A6 01            [ 1] 1269 	ld	a, #0x01
      00046F 5F               [ 1] 1270 	clrw	x
                                   1271 ; genGoto
      000470 CCr04r75         [ 2] 1272 	jp	00116$
                                   1273 ; genLabel
      000473                       1274 00115$:
                                   1275 ; genAssign
      000473 4F               [ 1] 1276 	clr	a
      000474 5F               [ 1] 1277 	clrw	x
                                   1278 ; genLabel
      000475                       1279 00116$:
                                   1280 ; genCast
                                   1281 ; genAssign
      000475 6B 0D            [ 1] 1282 	ld	(0x0d, sp), a
                           000477  1283 	C$pff.c$599$2_0$350 ==.
                                   1284 ;	../src/pff.c: 599: if (res != FR_OK) break;
                                   1285 ; genIfx
      000477 0D 0D            [ 1] 1286 	tnz	(0x0d, sp)
      000479 27 03            [ 1] 1287 	jreq	00149$
      00047B CCr04rC1         [ 2] 1288 	jp	00112$
      00047E                       1289 00149$:
                           00047E  1290 	C$pff.c$600$2_0$350 ==.
                                   1291 ;	../src/pff.c: 600: c = dir[DIR_Name];	/* First character */
                                   1292 ; genPointerGet
      00047E 1E 03            [ 2] 1293 	ldw	x, (0x03, sp)
      000480 F6               [ 1] 1294 	ld	a, (x)
                           000481  1295 	C$pff.c$601$2_0$350 ==.
                                   1296 ;	../src/pff.c: 601: if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
                                   1297 ; genIfx
      000481 4D               [ 1] 1298 	tnz	a
      000482 27 03            [ 1] 1299 	jreq	00150$
      000484 CCr04r8E         [ 2] 1300 	jp	00106$
      000487                       1301 00150$:
                                   1302 ; genAssign
      000487 A6 03            [ 1] 1303 	ld	a, #0x03
      000489 6B 0D            [ 1] 1304 	ld	(0x0d, sp), a
                                   1305 ; genGoto
      00048B CCr04rC1         [ 2] 1306 	jp	00112$
                                   1307 ; genLabel
      00048E                       1308 00106$:
                           00048E  1309 	C$pff.c$602$2_0$350 ==.
                                   1310 ;	../src/pff.c: 602: if (!(dir[DIR_Attr] & AM_VOL) && !mem_cmp(dir, dj->fn, 11)) break;	/* Is it a valid entry? */
                                   1311 ; genPointerGet
      00048E 1E 09            [ 2] 1312 	ldw	x, (0x09, sp)
      000490 E6 0B            [ 1] 1313 	ld	a, (0xb, x)
                                   1314 ; genAnd
      000492 A5 08            [ 1] 1315 	bcp	a, #0x08
      000494 27 03            [ 1] 1316 	jreq	00151$
      000496 CCr04rB1         [ 2] 1317 	jp	00108$
      000499                       1318 00151$:
                                   1319 ; skipping generated iCode
                                   1320 ; genPointerGet
      000499 1E 07            [ 2] 1321 	ldw	x, (0x07, sp)
      00049B EE 02            [ 2] 1322 	ldw	x, (0x2, x)
                                   1323 ; genCast
                                   1324 ; genAssign
                                   1325 ; genCast
                                   1326 ; genAssign
      00049D 16 12            [ 2] 1327 	ldw	y, (0x12, sp)
                                   1328 ; genIPush
      00049F 4B 0B            [ 1] 1329 	push	#0x0b
      0004A1 4B 00            [ 1] 1330 	push	#0x00
                                   1331 ; genIPush
      0004A3 89               [ 2] 1332 	pushw	x
                                   1333 ; genIPush
      0004A4 90 89            [ 2] 1334 	pushw	y
                                   1335 ; genCall
      0004A6 CDr00rAF         [ 4] 1336 	call	_mem_cmp
      0004A9 5B 06            [ 2] 1337 	addw	sp, #6
                                   1338 ; genIfx
      0004AB 5D               [ 2] 1339 	tnzw	x
      0004AC 26 03            [ 1] 1340 	jrne	00152$
      0004AE CCr04rC1         [ 2] 1341 	jp	00112$
      0004B1                       1342 00152$:
                                   1343 ; genLabel
      0004B1                       1344 00108$:
                           0004B1  1345 	C$pff.c$603$2_0$350 ==.
                                   1346 ;	../src/pff.c: 603: res = dir_next(dj);					/* Next entry */
                                   1347 ; genIPush
      0004B1 1E 05            [ 2] 1348 	ldw	x, (0x05, sp)
      0004B3 89               [ 2] 1349 	pushw	x
                                   1350 ; genCall
      0004B4 CDr02rEE         [ 4] 1351 	call	_dir_next
      0004B7 85               [ 2] 1352 	popw	x
                                   1353 ; genAssign
      0004B8 6B 0D            [ 1] 1354 	ld	(0x0d, sp), a
                           0004BA  1355 	C$pff.c$604$1_0$349 ==.
                                   1356 ;	../src/pff.c: 604: } while (res == FR_OK);
                                   1357 ; genIfx
      0004BA 0D 0D            [ 1] 1358 	tnz	(0x0d, sp)
      0004BC 26 03            [ 1] 1359 	jrne	00153$
      0004BE CCr04r39         [ 2] 1360 	jp	00110$
      0004C1                       1361 00153$:
                                   1362 ; genLabel
      0004C1                       1363 00112$:
                           0004C1  1364 	C$pff.c$606$1_0$349 ==.
                                   1365 ;	../src/pff.c: 606: return res;
                                   1366 ; genReturn
      0004C1 7B 0D            [ 1] 1367 	ld	a, (0x0d, sp)
                                   1368 ; genLabel
      0004C3                       1369 00113$:
                           0004C3  1370 	C$pff.c$607$1_0$349 ==.
                                   1371 ;	../src/pff.c: 607: }
                                   1372 ; genEndFunction
      0004C3 5B 0D            [ 2] 1373 	addw	sp, #13
                           0004C5  1374 	C$pff.c$607$1_0$349 ==.
                           0004C5  1375 	XFpff$dir_find$0$0 ==.
      0004C5 81               [ 4] 1376 	ret
                           0004C6  1377 	Fpff$create_name$0$0 ==.
                           0004C6  1378 	C$pff.c$651$1_0$353 ==.
                                   1379 ;	../src/pff.c: 651: static FRESULT create_name (
                                   1380 ; genLabel
                                   1381 ;	-----------------------------------------
                                   1382 ;	 function create_name
                                   1383 ;	-----------------------------------------
                                   1384 ;	Register assignment might be sub-optimal.
                                   1385 ;	Stack space usage: 9 bytes.
      0004C6                       1386 _create_name:
      0004C6 52 09            [ 2] 1387 	sub	sp, #9
                           0004C8  1388 	C$pff.c$663$1_0$353 ==.
                                   1389 ;	../src/pff.c: 663: sfn = dj->fn;
                                   1390 ; genAssign
      0004C8 1E 0C            [ 2] 1391 	ldw	x, (0x0c, sp)
                                   1392 ; genAssign
                                   1393 ; genPointerGet
      0004CA EE 02            [ 2] 1394 	ldw	x, (0x2, x)
                                   1395 ; genAssign
      0004CC 1F 01            [ 2] 1396 	ldw	(0x01, sp), x
                           0004CE  1397 	C$pff.c$664$1_0$353 ==.
                                   1398 ;	../src/pff.c: 664: mem_set(sfn, ' ', 11);
                                   1399 ; genCast
                                   1400 ; genAssign
      0004CE 1E 01            [ 2] 1401 	ldw	x, (0x01, sp)
                                   1402 ; genIPush
      0004D0 4B 0B            [ 1] 1403 	push	#0x0b
      0004D2 4B 00            [ 1] 1404 	push	#0x00
                                   1405 ; genIPush
      0004D4 4B 20            [ 1] 1406 	push	#0x20
      0004D6 4B 00            [ 1] 1407 	push	#0x00
                                   1408 ; genIPush
      0004D8 89               [ 2] 1409 	pushw	x
                                   1410 ; genCall
      0004D9 CDr00r90         [ 4] 1411 	call	_mem_set
      0004DC 5B 06            [ 2] 1412 	addw	sp, #6
                           0004DE  1413 	C$pff.c$665$1_0$353 ==.
                                   1414 ;	../src/pff.c: 665: si = i = 0; ni = 8;
                                   1415 ; genAssign
      0004DE 0F 08            [ 1] 1416 	clr	(0x08, sp)
                                   1417 ; genAssign
      0004E0 0F 09            [ 1] 1418 	clr	(0x09, sp)
                                   1419 ; genAssign
      0004E2 A6 08            [ 1] 1420 	ld	a, #0x08
      0004E4 6B 03            [ 1] 1421 	ld	(0x03, sp), a
                           0004E6  1422 	C$pff.c$666$1_0$353 ==.
                                   1423 ;	../src/pff.c: 666: p = *path;
                                   1424 ; genAssign
      0004E6 16 0E            [ 2] 1425 	ldw	y, (0x0e, sp)
                                   1426 ; genPointerGet
      0004E8 93               [ 1] 1427 	ldw	x, y
      0004E9 FE               [ 2] 1428 	ldw	x, (x)
                                   1429 ; genAssign
      0004EA 1F 04            [ 2] 1430 	ldw	(0x04, sp), x
                                   1431 ; genLabel
      0004EC                       1432 00120$:
                           0004EC  1433 	C$pff.c$668$3_0$355 ==.
                                   1434 ;	../src/pff.c: 668: c = p[si++];
                                   1435 ; genPlus
      0004EC 5F               [ 1] 1436 	clrw	x
      0004ED 7B 09            [ 1] 1437 	ld	a, (0x09, sp)
      0004EF 97               [ 1] 1438 	ld	xl, a
      0004F0 72 FB 04         [ 2] 1439 	addw	x, (0x04, sp)
                                   1440 ; genPlus
      0004F3 0C 09            [ 1] 1441 	inc	(0x09, sp)
                                   1442 ; genPointerGet
      0004F5 F6               [ 1] 1443 	ld	a, (x)
      0004F6 6B 06            [ 1] 1444 	ld	(0x06, sp), a
                           0004F8  1445 	C$pff.c$669$1_0$353 ==.
                                   1446 ;	../src/pff.c: 669: if (c <= ' ' || c == '/') break;	/* Break on end of segment */
                                   1447 ; genCmp
                                   1448 ; genCmpTop
      0004F8 7B 06            [ 1] 1449 	ld	a, (0x06, sp)
      0004FA A1 20            [ 1] 1450 	cp	a, #0x20
      0004FC 22 05            [ 1] 1451 	jrugt	00161$
      0004FE 0F 07            [ 1] 1452 	clr	(0x07, sp)
      000500 CCr05r07         [ 2] 1453 	jp	00162$
      000503                       1454 00161$:
      000503 A6 01            [ 1] 1455 	ld	a, #0x01
      000505 6B 07            [ 1] 1456 	ld	(0x07, sp), a
      000507                       1457 00162$:
                                   1458 ; genIfx
      000507 0D 07            [ 1] 1459 	tnz	(0x07, sp)
      000509 26 03            [ 1] 1460 	jrne	00163$
      00050B CCr05r62         [ 2] 1461 	jp	00132$
      00050E                       1462 00163$:
                                   1463 ; genCmpEQorNE
      00050E 7B 06            [ 1] 1464 	ld	a, (0x06, sp)
      000510 A1 2F            [ 1] 1465 	cp	a, #0x2f
      000512 26 03            [ 1] 1466 	jrne	00165$
      000514 CCr05r62         [ 2] 1467 	jp	00132$
      000517                       1468 00165$:
                                   1469 ; skipping generated iCode
                           000517  1470 	C$pff.c$670$1_0$353 ==.
                                   1471 ;	../src/pff.c: 670: if (c == '.' || i >= ni) {
                                   1472 ; genCmpEQorNE
      000517 7B 06            [ 1] 1473 	ld	a, (0x06, sp)
      000519 A1 2E            [ 1] 1474 	cp	a, #0x2e
      00051B 26 05            [ 1] 1475 	jrne	00168$
      00051D A6 01            [ 1] 1476 	ld	a, #0x01
      00051F CCr05r23         [ 2] 1477 	jp	00169$
      000522                       1478 00168$:
      000522 4F               [ 1] 1479 	clr	a
      000523                       1480 00169$:
                                   1481 ; genIfx
      000523 4D               [ 1] 1482 	tnz	a
      000524 27 03            [ 1] 1483 	jreq	00170$
      000526 CCr05r34         [ 2] 1484 	jp	00107$
      000529                       1485 00170$:
                                   1486 ; genCmp
                                   1487 ; genCmpTop
      000529 88               [ 1] 1488 	push	a
      00052A 7B 09            [ 1] 1489 	ld	a, (0x09, sp)
      00052C 11 04            [ 1] 1490 	cp	a, (0x04, sp)
      00052E 84               [ 1] 1491 	pop	a
      00052F 24 03            [ 1] 1492 	jrnc	00171$
      000531 CCr05r53         [ 2] 1493 	jp	00111$
      000534                       1494 00171$:
                                   1495 ; skipping generated iCode
                                   1496 ; genLabel
      000534                       1497 00107$:
                           000534  1498 	C$pff.c$671$4_0$356 ==.
                                   1499 ;	../src/pff.c: 671: if (ni != 8 || c != '.') break;
                                   1500 ; genCmpEQorNE
      000534 88               [ 1] 1501 	push	a
      000535 7B 04            [ 1] 1502 	ld	a, (0x04, sp)
      000537 A1 08            [ 1] 1503 	cp	a, #0x08
      000539 84               [ 1] 1504 	pop	a
      00053A 26 03            [ 1] 1505 	jrne	00173$
      00053C CCr05r42         [ 2] 1506 	jp	00174$
      00053F                       1507 00173$:
      00053F CCr05r62         [ 2] 1508 	jp	00132$
      000542                       1509 00174$:
                                   1510 ; skipping generated iCode
                                   1511 ; genAssign
                                   1512 ; genIfx
      000542 4D               [ 1] 1513 	tnz	a
      000543 26 03            [ 1] 1514 	jrne	00175$
      000545 CCr05r62         [ 2] 1515 	jp	00132$
      000548                       1516 00175$:
                           000548  1517 	C$pff.c$672$4_0$356 ==.
                                   1518 ;	../src/pff.c: 672: i = 8; ni = 11;
                                   1519 ; genAssign
      000548 A6 08            [ 1] 1520 	ld	a, #0x08
      00054A 6B 08            [ 1] 1521 	ld	(0x08, sp), a
                                   1522 ; genAssign
      00054C A6 0B            [ 1] 1523 	ld	a, #0x0b
      00054E 6B 03            [ 1] 1524 	ld	(0x03, sp), a
                           000550  1525 	C$pff.c$673$4_0$356 ==.
                                   1526 ;	../src/pff.c: 673: continue;
                                   1527 ; genGoto
      000550 CCr04rEC         [ 2] 1528 	jp	00120$
                           000553  1529 	C$pff.c$683$4_0$358 ==.
                                   1530 ;	../src/pff.c: 683: if (PF_USE_LCC && IsLower(c)) c -= 0x20;	/* toupper */
                                   1531 ; genLabel
      000553                       1532 00111$:
                           000553  1533 	C$pff.c$684$4_0$358 ==.
                                   1534 ;	../src/pff.c: 684: sfn[i++] = c;
                                   1535 ; genAssign
      000553 7B 08            [ 1] 1536 	ld	a, (0x08, sp)
                                   1537 ; genPlus
      000555 0C 08            [ 1] 1538 	inc	(0x08, sp)
                                   1539 ; genPlus
      000557 5F               [ 1] 1540 	clrw	x
      000558 97               [ 1] 1541 	ld	xl, a
      000559 72 FB 01         [ 2] 1542 	addw	x, (0x01, sp)
                                   1543 ; genPointerSet
      00055C 7B 06            [ 1] 1544 	ld	a, (0x06, sp)
      00055E F7               [ 1] 1545 	ld	(x), a
                                   1546 ; genGoto
      00055F CCr04rEC         [ 2] 1547 	jp	00120$
                                   1548 ; genLabel
      000562                       1549 00132$:
                                   1550 ; genAssign
      000562 7B 09            [ 1] 1551 	ld	a, (0x09, sp)
                           000564  1552 	C$pff.c$687$1_0$353 ==.
                                   1553 ;	../src/pff.c: 687: *path = &p[si];						/* Rerurn pointer to the next segment */
                                   1554 ; genPlus
      000564 5F               [ 1] 1555 	clrw	x
      000565 97               [ 1] 1556 	ld	xl, a
      000566 72 FB 04         [ 2] 1557 	addw	x, (0x04, sp)
                                   1558 ; genPointerSet
      000569 90 FF            [ 2] 1559 	ldw	(y), x
                           00056B  1560 	C$pff.c$689$1_0$353 ==.
                                   1561 ;	../src/pff.c: 689: sfn[11] = (c <= ' ') ? 1 : 0;		/* Set last segment flag if end of path */
                                   1562 ; genPlus
      00056B 16 01            [ 2] 1563 	ldw	y, (0x01, sp)
      00056D 72 A9 00 0B      [ 2] 1564 	addw	y, #0x000b
                                   1565 ; genIfx
      000571 0D 07            [ 1] 1566 	tnz	(0x07, sp)
      000573 27 03            [ 1] 1567 	jreq	00176$
      000575 CCr05r7D         [ 2] 1568 	jp	00123$
      000578                       1569 00176$:
                                   1570 ; genAssign
      000578 5F               [ 1] 1571 	clrw	x
      000579 5C               [ 1] 1572 	incw	x
                                   1573 ; genGoto
      00057A CCr05r7E         [ 2] 1574 	jp	00124$
                                   1575 ; genLabel
      00057D                       1576 00123$:
                                   1577 ; genAssign
      00057D 5F               [ 1] 1578 	clrw	x
                                   1579 ; genLabel
      00057E                       1580 00124$:
                                   1581 ; genCast
                                   1582 ; genAssign
      00057E 9F               [ 1] 1583 	ld	a, xl
                                   1584 ; genPointerSet
      00057F 90 F7            [ 1] 1585 	ld	(y), a
                           000581  1586 	C$pff.c$691$1_0$353 ==.
                                   1587 ;	../src/pff.c: 691: return FR_OK;
                                   1588 ; genReturn
      000581 4F               [ 1] 1589 	clr	a
                                   1590 ; genLabel
      000582                       1591 00121$:
                           000582  1592 	C$pff.c$692$1_0$353 ==.
                                   1593 ;	../src/pff.c: 692: }
                                   1594 ; genEndFunction
      000582 5B 09            [ 2] 1595 	addw	sp, #9
                           000584  1596 	C$pff.c$692$1_0$353 ==.
                           000584  1597 	XFpff$create_name$0$0 ==.
      000584 81               [ 4] 1598 	ret
                           000585  1599 	Fpff$follow_path$0$0 ==.
                           000585  1600 	C$pff.c$742$1_0$360 ==.
                                   1601 ;	../src/pff.c: 742: static FRESULT follow_path (	/* FR_OK(0): successful, !=0: error code */
                                   1602 ; genLabel
                                   1603 ;	-----------------------------------------
                                   1604 ;	 function follow_path
                                   1605 ;	-----------------------------------------
                                   1606 ;	Register assignment might be sub-optimal.
                                   1607 ;	Stack space usage: 12 bytes.
      000585                       1608 _follow_path:
      000585 52 0C            [ 2] 1609 	sub	sp, #12
                           000587  1610 	C$pff.c$751$1_0$360 ==.
                                   1611 ;	../src/pff.c: 751: while (*path == ' ') path++;		/* Strip leading spaces */
                                   1612 ; genAssign
      000587 1E 13            [ 2] 1613 	ldw	x, (0x13, sp)
                                   1614 ; genLabel
      000589                       1615 00101$:
                                   1616 ; genPointerGet
      000589 F6               [ 1] 1617 	ld	a, (x)
                                   1618 ; genCmpEQorNE
      00058A A1 20            [ 1] 1619 	cp	a, #0x20
      00058C 26 03            [ 1] 1620 	jrne	00169$
      00058E CCr05r94         [ 2] 1621 	jp	00170$
      000591                       1622 00169$:
      000591 CCr05r9A         [ 2] 1623 	jp	00131$
      000594                       1624 00170$:
                                   1625 ; skipping generated iCode
                                   1626 ; genPlus
      000594 5C               [ 1] 1627 	incw	x
                                   1628 ; genAssign
      000595 1F 13            [ 2] 1629 	ldw	(0x13, sp), x
                                   1630 ; genGoto
      000597 CCr05r89         [ 2] 1631 	jp	00101$
                                   1632 ; genLabel
      00059A                       1633 00131$:
                                   1634 ; genAssign
      00059A 1F 13            [ 2] 1635 	ldw	(0x13, sp), x
                           00059C  1636 	C$pff.c$752$1_0$360 ==.
                                   1637 ;	../src/pff.c: 752: if (*path == '/') path++;			/* Strip heading separator if exist */
                                   1638 ; genAssign
      00059C 1E 13            [ 2] 1639 	ldw	x, (0x13, sp)
                                   1640 ; genPointerGet
      00059E F6               [ 1] 1641 	ld	a, (x)
                                   1642 ; genCmpEQorNE
      00059F A1 2F            [ 1] 1643 	cp	a, #0x2f
      0005A1 26 03            [ 1] 1644 	jrne	00172$
      0005A3 CCr05rA9         [ 2] 1645 	jp	00173$
      0005A6                       1646 00172$:
      0005A6 CCr05rAE         [ 2] 1647 	jp	00105$
      0005A9                       1648 00173$:
                                   1649 ; skipping generated iCode
                                   1650 ; genPlus
      0005A9 1E 13            [ 2] 1651 	ldw	x, (0x13, sp)
      0005AB 5C               [ 1] 1652 	incw	x
                                   1653 ; genAssign
      0005AC 1F 13            [ 2] 1654 	ldw	(0x13, sp), x
                                   1655 ; genLabel
      0005AE                       1656 00105$:
                           0005AE  1657 	C$pff.c$753$1_0$360 ==.
                                   1658 ;	../src/pff.c: 753: dj->sclust = 0;						/* Set start directory (always root dir) */
                                   1659 ; genAssign
      0005AE 16 0F            [ 2] 1660 	ldw	y, (0x0f, sp)
      0005B0 17 0B            [ 2] 1661 	ldw	(0x0b, sp), y
                                   1662 ; genPlus
      0005B2 1E 0B            [ 2] 1663 	ldw	x, (0x0b, sp)
      0005B4 1C 00 04         [ 2] 1664 	addw	x, #0x0004
                                   1665 ; genPointerSet
      0005B7 90 5F            [ 1] 1666 	clrw	y
      0005B9 EF 02            [ 2] 1667 	ldw	(0x2, x), y
      0005BB FF               [ 2] 1668 	ldw	(x), y
                           0005BC  1669 	C$pff.c$755$1_0$360 ==.
                                   1670 ;	../src/pff.c: 755: if ((BYTE)*path < ' ') {			/* Null path means the root directory */
                                   1671 ; genAssign
      0005BC 1E 13            [ 2] 1672 	ldw	x, (0x13, sp)
                                   1673 ; genPointerGet
      0005BE F6               [ 1] 1674 	ld	a, (x)
                                   1675 ; genCmp
                                   1676 ; genCmpTop
      0005BF A1 20            [ 1] 1677 	cp	a, #0x20
      0005C1 25 03            [ 1] 1678 	jrc	00174$
      0005C3 CCr05rD5         [ 2] 1679 	jp	00130$
      0005C6                       1680 00174$:
                                   1681 ; skipping generated iCode
                           0005C6  1682 	C$pff.c$756$2_0$361 ==.
                                   1683 ;	../src/pff.c: 756: res = dir_rewind(dj);
                                   1684 ; genIPush
      0005C6 1E 0F            [ 2] 1685 	ldw	x, (0x0f, sp)
      0005C8 89               [ 2] 1686 	pushw	x
                                   1687 ; genCall
      0005C9 CDr02r5E         [ 4] 1688 	call	_dir_rewind
      0005CC 85               [ 2] 1689 	popw	x
                                   1690 ; genAssign
      0005CD 6B 0C            [ 1] 1691 	ld	(0x0c, sp), a
                           0005CF  1692 	C$pff.c$757$2_0$361 ==.
                                   1693 ;	../src/pff.c: 757: dir[0] = 0;
                                   1694 ; genAssign
      0005CF 1E 11            [ 2] 1695 	ldw	x, (0x11, sp)
                                   1696 ; genPointerSet
      0005D1 7F               [ 1] 1697 	clr	(x)
                                   1698 ; genGoto
      0005D2 CCr06r46         [ 2] 1699 	jp	00117$
                                   1700 ; genLabel
      0005D5                       1701 00130$:
                                   1702 ; genAssign
      0005D5 16 0B            [ 2] 1703 	ldw	y, (0x0b, sp)
      0005D7 17 01            [ 2] 1704 	ldw	(0x01, sp), y
                                   1705 ; genAssign
      0005D9 16 0B            [ 2] 1706 	ldw	y, (0x0b, sp)
      0005DB 17 03            [ 2] 1707 	ldw	(0x03, sp), y
                                   1708 ; genAssign
      0005DD 16 11            [ 2] 1709 	ldw	y, (0x11, sp)
      0005DF 17 05            [ 2] 1710 	ldw	(0x05, sp), y
                                   1711 ; genLabel
      0005E1                       1712 00118$:
                           0005E1  1713 	C$pff.c$761$4_0$364 ==.
                                   1714 ;	../src/pff.c: 761: res = create_name(dj, &path);	/* Get a segment */
                                   1715 ; skipping iCode since result will be rematerialized
                                   1716 ; skipping iCode since result will be rematerialized
                                   1717 ; genIPush
      0005E1 96               [ 1] 1718 	ldw	x, sp
      0005E2 1C 00 13         [ 2] 1719 	addw	x, #19
      0005E5 89               [ 2] 1720 	pushw	x
                                   1721 ; genIPush
      0005E6 1E 03            [ 2] 1722 	ldw	x, (0x03, sp)
      0005E8 89               [ 2] 1723 	pushw	x
                                   1724 ; genCall
      0005E9 CDr04rC6         [ 4] 1725 	call	_create_name
      0005EC 5B 04            [ 2] 1726 	addw	sp, #4
                                   1727 ; genAssign
      0005EE 6B 0C            [ 1] 1728 	ld	(0x0c, sp), a
                           0005F0  1729 	C$pff.c$762$4_0$364 ==.
                                   1730 ;	../src/pff.c: 762: if (res != FR_OK) break;
                                   1731 ; genIfx
      0005F0 0D 0C            [ 1] 1732 	tnz	(0x0c, sp)
      0005F2 27 03            [ 1] 1733 	jreq	00175$
      0005F4 CCr06r46         [ 2] 1734 	jp	00117$
      0005F7                       1735 00175$:
                           0005F7  1736 	C$pff.c$763$4_0$364 ==.
                                   1737 ;	../src/pff.c: 763: res = dir_find(dj, dir);		/* Find it */
                                   1738 ; genIPush
      0005F7 1E 11            [ 2] 1739 	ldw	x, (0x11, sp)
      0005F9 89               [ 2] 1740 	pushw	x
                                   1741 ; genIPush
      0005FA 1E 03            [ 2] 1742 	ldw	x, (0x03, sp)
      0005FC 89               [ 2] 1743 	pushw	x
                                   1744 ; genCall
      0005FD CDr04r13         [ 4] 1745 	call	_dir_find
      000600 5B 04            [ 2] 1746 	addw	sp, #4
                                   1747 ; genAssign
      000602 6B 0C            [ 1] 1748 	ld	(0x0c, sp), a
                           000604  1749 	C$pff.c$764$4_0$364 ==.
                                   1750 ;	../src/pff.c: 764: if (res != FR_OK) break;		/* Could not find the object */
                                   1751 ; genIfx
      000604 0D 0C            [ 1] 1752 	tnz	(0x0c, sp)
      000606 27 03            [ 1] 1753 	jreq	00176$
      000608 CCr06r46         [ 2] 1754 	jp	00117$
      00060B                       1755 00176$:
                           00060B  1756 	C$pff.c$765$4_0$364 ==.
                                   1757 ;	../src/pff.c: 765: if (dj->fn[11]) break;			/* Last segment match. Function completed. */
                                   1758 ; genPointerGet
      00060B 1E 03            [ 2] 1759 	ldw	x, (0x03, sp)
      00060D EE 02            [ 2] 1760 	ldw	x, (0x2, x)
                                   1761 ; genAssign
                                   1762 ; genPointerGet
      00060F E6 0B            [ 1] 1763 	ld	a, (0xb, x)
                                   1764 ; genIfx
      000611 4D               [ 1] 1765 	tnz	a
      000612 27 03            [ 1] 1766 	jreq	00177$
      000614 CCr06r46         [ 2] 1767 	jp	00117$
      000617                       1768 00177$:
                           000617  1769 	C$pff.c$766$4_0$364 ==.
                                   1770 ;	../src/pff.c: 766: if (!(dir[DIR_Attr] & AM_DIR)) { /* Cannot follow path because it is a file */
                                   1771 ; genPointerGet
      000617 1E 05            [ 2] 1772 	ldw	x, (0x05, sp)
      000619 E6 0B            [ 1] 1773 	ld	a, (0xb, x)
                                   1774 ; genAnd
      00061B A5 10            [ 1] 1775 	bcp	a, #0x10
      00061D 27 03            [ 1] 1776 	jreq	00178$
      00061F CCr06r29         [ 2] 1777 	jp	00113$
      000622                       1778 00178$:
                                   1779 ; skipping generated iCode
                           000622  1780 	C$pff.c$767$5_0$365 ==.
                                   1781 ;	../src/pff.c: 767: res = FR_NO_FILE; break;
                                   1782 ; genAssign
      000622 A6 03            [ 1] 1783 	ld	a, #0x03
      000624 6B 0C            [ 1] 1784 	ld	(0x0c, sp), a
                                   1785 ; genGoto
      000626 CCr06r46         [ 2] 1786 	jp	00117$
                                   1787 ; genLabel
      000629                       1788 00113$:
                           000629  1789 	C$pff.c$769$4_0$364 ==.
                                   1790 ;	../src/pff.c: 769: dj->sclust = get_clust(dir);	/* Follow next */
                                   1791 ; genPlus
      000629 1E 01            [ 2] 1792 	ldw	x, (0x01, sp)
      00062B 1C 00 04         [ 2] 1793 	addw	x, #0x0004
      00062E 1F 07            [ 2] 1794 	ldw	(0x07, sp), x
                                   1795 ; genIPush
      000630 1E 11            [ 2] 1796 	ldw	x, (0x11, sp)
      000632 89               [ 2] 1797 	pushw	x
                                   1798 ; genCall
      000633 CDr02r27         [ 4] 1799 	call	_get_clust
      000636 5B 02            [ 2] 1800 	addw	sp, #2
      000638 17 09            [ 2] 1801 	ldw	(0x09, sp), y
                                   1802 ; genPointerSet
      00063A 16 07            [ 2] 1803 	ldw	y, (0x07, sp)
      00063C 90 EF 02         [ 2] 1804 	ldw	(0x2, y), x
      00063F 1E 09            [ 2] 1805 	ldw	x, (0x09, sp)
      000641 90 FF            [ 2] 1806 	ldw	(y), x
                                   1807 ; genGoto
      000643 CCr05rE1         [ 2] 1808 	jp	00118$
                                   1809 ; genLabel
      000646                       1810 00117$:
                           000646  1811 	C$pff.c$773$1_0$360 ==.
                                   1812 ;	../src/pff.c: 773: return res;
                                   1813 ; genReturn
      000646 7B 0C            [ 1] 1814 	ld	a, (0x0c, sp)
                                   1815 ; genLabel
      000648                       1816 00120$:
                           000648  1817 	C$pff.c$774$1_0$360 ==.
                                   1818 ;	../src/pff.c: 774: }
                                   1819 ; genEndFunction
      000648 5B 0C            [ 2] 1820 	addw	sp, #12
                           00064A  1821 	C$pff.c$774$1_0$360 ==.
                           00064A  1822 	XFpff$follow_path$0$0 ==.
      00064A 81               [ 4] 1823 	ret
                           00064B  1824 	Fpff$check_fs$0$0 ==.
                           00064B  1825 	C$pff.c$783$1_0$367 ==.
                                   1826 ;	../src/pff.c: 783: static BYTE check_fs (	/* 0:The FAT boot record, 1:Valid boot record but not an FAT, 2:Not a boot record, 3:Error */
                                   1827 ; genLabel
                                   1828 ;	-----------------------------------------
                                   1829 ;	 function check_fs
                                   1830 ;	-----------------------------------------
                                   1831 ;	Register assignment might be sub-optimal.
                                   1832 ;	Stack space usage: 0 bytes.
      00064B                       1833 _check_fs:
                           00064B  1834 	C$pff.c$788$1_0$367 ==.
                                   1835 ;	../src/pff.c: 788: if (disk_readp(buf, sect, 510, 2)) {	/* Read the boot record */
                                   1836 ; genIPush
      00064B 4B 02            [ 1] 1837 	push	#0x02
      00064D 4B 00            [ 1] 1838 	push	#0x00
                                   1839 ; genIPush
      00064F 4B FE            [ 1] 1840 	push	#0xfe
      000651 4B 01            [ 1] 1841 	push	#0x01
                                   1842 ; genIPush
      000653 1E 0B            [ 2] 1843 	ldw	x, (0x0b, sp)
      000655 89               [ 2] 1844 	pushw	x
      000656 1E 0B            [ 2] 1845 	ldw	x, (0x0b, sp)
      000658 89               [ 2] 1846 	pushw	x
                                   1847 ; genIPush
      000659 1E 0B            [ 2] 1848 	ldw	x, (0x0b, sp)
      00065B 89               [ 2] 1849 	pushw	x
                                   1850 ; genCall
      00065C CDr00r00         [ 4] 1851 	call	_disk_readp
      00065F 5B 0A            [ 2] 1852 	addw	sp, #10
                                   1853 ; genIfx
      000661 4D               [ 1] 1854 	tnz	a
      000662 26 03            [ 1] 1855 	jrne	00135$
      000664 CCr06r6C         [ 2] 1856 	jp	00102$
      000667                       1857 00135$:
                           000667  1858 	C$pff.c$789$2_0$368 ==.
                                   1859 ;	../src/pff.c: 789: return 3;
                                   1860 ; genReturn
      000667 A6 03            [ 1] 1861 	ld	a, #0x03
      000669 CCr06rB6         [ 2] 1862 	jp	00113$
                                   1863 ; genLabel
      00066C                       1864 00102$:
                           00066C  1865 	C$pff.c$791$1_0$367 ==.
                                   1866 ;	../src/pff.c: 791: if (ld_word(buf) != 0xAA55) {			/* Check record signature */
                                   1867 ; genIPush
      00066C 1E 03            [ 2] 1868 	ldw	x, (0x03, sp)
      00066E 89               [ 2] 1869 	pushw	x
                                   1870 ; genCall
      00066F CDr00r00         [ 4] 1871 	call	_ld_word
      000672 5B 02            [ 2] 1872 	addw	sp, #2
                                   1873 ; genCast
                                   1874 ; genAssign
                                   1875 ; genCmpEQorNE
      000674 A3 AA 55         [ 2] 1876 	cpw	x, #0xaa55
      000677 26 03            [ 1] 1877 	jrne	00137$
      000679 CCr06r81         [ 2] 1878 	jp	00111$
      00067C                       1879 00137$:
                                   1880 ; skipping generated iCode
                           00067C  1881 	C$pff.c$792$2_0$369 ==.
                                   1882 ;	../src/pff.c: 792: return 2;
                                   1883 ; genReturn
      00067C A6 02            [ 1] 1884 	ld	a, #0x02
      00067E CCr06rB6         [ 2] 1885 	jp	00113$
                           000681  1886 	C$pff.c$798$1_0$367 ==.
                                   1887 ;	../src/pff.c: 798: if (PF_FS_FAT32 && !disk_readp(buf, sect, BS_FilSysType32, 2) && ld_word(buf) == 0x4146) {	/* Check FAT32 */
                                   1888 ; genLabel
      000681                       1889 00111$:
                                   1890 ; genIPush
      000681 4B 02            [ 1] 1891 	push	#0x02
      000683 4B 00            [ 1] 1892 	push	#0x00
                                   1893 ; genIPush
      000685 4B 52            [ 1] 1894 	push	#0x52
      000687 4B 00            [ 1] 1895 	push	#0x00
                                   1896 ; genIPush
      000689 1E 0B            [ 2] 1897 	ldw	x, (0x0b, sp)
      00068B 89               [ 2] 1898 	pushw	x
      00068C 1E 0B            [ 2] 1899 	ldw	x, (0x0b, sp)
      00068E 89               [ 2] 1900 	pushw	x
                                   1901 ; genIPush
      00068F 1E 0B            [ 2] 1902 	ldw	x, (0x0b, sp)
      000691 89               [ 2] 1903 	pushw	x
                                   1904 ; genCall
      000692 CDr00r00         [ 4] 1905 	call	_disk_readp
      000695 5B 0A            [ 2] 1906 	addw	sp, #10
                                   1907 ; genIfx
      000697 4D               [ 1] 1908 	tnz	a
      000698 27 03            [ 1] 1909 	jreq	00139$
      00069A CCr06rB4         [ 2] 1910 	jp	00110$
      00069D                       1911 00139$:
                                   1912 ; genIPush
      00069D 1E 03            [ 2] 1913 	ldw	x, (0x03, sp)
      00069F 89               [ 2] 1914 	pushw	x
                                   1915 ; genCall
      0006A0 CDr00r00         [ 4] 1916 	call	_ld_word
      0006A3 5B 02            [ 2] 1917 	addw	sp, #2
                                   1918 ; genCast
                                   1919 ; genAssign
                                   1920 ; genCmpEQorNE
      0006A5 A3 41 46         [ 2] 1921 	cpw	x, #0x4146
      0006A8 26 03            [ 1] 1922 	jrne	00141$
      0006AA CCr06rB0         [ 2] 1923 	jp	00142$
      0006AD                       1924 00141$:
      0006AD CCr06rB4         [ 2] 1925 	jp	00110$
      0006B0                       1926 00142$:
                                   1927 ; skipping generated iCode
                           0006B0  1928 	C$pff.c$799$2_0$371 ==.
                                   1929 ;	../src/pff.c: 799: return 0;
                                   1930 ; genReturn
      0006B0 4F               [ 1] 1931 	clr	a
      0006B1 CCr06rB6         [ 2] 1932 	jp	00113$
                                   1933 ; genLabel
      0006B4                       1934 00110$:
                           0006B4  1935 	C$pff.c$801$1_0$367 ==.
                                   1936 ;	../src/pff.c: 801: return 1;
                                   1937 ; genReturn
      0006B4 A6 01            [ 1] 1938 	ld	a, #0x01
                                   1939 ; genLabel
      0006B6                       1940 00113$:
                           0006B6  1941 	C$pff.c$802$1_0$367 ==.
                                   1942 ;	../src/pff.c: 802: }
                                   1943 ; genEndFunction
                           0006B6  1944 	C$pff.c$802$1_0$367 ==.
                           0006B6  1945 	XFpff$check_fs$0$0 ==.
      0006B6 81               [ 4] 1946 	ret
                           0006B7  1947 	G$pf_mount$0$0 ==.
                           0006B7  1948 	C$pff.c$819$1_0$373 ==.
                                   1949 ;	../src/pff.c: 819: FRESULT pf_mount (
                                   1950 ; genLabel
                                   1951 ;	-----------------------------------------
                                   1952 ;	 function pf_mount
                                   1953 ;	-----------------------------------------
                                   1954 ;	Register assignment might be sub-optimal.
                                   1955 ;	Stack space usage: 60 bytes.
      0006B7                       1956 _pf_mount:
      0006B7 52 3C            [ 2] 1957 	sub	sp, #60
                           0006B9  1958 	C$pff.c$827$1_0$373 ==.
                                   1959 ;	../src/pff.c: 827: FatFs = 0;
                                   1960 ; genAssign
      0006B9 5F               [ 1] 1961 	clrw	x
      0006BA CFu00u00         [ 2] 1962 	ldw	_FatFs+0, x
                           0006BD  1963 	C$pff.c$829$1_0$373 ==.
                                   1964 ;	../src/pff.c: 829: if (disk_initialize() & STA_NOINIT) {	/* Check if the drive is ready or not */
                                   1965 ; genCall
      0006BD CDr00r00         [ 4] 1966 	call	_disk_initialize
                                   1967 ; genAnd
      0006C0 44               [ 1] 1968 	srl	a
      0006C1 25 03            [ 1] 1969 	jrc	00194$
      0006C3 CCr06rCB         [ 2] 1970 	jp	00102$
      0006C6                       1971 00194$:
                                   1972 ; skipping generated iCode
                           0006C6  1973 	C$pff.c$830$2_0$374 ==.
                                   1974 ;	../src/pff.c: 830: return FR_NOT_READY;
                                   1975 ; genReturn
      0006C6 A6 02            [ 1] 1976 	ld	a, #0x02
      0006C8 CCr09r2A         [ 2] 1977 	jp	00137$
                                   1978 ; genLabel
      0006CB                       1979 00102$:
                           0006CB  1980 	C$pff.c$834$1_0$373 ==.
                                   1981 ;	../src/pff.c: 834: bsect = 0;
                                   1982 ; genAssign
      0006CB 5F               [ 1] 1983 	clrw	x
      0006CC 1F 37            [ 2] 1984 	ldw	(0x37, sp), x
      0006CE 1F 35            [ 2] 1985 	ldw	(0x35, sp), x
                           0006D0  1986 	C$pff.c$835$1_0$373 ==.
                                   1987 ;	../src/pff.c: 835: fmt = check_fs(buf, bsect);			/* Check sector 0 as an SFD format */
                                   1988 ; skipping iCode since result will be rematerialized
                                   1989 ; skipping iCode since result will be rematerialized
                                   1990 ; genIPush
      0006D0 5F               [ 1] 1991 	clrw	x
      0006D1 89               [ 2] 1992 	pushw	x
      0006D2 5F               [ 1] 1993 	clrw	x
      0006D3 89               [ 2] 1994 	pushw	x
                                   1995 ; genIPush
      0006D4 96               [ 1] 1996 	ldw	x, sp
      0006D5 1C 00 05         [ 2] 1997 	addw	x, #5
      0006D8 89               [ 2] 1998 	pushw	x
                                   1999 ; genCall
      0006D9 CDr06r4B         [ 4] 2000 	call	_check_fs
      0006DC 5B 06            [ 2] 2001 	addw	sp, #6
                                   2002 ; genAssign
      0006DE 6B 3C            [ 1] 2003 	ld	(0x3c, sp), a
                           0006E0  2004 	C$pff.c$836$1_0$373 ==.
                                   2005 ;	../src/pff.c: 836: if (fmt == 1) {						/* Not an FAT boot record, it may be FDISK format */
                                   2006 ; genCmpEQorNE
      0006E0 7B 3C            [ 1] 2007 	ld	a, (0x3c, sp)
      0006E2 4A               [ 1] 2008 	dec	a
      0006E3 26 03            [ 1] 2009 	jrne	00196$
      0006E5 CCr06rEB         [ 2] 2010 	jp	00197$
      0006E8                       2011 00196$:
      0006E8 CCr07r38         [ 2] 2012 	jp	00109$
      0006EB                       2013 00197$:
                                   2014 ; skipping generated iCode
                           0006EB  2015 	C$pff.c$838$2_0$375 ==.
                                   2016 ;	../src/pff.c: 838: if (disk_readp(buf, bsect, MBR_Table, 16)) {	/* 1st partition entry */
                                   2017 ; skipping iCode since result will be rematerialized
                                   2018 ; skipping iCode since result will be rematerialized
                                   2019 ; genIPush
      0006EB 4B 10            [ 1] 2020 	push	#0x10
      0006ED 4B 00            [ 1] 2021 	push	#0x00
                                   2022 ; genIPush
      0006EF 4B BE            [ 1] 2023 	push	#0xbe
      0006F1 4B 01            [ 1] 2024 	push	#0x01
                                   2025 ; genIPush
      0006F3 1E 3B            [ 2] 2026 	ldw	x, (0x3b, sp)
      0006F5 89               [ 2] 2027 	pushw	x
      0006F6 1E 3B            [ 2] 2028 	ldw	x, (0x3b, sp)
      0006F8 89               [ 2] 2029 	pushw	x
                                   2030 ; genIPush
      0006F9 96               [ 1] 2031 	ldw	x, sp
      0006FA 1C 00 09         [ 2] 2032 	addw	x, #9
      0006FD 89               [ 2] 2033 	pushw	x
                                   2034 ; genCall
      0006FE CDr00r00         [ 4] 2035 	call	_disk_readp
      000701 5B 0A            [ 2] 2036 	addw	sp, #10
                                   2037 ; genIfx
      000703 4D               [ 1] 2038 	tnz	a
      000704 26 03            [ 1] 2039 	jrne	00198$
      000706 CCr07r10         [ 2] 2040 	jp	00106$
      000709                       2041 00198$:
                           000709  2042 	C$pff.c$839$3_0$376 ==.
                                   2043 ;	../src/pff.c: 839: fmt = 3;
                                   2044 ; genAssign
      000709 A6 03            [ 1] 2045 	ld	a, #0x03
      00070B 6B 3C            [ 1] 2046 	ld	(0x3c, sp), a
                                   2047 ; genGoto
      00070D CCr07r38         [ 2] 2048 	jp	00109$
                                   2049 ; genLabel
      000710                       2050 00106$:
                           000710  2051 	C$pff.c$841$3_0$377 ==.
                                   2052 ;	../src/pff.c: 841: if (buf[4]) {					/* Is the partition existing? */
                                   2053 ; skipping iCode since result will be rematerialized
                                   2054 ; genPointerGet
      000710 7B 05            [ 1] 2055 	ld	a, (0x05, sp)
                                   2056 ; genIfx
      000712 4D               [ 1] 2057 	tnz	a
      000713 26 03            [ 1] 2058 	jrne	00199$
      000715 CCr07r38         [ 2] 2059 	jp	00109$
      000718                       2060 00199$:
                           000718  2061 	C$pff.c$842$4_0$378 ==.
                                   2062 ;	../src/pff.c: 842: bsect = ld_dword(&buf[8]);	/* Partition offset in LBA */
                                   2063 ; skipping iCode since result will be rematerialized
                                   2064 ; genPlus
      000718 96               [ 1] 2065 	ldw	x, sp
      000719 1C 00 09         [ 2] 2066 	addw	x, #9
                                   2067 ; genCast
                                   2068 ; genAssign
                                   2069 ; genIPush
      00071C 89               [ 2] 2070 	pushw	x
                                   2071 ; genCall
      00071D CDr00r18         [ 4] 2072 	call	_ld_dword
      000720 5B 02            [ 2] 2073 	addw	sp, #2
                                   2074 ; genAssign
      000722 1F 37            [ 2] 2075 	ldw	(0x37, sp), x
      000724 17 35            [ 2] 2076 	ldw	(0x35, sp), y
                           000726  2077 	C$pff.c$843$4_0$378 ==.
                                   2078 ;	../src/pff.c: 843: fmt = check_fs(buf, bsect);	/* Check the partition */
                                   2079 ; skipping iCode since result will be rematerialized
                                   2080 ; skipping iCode since result will be rematerialized
                                   2081 ; genIPush
      000726 1E 37            [ 2] 2082 	ldw	x, (0x37, sp)
      000728 89               [ 2] 2083 	pushw	x
      000729 1E 37            [ 2] 2084 	ldw	x, (0x37, sp)
      00072B 89               [ 2] 2085 	pushw	x
                                   2086 ; genIPush
      00072C 96               [ 1] 2087 	ldw	x, sp
      00072D 1C 00 05         [ 2] 2088 	addw	x, #5
      000730 89               [ 2] 2089 	pushw	x
                                   2090 ; genCall
      000731 CDr06r4B         [ 4] 2091 	call	_check_fs
      000734 5B 06            [ 2] 2092 	addw	sp, #6
                                   2093 ; genAssign
      000736 6B 3C            [ 1] 2094 	ld	(0x3c, sp), a
                                   2095 ; genLabel
      000738                       2096 00109$:
                           000738  2097 	C$pff.c$847$1_0$373 ==.
                                   2098 ;	../src/pff.c: 847: if (fmt == 3) return FR_DISK_ERR;
                                   2099 ; genCmpEQorNE
      000738 7B 3C            [ 1] 2100 	ld	a, (0x3c, sp)
      00073A A1 03            [ 1] 2101 	cp	a, #0x03
      00073C 26 03            [ 1] 2102 	jrne	00201$
      00073E CCr07r44         [ 2] 2103 	jp	00202$
      000741                       2104 00201$:
      000741 CCr07r49         [ 2] 2105 	jp	00111$
      000744                       2106 00202$:
                                   2107 ; skipping generated iCode
                                   2108 ; genReturn
      000744 A6 01            [ 1] 2109 	ld	a, #0x01
      000746 CCr09r2A         [ 2] 2110 	jp	00137$
                                   2111 ; genLabel
      000749                       2112 00111$:
                           000749  2113 	C$pff.c$848$1_0$373 ==.
                                   2114 ;	../src/pff.c: 848: if (fmt) return FR_NO_FILESYSTEM;	/* No valid FAT patition is found */
                                   2115 ; genIfx
      000749 0D 3C            [ 1] 2116 	tnz	(0x3c, sp)
      00074B 26 03            [ 1] 2117 	jrne	00203$
      00074D CCr07r55         [ 2] 2118 	jp	00113$
      000750                       2119 00203$:
                                   2120 ; genReturn
      000750 A6 06            [ 1] 2121 	ld	a, #0x06
      000752 CCr09r2A         [ 2] 2122 	jp	00137$
                                   2123 ; genLabel
      000755                       2124 00113$:
                           000755  2125 	C$pff.c$851$1_0$373 ==.
                                   2126 ;	../src/pff.c: 851: if (disk_readp(buf, bsect, 13, sizeof (buf))) return FR_DISK_ERR;
                                   2127 ; skipping iCode since result will be rematerialized
                                   2128 ; skipping iCode since result will be rematerialized
                                   2129 ; genIPush
      000755 4B 24            [ 1] 2130 	push	#0x24
      000757 4B 00            [ 1] 2131 	push	#0x00
                                   2132 ; genIPush
      000759 4B 0D            [ 1] 2133 	push	#0x0d
      00075B 4B 00            [ 1] 2134 	push	#0x00
                                   2135 ; genIPush
      00075D 1E 3B            [ 2] 2136 	ldw	x, (0x3b, sp)
      00075F 89               [ 2] 2137 	pushw	x
      000760 1E 3B            [ 2] 2138 	ldw	x, (0x3b, sp)
      000762 89               [ 2] 2139 	pushw	x
                                   2140 ; genIPush
      000763 96               [ 1] 2141 	ldw	x, sp
      000764 1C 00 09         [ 2] 2142 	addw	x, #9
      000767 89               [ 2] 2143 	pushw	x
                                   2144 ; genCall
      000768 CDr00r00         [ 4] 2145 	call	_disk_readp
      00076B 5B 0A            [ 2] 2146 	addw	sp, #10
                                   2147 ; genIfx
      00076D 4D               [ 1] 2148 	tnz	a
      00076E 26 03            [ 1] 2149 	jrne	00204$
      000770 CCr07r78         [ 2] 2150 	jp	00115$
      000773                       2151 00204$:
                                   2152 ; genReturn
      000773 A6 01            [ 1] 2153 	ld	a, #0x01
      000775 CCr09r2A         [ 2] 2154 	jp	00137$
                                   2155 ; genLabel
      000778                       2156 00115$:
                           000778  2157 	C$pff.c$853$1_0$373 ==.
                                   2158 ;	../src/pff.c: 853: fsize = ld_word(buf+BPB_FATSz16-13);				/* Number of sectors per FAT */
                                   2159 ; genAddrOf
      000778 96               [ 1] 2160 	ldw	x, sp
      000779 1C 00 0A         [ 2] 2161 	addw	x, #10
                                   2162 ; genCast
                                   2163 ; genAssign
                                   2164 ; genIPush
      00077C 89               [ 2] 2165 	pushw	x
                                   2166 ; genCall
      00077D CDr00r00         [ 4] 2167 	call	_ld_word
      000780 5B 02            [ 2] 2168 	addw	sp, #2
                                   2169 ; genCast
                                   2170 ; genAssign
      000782 90 5F            [ 1] 2171 	clrw	y
                                   2172 ; genAssign
      000784 1F 3B            [ 2] 2173 	ldw	(0x3b, sp), x
      000786 17 39            [ 2] 2174 	ldw	(0x39, sp), y
                           000788  2175 	C$pff.c$854$1_0$373 ==.
                                   2176 ;	../src/pff.c: 854: if (!fsize) fsize = ld_dword(buf+BPB_FATSz32-13);
                                   2177 ; genIfx
      000788 1E 3B            [ 2] 2178 	ldw	x, (0x3b, sp)
      00078A 26 04            [ 1] 2179 	jrne	00205$
      00078C 1E 39            [ 2] 2180 	ldw	x, (0x39, sp)
      00078E 27 03            [ 1] 2181 	jreq	00206$
      000790                       2182 00205$:
      000790 CCr07rA1         [ 2] 2183 	jp	00117$
      000793                       2184 00206$:
                                   2185 ; genAddrOf
      000793 96               [ 1] 2186 	ldw	x, sp
      000794 1C 00 18         [ 2] 2187 	addw	x, #24
                                   2188 ; genCast
                                   2189 ; genAssign
                                   2190 ; genIPush
      000797 89               [ 2] 2191 	pushw	x
                                   2192 ; genCall
      000798 CDr00r18         [ 4] 2193 	call	_ld_dword
      00079B 5B 02            [ 2] 2194 	addw	sp, #2
                                   2195 ; genAssign
      00079D 1F 3B            [ 2] 2196 	ldw	(0x3b, sp), x
      00079F 17 39            [ 2] 2197 	ldw	(0x39, sp), y
                                   2198 ; genLabel
      0007A1                       2199 00117$:
                           0007A1  2200 	C$pff.c$856$1_0$373 ==.
                                   2201 ;	../src/pff.c: 856: fsize *= buf[BPB_NumFATs-13];						/* Number of sectors in FAT area */
                                   2202 ; skipping iCode since result will be rematerialized
                                   2203 ; skipping iCode since result will be rematerialized
                                   2204 ; genPointerGet
      0007A1 7B 04            [ 1] 2205 	ld	a, (0x04, sp)
                                   2206 ; genCast
                                   2207 ; genAssign
      0007A3 5F               [ 1] 2208 	clrw	x
      0007A4 97               [ 1] 2209 	ld	xl, a
      0007A5 90 5F            [ 1] 2210 	clrw	y
                                   2211 ; genIPush
      0007A7 89               [ 2] 2212 	pushw	x
      0007A8 90 89            [ 2] 2213 	pushw	y
                                   2214 ; genIPush
      0007AA 1E 3F            [ 2] 2215 	ldw	x, (0x3f, sp)
      0007AC 89               [ 2] 2216 	pushw	x
      0007AD 1E 3F            [ 2] 2217 	ldw	x, (0x3f, sp)
      0007AF 89               [ 2] 2218 	pushw	x
                                   2219 ; genCall
      0007B0 CDr00r00         [ 4] 2220 	call	__mullong
      0007B3 5B 08            [ 2] 2221 	addw	sp, #8
                                   2222 ; genAssign
      0007B5 1F 27            [ 2] 2223 	ldw	(0x27, sp), x
      0007B7 17 25            [ 2] 2224 	ldw	(0x25, sp), y
                           0007B9  2225 	C$pff.c$857$1_0$373 ==.
                                   2226 ;	../src/pff.c: 857: fs->fatbase = bsect + ld_word(buf+BPB_RsvdSecCnt-13); /* FAT start sector (lba) */
                                   2227 ; genAssign
      0007B9 16 3F            [ 2] 2228 	ldw	y, (0x3f, sp)
      0007BB 17 29            [ 2] 2229 	ldw	(0x29, sp), y
                                   2230 ; genPlus
      0007BD 1E 29            [ 2] 2231 	ldw	x, (0x29, sp)
      0007BF 1C 00 0A         [ 2] 2232 	addw	x, #0x000a
      0007C2 1F 2B            [ 2] 2233 	ldw	(0x2b, sp), x
                                   2234 ; genMinus
      0007C4 96               [ 1] 2235 	ldw	x, sp
      0007C5 1C 00 02         [ 2] 2236 	addw	x, #-65534
                                   2237 ; genCast
                                   2238 ; genAssign
                                   2239 ; genIPush
      0007C8 89               [ 2] 2240 	pushw	x
                                   2241 ; genCall
      0007C9 CDr00r00         [ 4] 2242 	call	_ld_word
      0007CC 5B 02            [ 2] 2243 	addw	sp, #2
                                   2244 ; genCast
                                   2245 ; genAssign
      0007CE 51               [ 1] 2246 	exgw	x, y
      0007CF 4F               [ 1] 2247 	clr	a
      0007D0 5F               [ 1] 2248 	clrw	x
                                   2249 ; genPlus
      0007D1 72 F9 37         [ 2] 2250 	addw	y, (0x37, sp)
      0007D4 19 36            [ 1] 2251 	adc	a, (0x36, sp)
      0007D6 6B 3A            [ 1] 2252 	ld	(0x3a, sp), a
      0007D8 9E               [ 1] 2253 	ld	a, xh
      0007D9 19 35            [ 1] 2254 	adc	a, (0x35, sp)
      0007DB 6B 39            [ 1] 2255 	ld	(0x39, sp), a
                                   2256 ; genPointerSet
      0007DD 1E 2B            [ 2] 2257 	ldw	x, (0x2b, sp)
      0007DF EF 02            [ 2] 2258 	ldw	(0x2, x), y
      0007E1 16 39            [ 2] 2259 	ldw	y, (0x39, sp)
      0007E3 FF               [ 2] 2260 	ldw	(x), y
                           0007E4  2261 	C$pff.c$858$1_0$373 ==.
                                   2262 ;	../src/pff.c: 858: fs->csize = buf[BPB_SecPerClus-13];					/* Number of sectors per cluster */
                                   2263 ; genPlus
      0007E4 1E 29            [ 2] 2264 	ldw	x, (0x29, sp)
      0007E6 5C               [ 1] 2265 	incw	x
      0007E7 5C               [ 1] 2266 	incw	x
      0007E8 1F 2D            [ 2] 2267 	ldw	(0x2d, sp), x
                                   2268 ; genPointerGet
      0007EA 7B 01            [ 1] 2269 	ld	a, (0x01, sp)
                                   2270 ; genPointerSet
      0007EC 1E 2D            [ 2] 2271 	ldw	x, (0x2d, sp)
      0007EE F7               [ 1] 2272 	ld	(x), a
                           0007EF  2273 	C$pff.c$859$1_0$373 ==.
                                   2274 ;	../src/pff.c: 859: fs->n_rootdir = ld_word(buf+BPB_RootEntCnt-13);		/* Nmuber of root directory entries */
                                   2275 ; genPlus
      0007EF 1E 29            [ 2] 2276 	ldw	x, (0x29, sp)
      0007F1 1C 00 04         [ 2] 2277 	addw	x, #0x0004
      0007F4 1F 2F            [ 2] 2278 	ldw	(0x2f, sp), x
                                   2279 ; genMinus
      0007F6 96               [ 1] 2280 	ldw	x, sp
      0007F7 1C 00 05         [ 2] 2281 	addw	x, #-65531
                                   2282 ; genCast
                                   2283 ; genAssign
                                   2284 ; genIPush
      0007FA 89               [ 2] 2285 	pushw	x
                                   2286 ; genCall
      0007FB CDr00r00         [ 4] 2287 	call	_ld_word
      0007FE 5B 02            [ 2] 2288 	addw	sp, #2
                                   2289 ; genPointerSet
      000800 16 2F            [ 2] 2290 	ldw	y, (0x2f, sp)
      000802 90 FF            [ 2] 2291 	ldw	(y), x
                           000804  2292 	C$pff.c$860$1_0$373 ==.
                                   2293 ;	../src/pff.c: 860: tsect = ld_word(buf+BPB_TotSec16-13);				/* Number of sectors on the file system */
                                   2294 ; genMinus
      000804 96               [ 1] 2295 	ldw	x, sp
      000805 1C 00 07         [ 2] 2296 	addw	x, #-65529
                                   2297 ; genCast
                                   2298 ; genAssign
                                   2299 ; genIPush
      000808 89               [ 2] 2300 	pushw	x
                                   2301 ; genCall
      000809 CDr00r00         [ 4] 2302 	call	_ld_word
      00080C 5B 02            [ 2] 2303 	addw	sp, #2
                                   2304 ; genCast
                                   2305 ; genAssign
      00080E 90 5F            [ 1] 2306 	clrw	y
                                   2307 ; genAssign
      000810 1F 37            [ 2] 2308 	ldw	(0x37, sp), x
      000812 17 35            [ 2] 2309 	ldw	(0x35, sp), y
                           000814  2310 	C$pff.c$861$1_0$373 ==.
                                   2311 ;	../src/pff.c: 861: if (!tsect) tsect = ld_dword(buf+BPB_TotSec32-13);
                                   2312 ; genIfx
      000814 5D               [ 2] 2313 	tnzw	x
      000815 26 04            [ 1] 2314 	jrne	00207$
      000817 90 5D            [ 2] 2315 	tnzw	y
      000819 27 03            [ 1] 2316 	jreq	00208$
      00081B                       2317 00207$:
      00081B CCr08r2C         [ 2] 2318 	jp	00119$
      00081E                       2319 00208$:
                                   2320 ; skipping iCode since result will be rematerialized
                                   2321 ; skipping iCode since result will be rematerialized
                                   2322 ; genIPush
      00081E 96               [ 1] 2323 	ldw	x, sp
      00081F 1C 00 14         [ 2] 2324 	addw	x, #20
      000822 89               [ 2] 2325 	pushw	x
                                   2326 ; genCall
      000823 CDr00r18         [ 4] 2327 	call	_ld_dword
      000826 5B 02            [ 2] 2328 	addw	sp, #2
                                   2329 ; genAssign
      000828 1F 37            [ 2] 2330 	ldw	(0x37, sp), x
      00082A 17 35            [ 2] 2331 	ldw	(0x35, sp), y
                                   2332 ; genLabel
      00082C                       2333 00119$:
                           00082C  2334 	C$pff.c$863$1_0$373 ==.
                                   2335 ;	../src/pff.c: 863: - ld_word(buf+BPB_RsvdSecCnt-13) - fsize - fs->n_rootdir / 16
                                   2336 ; genAddrOf
      00082C 96               [ 1] 2337 	ldw	x, sp
      00082D 5C               [ 1] 2338 	incw	x
      00082E 5C               [ 1] 2339 	incw	x
                                   2340 ; genCast
                                   2341 ; genAssign
                                   2342 ; genIPush
      00082F 89               [ 2] 2343 	pushw	x
                                   2344 ; genCall
      000830 CDr00r00         [ 4] 2345 	call	_ld_word
      000833 5B 02            [ 2] 2346 	addw	sp, #2
                                   2347 ; genCast
                                   2348 ; genAssign
      000835 1F 3B            [ 2] 2349 	ldw	(0x3b, sp), x
      000837 0F 3A            [ 1] 2350 	clr	(0x3a, sp)
      000839 0F 39            [ 1] 2351 	clr	(0x39, sp)
                                   2352 ; genMinus
      00083B 16 37            [ 2] 2353 	ldw	y, (0x37, sp)
      00083D 72 F2 3B         [ 2] 2354 	subw	y, (0x3b, sp)
      000840 7B 36            [ 1] 2355 	ld	a, (0x36, sp)
      000842 12 3A            [ 1] 2356 	sbc	a, (0x3a, sp)
      000844 88               [ 1] 2357 	push	a
      000845 7B 36            [ 1] 2358 	ld	a, (0x36, sp)
      000847 12 3A            [ 1] 2359 	sbc	a, (0x3a, sp)
      000849 97               [ 1] 2360 	ld	xl, a
      00084A 84               [ 1] 2361 	pop	a
                                   2362 ; genMinus
      00084B 72 F2 27         [ 2] 2363 	subw	y, (0x27, sp)
      00084E 12 26            [ 1] 2364 	sbc	a, (0x26, sp)
      000850 6B 32            [ 1] 2365 	ld	(0x32, sp), a
      000852 9F               [ 1] 2366 	ld	a, xl
      000853 12 25            [ 1] 2367 	sbc	a, (0x25, sp)
                                   2368 ; genPointerGet
      000855 1E 2F            [ 2] 2369 	ldw	x, (0x2f, sp)
      000857 FE               [ 2] 2370 	ldw	x, (x)
                                   2371 ; genCast
                                   2372 ; genAssign
                                   2373 ; genRightShiftLiteral
      000858 54               [ 2] 2374 	srlw	x
      000859 54               [ 2] 2375 	srlw	x
      00085A 54               [ 2] 2376 	srlw	x
      00085B 54               [ 2] 2377 	srlw	x
                                   2378 ; genCast
                                   2379 ; genAssign
      00085C 1F 37            [ 2] 2380 	ldw	(0x37, sp), x
      00085E 5F               [ 1] 2381 	clrw	x
      00085F 0F 35            [ 1] 2382 	clr	(0x35, sp)
                                   2383 ; genMinus
      000861 72 F2 37         [ 2] 2384 	subw	y, (0x37, sp)
      000864 17 3B            [ 2] 2385 	ldw	(0x3b, sp), y
      000866 88               [ 1] 2386 	push	a
      000867 7B 33            [ 1] 2387 	ld	a, (0x33, sp)
      000869 89               [ 2] 2388 	pushw	x
      00086A 12 02            [ 1] 2389 	sbc	a, (2, sp)
      00086C 85               [ 2] 2390 	popw	x
      00086D 6B 3B            [ 1] 2391 	ld	(0x3b, sp), a
      00086F 84               [ 1] 2392 	pop	a
      000870 12 35            [ 1] 2393 	sbc	a, (0x35, sp)
      000872 6B 39            [ 1] 2394 	ld	(0x39, sp), a
                           000874  2395 	C$pff.c$864$1_0$373 ==.
                                   2396 ;	../src/pff.c: 864: ) / fs->csize + 2;
                                   2397 ; genPointerGet
      000874 1E 2D            [ 2] 2398 	ldw	x, (0x2d, sp)
      000876 F6               [ 1] 2399 	ld	a, (x)
                                   2400 ; genCast
                                   2401 ; genAssign
      000877 5F               [ 1] 2402 	clrw	x
      000878 97               [ 1] 2403 	ld	xl, a
      000879 90 5F            [ 1] 2404 	clrw	y
                                   2405 ; genIPush
      00087B 89               [ 2] 2406 	pushw	x
      00087C 90 89            [ 2] 2407 	pushw	y
                                   2408 ; genIPush
      00087E 1E 3F            [ 2] 2409 	ldw	x, (0x3f, sp)
      000880 89               [ 2] 2410 	pushw	x
      000881 1E 3F            [ 2] 2411 	ldw	x, (0x3f, sp)
      000883 89               [ 2] 2412 	pushw	x
                                   2413 ; genCall
      000884 CDr00r00         [ 4] 2414 	call	__divulong
      000887 5B 08            [ 2] 2415 	addw	sp, #8
      000889 17 39            [ 2] 2416 	ldw	(0x39, sp), y
                                   2417 ; genPlus
      00088B 1C 00 02         [ 2] 2418 	addw	x, #0x0002
      00088E 51               [ 1] 2419 	exgw	x, y
      00088F 1E 39            [ 2] 2420 	ldw	x, (0x39, sp)
      000891 24 01            [ 1] 2421 	jrnc	00209$
      000893 5C               [ 1] 2422 	incw	x
      000894                       2423 00209$:
                                   2424 ; genAssign
      000894 1F 39            [ 2] 2425 	ldw	(0x39, sp), x
                           000896  2426 	C$pff.c$865$1_0$373 ==.
                                   2427 ;	../src/pff.c: 865: fs->n_fatent = (CLUST)mclst;
                                   2428 ; genPlus
      000896 1E 29            [ 2] 2429 	ldw	x, (0x29, sp)
      000898 1C 00 06         [ 2] 2430 	addw	x, #0x0006
                                   2431 ; genPointerSet
      00089B EF 02            [ 2] 2432 	ldw	(0x2, x), y
      00089D 7B 3A            [ 1] 2433 	ld	a, (0x3a, sp)
      00089F E7 01            [ 1] 2434 	ld	(0x1, x), a
      0008A1 7B 39            [ 1] 2435 	ld	a, (0x39, sp)
      0008A3 F7               [ 1] 2436 	ld	(x), a
                           0008A4  2437 	C$pff.c$867$1_0$373 ==.
                                   2438 ;	../src/pff.c: 867: fmt = 0;							/* Determine the FAT sub type */
                                   2439 ; genAssign
      0008A4 4F               [ 1] 2440 	clr	a
                           0008A5  2441 	C$pff.c$870$1_0$373 ==.
                                   2442 ;	../src/pff.c: 870: if (PF_FS_FAT32 && mclst >= 0xFFF7) fmt = FS_FAT32;
                                   2443 ; genCmp
                                   2444 ; genCmpTop
      0008A5 90 A3 FF F7      [ 2] 2445 	cpw	y, #0xfff7
      0008A9 88               [ 1] 2446 	push	a
      0008AA 7B 3B            [ 1] 2447 	ld	a, (0x3b, sp)
      0008AC A2 00            [ 1] 2448 	sbc	a, #0x00
      0008AE 7B 3A            [ 1] 2449 	ld	a, (0x3a, sp)
      0008B0 A2 00            [ 1] 2450 	sbc	a, #0x00
      0008B2 84               [ 1] 2451 	pop	a
      0008B3 24 03            [ 1] 2452 	jrnc	00210$
      0008B5 CCr08rBA         [ 2] 2453 	jp	00128$
      0008B8                       2454 00210$:
                                   2455 ; skipping generated iCode
                                   2456 ; genAssign
      0008B8 A6 03            [ 1] 2457 	ld	a, #0x03
                                   2458 ; genLabel
      0008BA                       2459 00128$:
                           0008BA  2460 	C$pff.c$871$1_0$373 ==.
                                   2461 ;	../src/pff.c: 871: if (!fmt) return FR_NO_FILESYSTEM;
                                   2462 ; genIfx
      0008BA 4D               [ 1] 2463 	tnz	a
      0008BB 27 03            [ 1] 2464 	jreq	00211$
      0008BD CCr08rC5         [ 2] 2465 	jp	00131$
      0008C0                       2466 00211$:
                                   2467 ; genReturn
      0008C0 A6 06            [ 1] 2468 	ld	a, #0x06
      0008C2 CCr09r2A         [ 2] 2469 	jp	00137$
                                   2470 ; genLabel
      0008C5                       2471 00131$:
                           0008C5  2472 	C$pff.c$872$1_0$373 ==.
                                   2473 ;	../src/pff.c: 872: fs->fs_type = fmt;
                                   2474 ; genPointerSet
      0008C5 1E 29            [ 2] 2475 	ldw	x, (0x29, sp)
      0008C7 F7               [ 1] 2476 	ld	(x), a
                           0008C8  2477 	C$pff.c$875$2_0$379 ==.
                                   2478 ;	../src/pff.c: 875: fs->dirbase = ld_dword(buf+(BPB_RootClus-13));	/* Root directory start cluster */
                                   2479 ; genPlus
      0008C8 1E 29            [ 2] 2480 	ldw	x, (0x29, sp)
      0008CA 1C 00 0E         [ 2] 2481 	addw	x, #0x000e
      0008CD 1F 37            [ 2] 2482 	ldw	(0x37, sp), x
                                   2483 ; genAddrOf
      0008CF 96               [ 1] 2484 	ldw	x, sp
      0008D0 1C 00 20         [ 2] 2485 	addw	x, #32
                                   2486 ; genCast
                                   2487 ; genAssign
                                   2488 ; genIPush
      0008D3 89               [ 2] 2489 	pushw	x
                                   2490 ; genCall
      0008D4 CDr00r18         [ 4] 2491 	call	_ld_dword
      0008D7 5B 02            [ 2] 2492 	addw	sp, #2
      0008D9 17 39            [ 2] 2493 	ldw	(0x39, sp), y
                                   2494 ; genPointerSet
      0008DB 16 37            [ 2] 2495 	ldw	y, (0x37, sp)
      0008DD 90 EF 02         [ 2] 2496 	ldw	(0x2, y), x
      0008E0 1E 39            [ 2] 2497 	ldw	x, (0x39, sp)
      0008E2 90 FF            [ 2] 2498 	ldw	(y), x
                           0008E4  2499 	C$pff.c$879$1_0$373 ==.
                                   2500 ;	../src/pff.c: 879: fs->database = fs->fatbase + fsize + fs->n_rootdir / 16;	/* Data start sector (lba) */
                                   2501 ; genPlus
      0008E4 1E 29            [ 2] 2502 	ldw	x, (0x29, sp)
      0008E6 1C 00 12         [ 2] 2503 	addw	x, #0x0012
      0008E9 1F 3B            [ 2] 2504 	ldw	(0x3b, sp), x
                                   2505 ; genPointerGet
      0008EB 1E 2B            [ 2] 2506 	ldw	x, (0x2b, sp)
      0008ED 90 93            [ 1] 2507 	ldw	y, x
      0008EF 90 EE 02         [ 2] 2508 	ldw	y, (0x2, y)
      0008F2 FE               [ 2] 2509 	ldw	x, (x)
                                   2510 ; genPlus
      0008F3 72 F9 27         [ 2] 2511 	addw	y, (0x27, sp)
      0008F6 17 39            [ 2] 2512 	ldw	(0x39, sp), y
      0008F8 9F               [ 1] 2513 	ld	a, xl
      0008F9 19 26            [ 1] 2514 	adc	a, (0x26, sp)
      0008FB 6B 38            [ 1] 2515 	ld	(0x38, sp), a
      0008FD 9E               [ 1] 2516 	ld	a, xh
      0008FE 19 25            [ 1] 2517 	adc	a, (0x25, sp)
                                   2518 ; genPointerGet
      000900 1E 2F            [ 2] 2519 	ldw	x, (0x2f, sp)
      000902 FE               [ 2] 2520 	ldw	x, (x)
                                   2521 ; genCast
                                   2522 ; genAssign
                                   2523 ; genRightShiftLiteral
      000903 54               [ 2] 2524 	srlw	x
      000904 54               [ 2] 2525 	srlw	x
      000905 54               [ 2] 2526 	srlw	x
      000906 54               [ 2] 2527 	srlw	x
                                   2528 ; genCast
                                   2529 ; genAssign
      000907 51               [ 1] 2530 	exgw	x, y
      000908 5F               [ 1] 2531 	clrw	x
      000909 0F 2F            [ 1] 2532 	clr	(0x2f, sp)
                                   2533 ; genPlus
      00090B 72 F9 39         [ 2] 2534 	addw	y, (0x39, sp)
      00090E 88               [ 1] 2535 	push	a
      00090F 9F               [ 1] 2536 	ld	a, xl
      000910 19 39            [ 1] 2537 	adc	a, (0x39, sp)
      000912 6B 35            [ 1] 2538 	ld	(0x35, sp), a
      000914 84               [ 1] 2539 	pop	a
      000915 19 2F            [ 1] 2540 	adc	a, (0x2f, sp)
      000917 6B 33            [ 1] 2541 	ld	(0x33, sp), a
                                   2542 ; genPointerSet
      000919 1E 3B            [ 2] 2543 	ldw	x, (0x3b, sp)
      00091B EF 02            [ 2] 2544 	ldw	(0x2, x), y
      00091D 16 33            [ 2] 2545 	ldw	y, (0x33, sp)
      00091F FF               [ 2] 2546 	ldw	(x), y
                           000920  2547 	C$pff.c$881$1_0$373 ==.
                                   2548 ;	../src/pff.c: 881: fs->flag = 0;
                                   2549 ; genPlus
      000920 1E 29            [ 2] 2550 	ldw	x, (0x29, sp)
      000922 5C               [ 1] 2551 	incw	x
                                   2552 ; genPointerSet
      000923 7F               [ 1] 2553 	clr	(x)
                           000924  2554 	C$pff.c$882$1_0$373 ==.
                                   2555 ;	../src/pff.c: 882: FatFs = fs;
                                   2556 ; genAssign
      000924 1E 29            [ 2] 2557 	ldw	x, (0x29, sp)
                                   2558 ; genAssign
      000926 CFu00u00         [ 2] 2559 	ldw	_FatFs+0, x
                           000929  2560 	C$pff.c$884$1_0$373 ==.
                                   2561 ;	../src/pff.c: 884: return FR_OK;
                                   2562 ; genReturn
      000929 4F               [ 1] 2563 	clr	a
                                   2564 ; genLabel
      00092A                       2565 00137$:
                           00092A  2566 	C$pff.c$885$1_0$373 ==.
                                   2567 ;	../src/pff.c: 885: }
                                   2568 ; genEndFunction
      00092A 5B 3C            [ 2] 2569 	addw	sp, #60
                           00092C  2570 	C$pff.c$885$1_0$373 ==.
                           00092C  2571 	XG$pf_mount$0$0 ==.
      00092C 81               [ 4] 2572 	ret
                           00092D  2573 	G$pf_open$0$0 ==.
                           00092D  2574 	C$pff.c$894$1_0$382 ==.
                                   2575 ;	../src/pff.c: 894: FRESULT pf_open (
                                   2576 ; genLabel
                                   2577 ;	-----------------------------------------
                                   2578 ;	 function pf_open
                                   2579 ;	-----------------------------------------
                                   2580 ;	Register assignment might be sub-optimal.
                                   2581 ;	Stack space usage: 70 bytes.
      00092D                       2582 _pf_open:
      00092D 52 46            [ 2] 2583 	sub	sp, #70
                           00092F  2584 	C$pff.c$901$2_0$382 ==.
                                   2585 ;	../src/pff.c: 901: FATFS *fs = FatFs;
                                   2586 ; genAssign
      00092F CEu00u00         [ 2] 2587 	ldw	x, _FatFs+0
      000932 1F 3D            [ 2] 2588 	ldw	(0x3d, sp), x
                           000934  2589 	C$pff.c$904$1_0$382 ==.
                                   2590 ;	../src/pff.c: 904: if (!fs) return FR_NOT_ENABLED;		/* Check file system */
                                   2591 ; genIfx
      000934 1E 3D            [ 2] 2592 	ldw	x, (0x3d, sp)
      000936 27 03            [ 1] 2593 	jreq	00125$
      000938 CCr09r40         [ 2] 2594 	jp	00102$
      00093B                       2595 00125$:
                                   2596 ; genReturn
      00093B A6 05            [ 1] 2597 	ld	a, #0x05
      00093D CCr09rCE         [ 2] 2598 	jp	00108$
                                   2599 ; genLabel
      000940                       2600 00102$:
                           000940  2601 	C$pff.c$906$1_0$382 ==.
                                   2602 ;	../src/pff.c: 906: fs->flag = 0;
                                   2603 ; genPlus
      000940 1E 3D            [ 2] 2604 	ldw	x, (0x3d, sp)
      000942 5C               [ 1] 2605 	incw	x
      000943 1F 3F            [ 2] 2606 	ldw	(0x3f, sp), x
                                   2607 ; genPointerSet
      000945 1E 3F            [ 2] 2608 	ldw	x, (0x3f, sp)
      000947 7F               [ 1] 2609 	clr	(x)
                           000948  2610 	C$pff.c$907$1_0$382 ==.
                                   2611 ;	../src/pff.c: 907: dj.fn = sp;
                                   2612 ; skipping iCode since result will be rematerialized
                                   2613 ; genPlus
      000948 96               [ 1] 2614 	ldw	x, sp
      000949 1C 00 03         [ 2] 2615 	addw	x, #3
                                   2616 ; skipping iCode since result will be rematerialized
                                   2617 ; skipping iCode since result will be rematerialized
                                   2618 ; genPointerSet
      00094C 90 96            [ 1] 2619 	ldw	y, sp
      00094E 72 A9 00 11      [ 2] 2620 	addw	y, #17
      000952 FF               [ 2] 2621 	ldw	(x), y
                           000953  2622 	C$pff.c$908$1_0$382 ==.
                                   2623 ;	../src/pff.c: 908: res = follow_path(&dj, dir, path);	/* Follow the file path */
                                   2624 ; skipping iCode since result will be rematerialized
                                   2625 ; skipping iCode since result will be rematerialized
                                   2626 ; skipping iCode since result will be rematerialized
                                   2627 ; skipping iCode since result will be rematerialized
                                   2628 ; genIPush
      000953 1E 49            [ 2] 2629 	ldw	x, (0x49, sp)
      000955 89               [ 2] 2630 	pushw	x
                                   2631 ; genIPush
      000956 96               [ 1] 2632 	ldw	x, sp
      000957 1C 00 1F         [ 2] 2633 	addw	x, #31
      00095A 89               [ 2] 2634 	pushw	x
                                   2635 ; genIPush
      00095B 96               [ 1] 2636 	ldw	x, sp
      00095C 1C 00 05         [ 2] 2637 	addw	x, #5
      00095F 89               [ 2] 2638 	pushw	x
                                   2639 ; genCall
      000960 CDr05r85         [ 4] 2640 	call	_follow_path
      000963 5B 06            [ 2] 2641 	addw	sp, #6
                                   2642 ; genAssign
      000965 97               [ 1] 2643 	ld	xl, a
                           000966  2644 	C$pff.c$909$1_0$382 ==.
                                   2645 ;	../src/pff.c: 909: if (res != FR_OK) return res;		/* Follow failed */
                                   2646 ; genIfx
      000966 4D               [ 1] 2647 	tnz	a
      000967 26 03            [ 1] 2648 	jrne	00126$
      000969 CCr09r70         [ 2] 2649 	jp	00104$
      00096C                       2650 00126$:
                                   2651 ; genReturn
      00096C 9F               [ 1] 2652 	ld	a, xl
      00096D CCr09rCE         [ 2] 2653 	jp	00108$
                                   2654 ; genLabel
      000970                       2655 00104$:
                           000970  2656 	C$pff.c$910$1_0$382 ==.
                                   2657 ;	../src/pff.c: 910: if (!dir[0] || (dir[DIR_Attr] & AM_DIR)) return FR_NO_FILE;	/* It is a directory */
                                   2658 ; skipping iCode since result will be rematerialized
                                   2659 ; genPointerGet
      000970 7B 1D            [ 1] 2660 	ld	a, (0x1d, sp)
                                   2661 ; genIfx
      000972 4D               [ 1] 2662 	tnz	a
      000973 26 03            [ 1] 2663 	jrne	00127$
      000975 CCr09r81         [ 2] 2664 	jp	00105$
      000978                       2665 00127$:
                                   2666 ; skipping iCode since result will be rematerialized
                                   2667 ; genPointerGet
      000978 7B 28            [ 1] 2668 	ld	a, (0x28, sp)
                                   2669 ; genAnd
      00097A A5 10            [ 1] 2670 	bcp	a, #0x10
      00097C 26 03            [ 1] 2671 	jrne	00128$
      00097E CCr09r86         [ 2] 2672 	jp	00106$
      000981                       2673 00128$:
                                   2674 ; skipping generated iCode
                                   2675 ; genLabel
      000981                       2676 00105$:
                                   2677 ; genReturn
      000981 A6 03            [ 1] 2678 	ld	a, #0x03
      000983 CCr09rCE         [ 2] 2679 	jp	00108$
                                   2680 ; genLabel
      000986                       2681 00106$:
                           000986  2682 	C$pff.c$912$1_0$382 ==.
                                   2683 ;	../src/pff.c: 912: fs->org_clust = get_clust(dir);		/* File start cluster */
                                   2684 ; genPlus
      000986 1E 3D            [ 2] 2685 	ldw	x, (0x3d, sp)
      000988 1C 00 1E         [ 2] 2686 	addw	x, #0x001e
      00098B 1F 41            [ 2] 2687 	ldw	(0x41, sp), x
                                   2688 ; skipping iCode since result will be rematerialized
                                   2689 ; skipping iCode since result will be rematerialized
                                   2690 ; genIPush
      00098D 96               [ 1] 2691 	ldw	x, sp
      00098E 1C 00 1D         [ 2] 2692 	addw	x, #29
      000991 89               [ 2] 2693 	pushw	x
                                   2694 ; genCall
      000992 CDr02r27         [ 4] 2695 	call	_get_clust
      000995 5B 02            [ 2] 2696 	addw	sp, #2
      000997 17 43            [ 2] 2697 	ldw	(0x43, sp), y
                                   2698 ; genPointerSet
      000999 16 41            [ 2] 2699 	ldw	y, (0x41, sp)
      00099B 90 EF 02         [ 2] 2700 	ldw	(0x2, y), x
      00099E 1E 43            [ 2] 2701 	ldw	x, (0x43, sp)
      0009A0 90 FF            [ 2] 2702 	ldw	(y), x
                           0009A2  2703 	C$pff.c$913$1_0$382 ==.
                                   2704 ;	../src/pff.c: 913: fs->fsize = ld_dword(dir+DIR_FileSize);	/* File size */
                                   2705 ; genPlus
      0009A2 1E 3D            [ 2] 2706 	ldw	x, (0x3d, sp)
      0009A4 1C 00 1A         [ 2] 2707 	addw	x, #0x001a
      0009A7 1F 41            [ 2] 2708 	ldw	(0x41, sp), x
                                   2709 ; genPlus
      0009A9 96               [ 1] 2710 	ldw	x, sp
      0009AA 1C 00 39         [ 2] 2711 	addw	x, #57
                                   2712 ; genCast
                                   2713 ; genAssign
                                   2714 ; genIPush
      0009AD 89               [ 2] 2715 	pushw	x
                                   2716 ; genCall
      0009AE CDr00r18         [ 4] 2717 	call	_ld_dword
      0009B1 5B 02            [ 2] 2718 	addw	sp, #2
      0009B3 17 43            [ 2] 2719 	ldw	(0x43, sp), y
                                   2720 ; genPointerSet
      0009B5 16 41            [ 2] 2721 	ldw	y, (0x41, sp)
      0009B7 90 EF 02         [ 2] 2722 	ldw	(0x2, y), x
      0009BA 1E 43            [ 2] 2723 	ldw	x, (0x43, sp)
      0009BC 90 FF            [ 2] 2724 	ldw	(y), x
                           0009BE  2725 	C$pff.c$914$1_0$382 ==.
                                   2726 ;	../src/pff.c: 914: fs->fptr = 0;						/* File pointer */
                                   2727 ; genPlus
      0009BE 1E 3D            [ 2] 2728 	ldw	x, (0x3d, sp)
      0009C0 1C 00 16         [ 2] 2729 	addw	x, #0x0016
                                   2730 ; genPointerSet
      0009C3 90 5F            [ 1] 2731 	clrw	y
      0009C5 EF 02            [ 2] 2732 	ldw	(0x2, x), y
      0009C7 FF               [ 2] 2733 	ldw	(x), y
                           0009C8  2734 	C$pff.c$915$1_0$382 ==.
                                   2735 ;	../src/pff.c: 915: fs->flag = FA_OPENED;
                                   2736 ; genPointerSet
      0009C8 1E 3F            [ 2] 2737 	ldw	x, (0x3f, sp)
      0009CA A6 01            [ 1] 2738 	ld	a, #0x01
      0009CC F7               [ 1] 2739 	ld	(x), a
                           0009CD  2740 	C$pff.c$917$1_0$382 ==.
                                   2741 ;	../src/pff.c: 917: return FR_OK;
                                   2742 ; genReturn
      0009CD 4F               [ 1] 2743 	clr	a
                                   2744 ; genLabel
      0009CE                       2745 00108$:
                           0009CE  2746 	C$pff.c$918$1_0$382 ==.
                                   2747 ;	../src/pff.c: 918: }
                                   2748 ; genEndFunction
      0009CE 5B 46            [ 2] 2749 	addw	sp, #70
                           0009D0  2750 	C$pff.c$918$1_0$382 ==.
                           0009D0  2751 	XG$pf_open$0$0 ==.
      0009D0 81               [ 4] 2752 	ret
                           0009D1  2753 	G$pf_read$0$0 ==.
                           0009D1  2754 	C$pff.c$928$1_0$384 ==.
                                   2755 ;	../src/pff.c: 928: FRESULT pf_read (
                                   2756 ; genLabel
                                   2757 ;	-----------------------------------------
                                   2758 ;	 function pf_read
                                   2759 ;	-----------------------------------------
                                   2760 ;	Register assignment might be sub-optimal.
                                   2761 ;	Stack space usage: 26 bytes.
      0009D1                       2762 _pf_read:
      0009D1 52 1A            [ 2] 2763 	sub	sp, #26
                           0009D3  2764 	C$pff.c$938$2_0$384 ==.
                                   2765 ;	../src/pff.c: 938: BYTE cs, *rbuff = buff;
                                   2766 ; genCast
                                   2767 ; genAssign
      0009D3 1E 1D            [ 2] 2768 	ldw	x, (0x1d, sp)
                                   2769 ; genAssign
      0009D5 1F 01            [ 2] 2770 	ldw	(0x01, sp), x
                           0009D7  2771 	C$pff.c$939$2_0$384 ==.
                                   2772 ;	../src/pff.c: 939: FATFS *fs = FatFs;
                                   2773 ; genAssign
      0009D7 CEu00u00         [ 2] 2774 	ldw	x, _FatFs+0
      0009DA 1F 19            [ 2] 2775 	ldw	(0x19, sp), x
                           0009DC  2776 	C$pff.c$942$1_0$384 ==.
                                   2777 ;	../src/pff.c: 942: *br = 0;
                                   2778 ; genAssign
      0009DC 16 21            [ 2] 2779 	ldw	y, (0x21, sp)
      0009DE 17 03            [ 2] 2780 	ldw	(0x03, sp), y
                                   2781 ; genPointerSet
      0009E0 1E 03            [ 2] 2782 	ldw	x, (0x03, sp)
      0009E2 6F 01            [ 1] 2783 	clr	(0x1, x)
      0009E4 7F               [ 1] 2784 	clr	(x)
                           0009E5  2785 	C$pff.c$943$1_0$384 ==.
                                   2786 ;	../src/pff.c: 943: if (!fs) return FR_NOT_ENABLED;		/* Check file system */
                                   2787 ; genIfx
      0009E5 1E 19            [ 2] 2788 	ldw	x, (0x19, sp)
      0009E7 27 03            [ 1] 2789 	jreq	00194$
      0009E9 CCr09rF1         [ 2] 2790 	jp	00102$
      0009EC                       2791 00194$:
                                   2792 ; genReturn
      0009EC A6 05            [ 1] 2793 	ld	a, #0x05
      0009EE CCr0BrE7         [ 2] 2794 	jp	00127$
                                   2795 ; genLabel
      0009F1                       2796 00102$:
                           0009F1  2797 	C$pff.c$944$1_0$384 ==.
                                   2798 ;	../src/pff.c: 944: if (!(fs->flag & FA_OPENED)) return FR_NOT_OPENED;	/* Check if opened */
                                   2799 ; genPlus
      0009F1 1E 19            [ 2] 2800 	ldw	x, (0x19, sp)
      0009F3 5C               [ 1] 2801 	incw	x
      0009F4 1F 05            [ 2] 2802 	ldw	(0x05, sp), x
                                   2803 ; genPointerGet
      0009F6 1E 05            [ 2] 2804 	ldw	x, (0x05, sp)
      0009F8 F6               [ 1] 2805 	ld	a, (x)
                                   2806 ; genAnd
      0009F9 44               [ 1] 2807 	srl	a
      0009FA 24 03            [ 1] 2808 	jrnc	00195$
      0009FC CCr0Ar04         [ 2] 2809 	jp	00104$
      0009FF                       2810 00195$:
                                   2811 ; skipping generated iCode
                                   2812 ; genReturn
      0009FF A6 04            [ 1] 2813 	ld	a, #0x04
      000A01 CCr0BrE7         [ 2] 2814 	jp	00127$
                                   2815 ; genLabel
      000A04                       2816 00104$:
                           000A04  2817 	C$pff.c$946$1_0$384 ==.
                                   2818 ;	../src/pff.c: 946: remain = fs->fsize - fs->fptr;
                                   2819 ; genAssign
      000A04 1E 19            [ 2] 2820 	ldw	x, (0x19, sp)
                                   2821 ; genPointerGet
      000A06 90 93            [ 1] 2822 	ldw	y, x
      000A08 90 EE 1C         [ 2] 2823 	ldw	y, (0x1c, y)
      000A0B EE 1A            [ 2] 2824 	ldw	x, (0x1a, x)
      000A0D 1F 0F            [ 2] 2825 	ldw	(0x0f, sp), x
                                   2826 ; genPlus
      000A0F 1E 19            [ 2] 2827 	ldw	x, (0x19, sp)
      000A11 1C 00 16         [ 2] 2828 	addw	x, #0x0016
      000A14 1F 17            [ 2] 2829 	ldw	(0x17, sp), x
                                   2830 ; genPointerGet
      000A16 1E 17            [ 2] 2831 	ldw	x, (0x17, sp)
      000A18 E6 03            [ 1] 2832 	ld	a, (0x3, x)
      000A1A 6B 16            [ 1] 2833 	ld	(0x16, sp), a
      000A1C E6 02            [ 1] 2834 	ld	a, (0x2, x)
      000A1E 6B 15            [ 1] 2835 	ld	(0x15, sp), a
      000A20 FE               [ 2] 2836 	ldw	x, (x)
                                   2837 ; genMinus
      000A21 72 F2 15         [ 2] 2838 	subw	y, (0x15, sp)
      000A24 7B 10            [ 1] 2839 	ld	a, (0x10, sp)
      000A26 89               [ 2] 2840 	pushw	x
      000A27 12 02            [ 1] 2841 	sbc	a, (2, sp)
      000A29 85               [ 2] 2842 	popw	x
      000A2A 97               [ 1] 2843 	ld	xl, a
      000A2B 7B 0F            [ 1] 2844 	ld	a, (0x0f, sp)
      000A2D 89               [ 2] 2845 	pushw	x
      000A2E 12 01            [ 1] 2846 	sbc	a, (1, sp)
      000A30 85               [ 2] 2847 	popw	x
                                   2848 ; genAssign
      000A31 17 11            [ 2] 2849 	ldw	(0x11, sp), y
      000A33 95               [ 1] 2850 	ld	xh, a
                           000A34  2851 	C$pff.c$947$1_0$384 ==.
                                   2852 ;	../src/pff.c: 947: if (btr > remain) btr = (UINT)remain;			/* Truncate btr by remaining bytes */
                                   2853 ; genCast
                                   2854 ; genAssign
      000A34 16 1F            [ 2] 2855 	ldw	y, (0x1f, sp)
      000A36 17 15            [ 2] 2856 	ldw	(0x15, sp), y
      000A38 0F 14            [ 1] 2857 	clr	(0x14, sp)
      000A3A 0F 13            [ 1] 2858 	clr	(0x13, sp)
                                   2859 ; genCmp
                                   2860 ; genCmpTop
      000A3C 7B 12            [ 1] 2861 	ld	a, (0x12, sp)
      000A3E 11 16            [ 1] 2862 	cp	a, (0x16, sp)
      000A40 7B 11            [ 1] 2863 	ld	a, (0x11, sp)
      000A42 12 15            [ 1] 2864 	sbc	a, (0x15, sp)
      000A44 9F               [ 1] 2865 	ld	a, xl
      000A45 12 14            [ 1] 2866 	sbc	a, (0x14, sp)
      000A47 9E               [ 1] 2867 	ld	a, xh
      000A48 12 13            [ 1] 2868 	sbc	a, (0x13, sp)
      000A4A 25 03            [ 1] 2869 	jrc	00196$
      000A4C CCr0Ar53         [ 2] 2870 	jp	00140$
      000A4F                       2871 00196$:
                                   2872 ; skipping generated iCode
                                   2873 ; genCast
                                   2874 ; genAssign
      000A4F 1E 11            [ 2] 2875 	ldw	x, (0x11, sp)
                                   2876 ; genAssign
      000A51 1F 1F            [ 2] 2877 	ldw	(0x1f, sp), x
                           000A53  2878 	C$pff.c$949$1_0$384 ==.
                                   2879 ;	../src/pff.c: 949: while (btr)	{									/* Repeat until all data transferred */
                                   2880 ; genLabel
      000A53                       2881 00140$:
                                   2882 ; genAssign
      000A53 16 17            [ 2] 2883 	ldw	y, (0x17, sp)
      000A55 17 07            [ 2] 2884 	ldw	(0x07, sp), y
                                   2885 ; genPlus
      000A57 1E 19            [ 2] 2886 	ldw	x, (0x19, sp)
      000A59 1C 00 22         [ 2] 2887 	addw	x, #0x0022
      000A5C 1F 09            [ 2] 2888 	ldw	(0x09, sp), x
                                   2889 ; genAssign
      000A5E 16 19            [ 2] 2890 	ldw	y, (0x19, sp)
      000A60 17 0B            [ 2] 2891 	ldw	(0x0b, sp), y
                                   2892 ; genAssign
      000A62 16 19            [ 2] 2893 	ldw	y, (0x19, sp)
      000A64 17 0D            [ 2] 2894 	ldw	(0x0d, sp), y
                                   2895 ; genPlus
      000A66 1E 19            [ 2] 2896 	ldw	x, (0x19, sp)
      000A68 1C 00 26         [ 2] 2897 	addw	x, #0x0026
      000A6B 1F 0F            [ 2] 2898 	ldw	(0x0f, sp), x
                                   2899 ; genLabel
      000A6D                       2900 00124$:
                                   2901 ; genIfx
      000A6D 1E 1F            [ 2] 2902 	ldw	x, (0x1f, sp)
      000A6F 26 03            [ 1] 2903 	jrne	00197$
      000A71 CCr0BrE6         [ 2] 2904 	jp	00126$
      000A74                       2905 00197$:
                           000A74  2906 	C$pff.c$950$1_0$384 ==.
                                   2907 ;	../src/pff.c: 950: if ((fs->fptr % 512) == 0) {				/* On the sector boundary? */
                                   2908 ; genPointerGet
      000A74 1E 07            [ 2] 2909 	ldw	x, (0x07, sp)
      000A76 90 93            [ 1] 2910 	ldw	y, x
      000A78 90 EE 02         [ 2] 2911 	ldw	y, (0x2, y)
      000A7B 17 13            [ 2] 2912 	ldw	(0x13, sp), y
      000A7D FE               [ 2] 2913 	ldw	x, (x)
      000A7E 1F 11            [ 2] 2914 	ldw	(0x11, sp), x
                                   2915 ; genAnd
      000A80 7B 14            [ 1] 2916 	ld	a, (0x14, sp)
      000A82 6B 1A            [ 1] 2917 	ld	(0x1a, sp), a
      000A84 7B 13            [ 1] 2918 	ld	a, (0x13, sp)
      000A86 A4 01            [ 1] 2919 	and	a, #0x01
      000A88 6B 19            [ 1] 2920 	ld	(0x19, sp), a
      000A8A 5F               [ 1] 2921 	clrw	x
      000A8B 1F 17            [ 2] 2922 	ldw	(0x17, sp), x
                                   2923 ; genIfx
      000A8D 1E 19            [ 2] 2924 	ldw	x, (0x19, sp)
      000A8F 26 04            [ 1] 2925 	jrne	00198$
      000A91 1E 17            [ 2] 2926 	ldw	x, (0x17, sp)
      000A93 27 03            [ 1] 2927 	jreq	00199$
      000A95                       2928 00198$:
      000A95 CCr0Br54         [ 2] 2929 	jp	00117$
      000A98                       2930 00199$:
                           000A98  2931 	C$pff.c$951$3_0$386 ==.
                                   2932 ;	../src/pff.c: 951: cs = (BYTE)(fs->fptr / 512 & (fs->csize - 1));	/* Sector offset in the cluster */
                                   2933 ; genRightShiftLiteral
      000A98 16 12            [ 2] 2934 	ldw	y, (0x12, sp)
      000A9A 17 17            [ 2] 2935 	ldw	(0x17, sp), y
      000A9C 7B 11            [ 1] 2936 	ld	a, (0x11, sp)
      000A9E 6B 16            [ 1] 2937 	ld	(0x16, sp), a
      000AA0 0F 15            [ 1] 2938 	clr	(0x15, sp)
      000AA2 04 16            [ 1] 2939 	srl	(0x16, sp)
      000AA4 06 17            [ 1] 2940 	rrc	(0x17, sp)
      000AA6 06 18            [ 1] 2941 	rrc	(0x18, sp)
                                   2942 ; genPointerGet
      000AA8 1E 0D            [ 2] 2943 	ldw	x, (0x0d, sp)
      000AAA E6 02            [ 1] 2944 	ld	a, (0x2, x)
      000AAC 6B 1A            [ 1] 2945 	ld	(0x1a, sp), a
                                   2946 ; genCast
                                   2947 ; genAssign
                                   2948 ; genMinus
      000AAE 0A 1A            [ 1] 2949 	dec	(0x1a, sp)
                                   2950 ; genCast
                                   2951 ; genAssign
      000AB0 7B 1A            [ 1] 2952 	ld	a, (0x1a, sp)
      000AB2 6B 19            [ 1] 2953 	ld	(0x19, sp), a
                                   2954 ; genCast
                                   2955 ; genAssign
      000AB4 7B 18            [ 1] 2956 	ld	a, (0x18, sp)
      000AB6 6B 1A            [ 1] 2957 	ld	(0x1a, sp), a
                                   2958 ; genAnd
      000AB8 7B 1A            [ 1] 2959 	ld	a, (0x1a, sp)
      000ABA 14 19            [ 1] 2960 	and	a, (0x19, sp)
                                   2961 ; genAssign
      000ABC 6B 1A            [ 1] 2962 	ld	(0x1a, sp), a
                           000ABE  2963 	C$pff.c$952$3_0$386 ==.
                                   2964 ;	../src/pff.c: 952: if (!cs) {								/* On the cluster boundary? */
                                   2965 ; genIfx
      000ABE 4D               [ 1] 2966 	tnz	a
      000ABF 27 03            [ 1] 2967 	jreq	00200$
      000AC1 CCr0Br13         [ 2] 2968 	jp	00113$
      000AC4                       2969 00200$:
                           000AC4  2970 	C$pff.c$953$4_0$387 ==.
                                   2971 ;	../src/pff.c: 953: if (fs->fptr == 0) {				/* On the top of the file? */
                                   2972 ; genIfx
      000AC4 1E 13            [ 2] 2973 	ldw	x, (0x13, sp)
      000AC6 26 04            [ 1] 2974 	jrne	00201$
      000AC8 1E 11            [ 2] 2975 	ldw	x, (0x11, sp)
      000ACA 27 03            [ 1] 2976 	jreq	00202$
      000ACC                       2977 00201$:
      000ACC CCr0ArDF         [ 2] 2978 	jp	00108$
      000ACF                       2979 00202$:
                           000ACF  2980 	C$pff.c$954$5_0$388 ==.
                                   2981 ;	../src/pff.c: 954: clst = fs->org_clust;
                                   2982 ; genPointerGet
      000ACF 1E 0B            [ 2] 2983 	ldw	x, (0x0b, sp)
      000AD1 90 93            [ 1] 2984 	ldw	y, x
      000AD3 90 EE 20         [ 2] 2985 	ldw	y, (0x20, y)
      000AD6 EE 1E            [ 2] 2986 	ldw	x, (0x1e, x)
                                   2987 ; genAssign
      000AD8 17 18            [ 2] 2988 	ldw	(0x18, sp), y
      000ADA 1F 16            [ 2] 2989 	ldw	(0x16, sp), x
                                   2990 ; genGoto
      000ADC CCr0ArF3         [ 2] 2991 	jp	00109$
                                   2992 ; genLabel
      000ADF                       2993 00108$:
                           000ADF  2994 	C$pff.c$956$5_0$389 ==.
                                   2995 ;	../src/pff.c: 956: clst = get_fat(fs->curr_clust);
                                   2996 ; genPointerGet
      000ADF 1E 09            [ 2] 2997 	ldw	x, (0x09, sp)
      000AE1 90 93            [ 1] 2998 	ldw	y, x
      000AE3 90 EE 02         [ 2] 2999 	ldw	y, (0x2, y)
      000AE6 FE               [ 2] 3000 	ldw	x, (x)
                                   3001 ; genIPush
      000AE7 90 89            [ 2] 3002 	pushw	y
      000AE9 89               [ 2] 3003 	pushw	x
                                   3004 ; genCall
      000AEA CDr00rF9         [ 4] 3005 	call	_get_fat
      000AED 5B 04            [ 2] 3006 	addw	sp, #4
      000AEF 17 16            [ 2] 3007 	ldw	(0x16, sp), y
                                   3008 ; genAssign
      000AF1 1F 18            [ 2] 3009 	ldw	(0x18, sp), x
                                   3010 ; genLabel
      000AF3                       3011 00109$:
                           000AF3  3012 	C$pff.c$958$4_0$387 ==.
                                   3013 ;	../src/pff.c: 958: if (clst <= 1) ABORT(FR_DISK_ERR);
                                   3014 ; genCmp
                                   3015 ; genCmpTop
      000AF3 5F               [ 1] 3016 	clrw	x
      000AF4 5C               [ 1] 3017 	incw	x
      000AF5 13 18            [ 2] 3018 	cpw	x, (0x18, sp)
      000AF7 4F               [ 1] 3019 	clr	a
      000AF8 12 17            [ 1] 3020 	sbc	a, (0x17, sp)
      000AFA 4F               [ 1] 3021 	clr	a
      000AFB 12 16            [ 1] 3022 	sbc	a, (0x16, sp)
      000AFD 24 03            [ 1] 3023 	jrnc	00203$
      000AFF CCr0Br0A         [ 2] 3024 	jp	00111$
      000B02                       3025 00203$:
                                   3026 ; skipping generated iCode
                                   3027 ; genPointerSet
      000B02 1E 05            [ 2] 3028 	ldw	x, (0x05, sp)
      000B04 7F               [ 1] 3029 	clr	(x)
                                   3030 ; genReturn
      000B05 A6 01            [ 1] 3031 	ld	a, #0x01
      000B07 CCr0BrE7         [ 2] 3032 	jp	00127$
                                   3033 ; genLabel
      000B0A                       3034 00111$:
                           000B0A  3035 	C$pff.c$959$4_0$387 ==.
                                   3036 ;	../src/pff.c: 959: fs->curr_clust = clst;				/* Update current cluster */
                                   3037 ; genPointerSet
      000B0A 1E 09            [ 2] 3038 	ldw	x, (0x09, sp)
      000B0C 16 18            [ 2] 3039 	ldw	y, (0x18, sp)
      000B0E EF 02            [ 2] 3040 	ldw	(0x2, x), y
      000B10 16 16            [ 2] 3041 	ldw	y, (0x16, sp)
      000B12 FF               [ 2] 3042 	ldw	(x), y
                                   3043 ; genLabel
      000B13                       3044 00113$:
                           000B13  3045 	C$pff.c$961$3_0$386 ==.
                                   3046 ;	../src/pff.c: 961: sect = clust2sect(fs->curr_clust);		/* Get current sector */
                                   3047 ; genPointerGet
      000B13 1E 09            [ 2] 3048 	ldw	x, (0x09, sp)
      000B15 90 93            [ 1] 3049 	ldw	y, x
      000B17 90 EE 02         [ 2] 3050 	ldw	y, (0x2, y)
      000B1A FE               [ 2] 3051 	ldw	x, (x)
                                   3052 ; genIPush
      000B1B 90 89            [ 2] 3053 	pushw	y
      000B1D 89               [ 2] 3054 	pushw	x
                                   3055 ; genCall
      000B1E CDr01rB1         [ 4] 3056 	call	_clust2sect
      000B21 5B 04            [ 2] 3057 	addw	sp, #4
                                   3058 ; genAssign
      000B23 1F 18            [ 2] 3059 	ldw	(0x18, sp), x
      000B25 17 16            [ 2] 3060 	ldw	(0x16, sp), y
                           000B27  3061 	C$pff.c$962$3_0$386 ==.
                                   3062 ;	../src/pff.c: 962: if (!sect) ABORT(FR_DISK_ERR);
                                   3063 ; genIfx
      000B27 5D               [ 2] 3064 	tnzw	x
      000B28 26 04            [ 1] 3065 	jrne	00204$
      000B2A 90 5D            [ 2] 3066 	tnzw	y
      000B2C 27 03            [ 1] 3067 	jreq	00205$
      000B2E                       3068 00204$:
      000B2E CCr0Br39         [ 2] 3069 	jp	00115$
      000B31                       3070 00205$:
                                   3071 ; genPointerSet
      000B31 1E 05            [ 2] 3072 	ldw	x, (0x05, sp)
      000B33 7F               [ 1] 3073 	clr	(x)
                                   3074 ; genReturn
      000B34 A6 01            [ 1] 3075 	ld	a, #0x01
      000B36 CCr0BrE7         [ 2] 3076 	jp	00127$
                                   3077 ; genLabel
      000B39                       3078 00115$:
                           000B39  3079 	C$pff.c$963$3_0$386 ==.
                                   3080 ;	../src/pff.c: 963: fs->dsect = sect + cs;
                                   3081 ; genCast
                                   3082 ; genAssign
      000B39 7B 1A            [ 1] 3083 	ld	a, (0x1a, sp)
      000B3B 90 5F            [ 1] 3084 	clrw	y
      000B3D 5F               [ 1] 3085 	clrw	x
                                   3086 ; genPlus
      000B3E 90 97            [ 1] 3087 	ld	yl, a
      000B40 72 F9 18         [ 2] 3088 	addw	y, (0x18, sp)
      000B43 9F               [ 1] 3089 	ld	a, xl
      000B44 19 17            [ 1] 3090 	adc	a, (0x17, sp)
      000B46 6B 13            [ 1] 3091 	ld	(0x13, sp), a
      000B48 9E               [ 1] 3092 	ld	a, xh
      000B49 19 16            [ 1] 3093 	adc	a, (0x16, sp)
      000B4B 6B 12            [ 1] 3094 	ld	(0x12, sp), a
                                   3095 ; genPointerSet
      000B4D 1E 0F            [ 2] 3096 	ldw	x, (0x0f, sp)
      000B4F EF 02            [ 2] 3097 	ldw	(0x2, x), y
      000B51 16 12            [ 2] 3098 	ldw	y, (0x12, sp)
      000B53 FF               [ 2] 3099 	ldw	(x), y
                                   3100 ; genLabel
      000B54                       3101 00117$:
                           000B54  3102 	C$pff.c$950$1_0$384 ==.
                                   3103 ;	../src/pff.c: 950: if ((fs->fptr % 512) == 0) {				/* On the sector boundary? */
                                   3104 ; genPointerGet
      000B54 1E 07            [ 2] 3105 	ldw	x, (0x07, sp)
      000B56 EE 02            [ 2] 3106 	ldw	x, (0x2, x)
                           000B58  3107 	C$pff.c$965$1_0$384 ==.
                                   3108 ;	../src/pff.c: 965: rcnt = 512 - (UINT)fs->fptr % 512;			/* Get partial sector data from sector buffer */
                                   3109 ; genAssign
      000B58 9F               [ 1] 3110 	ld	a, xl
                                   3111 ; genAnd
      000B59 6B 16            [ 1] 3112 	ld	(0x16, sp), a
      000B5B 9E               [ 1] 3113 	ld	a, xh
      000B5C A4 01            [ 1] 3114 	and	a, #0x01
      000B5E 6B 15            [ 1] 3115 	ld	(0x15, sp), a
                                   3116 ; genMinus
      000B60 5F               [ 1] 3117 	clrw	x
      000B61 A6 02            [ 1] 3118 	ld	a, #0x02
      000B63 95               [ 1] 3119 	ld	xh, a
      000B64 72 F0 15         [ 2] 3120 	subw	x, (0x15, sp)
                                   3121 ; genAssign
      000B67 1F 11            [ 2] 3122 	ldw	(0x11, sp), x
                           000B69  3123 	C$pff.c$966$2_0$385 ==.
                                   3124 ;	../src/pff.c: 966: if (rcnt > btr) rcnt = btr;
                                   3125 ; genCmp
                                   3126 ; genCmpTop
      000B69 1E 11            [ 2] 3127 	ldw	x, (0x11, sp)
      000B6B 13 1F            [ 2] 3128 	cpw	x, (0x1f, sp)
      000B6D 22 03            [ 1] 3129 	jrugt	00206$
      000B6F CCr0Br76         [ 2] 3130 	jp	00119$
      000B72                       3131 00206$:
                                   3132 ; skipping generated iCode
                                   3133 ; genAssign
      000B72 16 1F            [ 2] 3134 	ldw	y, (0x1f, sp)
      000B74 17 11            [ 2] 3135 	ldw	(0x11, sp), y
                                   3136 ; genLabel
      000B76                       3137 00119$:
                           000B76  3138 	C$pff.c$967$2_0$385 ==.
                                   3139 ;	../src/pff.c: 967: dr = disk_readp(rbuff, fs->dsect, (UINT)fs->fptr % 512, rcnt);
                                   3140 ; genPointerGet
      000B76 1E 0F            [ 2] 3141 	ldw	x, (0x0f, sp)
      000B78 90 93            [ 1] 3142 	ldw	y, x
      000B7A 90 EE 02         [ 2] 3143 	ldw	y, (0x2, y)
      000B7D FE               [ 2] 3144 	ldw	x, (x)
      000B7E 1F 17            [ 2] 3145 	ldw	(0x17, sp), x
                                   3146 ; genIPush
      000B80 1E 11            [ 2] 3147 	ldw	x, (0x11, sp)
      000B82 89               [ 2] 3148 	pushw	x
                                   3149 ; genIPush
      000B83 1E 17            [ 2] 3150 	ldw	x, (0x17, sp)
      000B85 89               [ 2] 3151 	pushw	x
                                   3152 ; genIPush
      000B86 90 89            [ 2] 3153 	pushw	y
      000B88 1E 1D            [ 2] 3154 	ldw	x, (0x1d, sp)
      000B8A 89               [ 2] 3155 	pushw	x
                                   3156 ; genIPush
      000B8B 1E 09            [ 2] 3157 	ldw	x, (0x09, sp)
      000B8D 89               [ 2] 3158 	pushw	x
                                   3159 ; genCall
      000B8E CDr00r00         [ 4] 3160 	call	_disk_readp
      000B91 5B 0A            [ 2] 3161 	addw	sp, #10
                           000B93  3162 	C$pff.c$968$2_0$385 ==.
                                   3163 ;	../src/pff.c: 968: if (dr) ABORT(FR_DISK_ERR);
                                   3164 ; genIfx
      000B93 4D               [ 1] 3165 	tnz	a
      000B94 26 03            [ 1] 3166 	jrne	00207$
      000B96 CCr0BrA1         [ 2] 3167 	jp	00121$
      000B99                       3168 00207$:
                                   3169 ; genPointerSet
      000B99 1E 05            [ 2] 3170 	ldw	x, (0x05, sp)
      000B9B 7F               [ 1] 3171 	clr	(x)
                                   3172 ; genReturn
      000B9C A6 01            [ 1] 3173 	ld	a, #0x01
      000B9E CCr0BrE7         [ 2] 3174 	jp	00127$
                                   3175 ; genLabel
      000BA1                       3176 00121$:
                           000BA1  3177 	C$pff.c$969$2_0$385 ==.
                                   3178 ;	../src/pff.c: 969: fs->fptr += rcnt;							/* Advances file read pointer */
                                   3179 ; genPointerGet
      000BA1 1E 07            [ 2] 3180 	ldw	x, (0x07, sp)
      000BA3 90 93            [ 1] 3181 	ldw	y, x
      000BA5 90 EE 02         [ 2] 3182 	ldw	y, (0x2, y)
      000BA8 17 15            [ 2] 3183 	ldw	(0x15, sp), y
      000BAA FE               [ 2] 3184 	ldw	x, (x)
      000BAB 1F 13            [ 2] 3185 	ldw	(0x13, sp), x
                                   3186 ; genCast
                                   3187 ; genAssign
      000BAD 16 11            [ 2] 3188 	ldw	y, (0x11, sp)
      000BAF 4F               [ 1] 3189 	clr	a
      000BB0 5F               [ 1] 3190 	clrw	x
                                   3191 ; genPlus
      000BB1 72 F9 15         [ 2] 3192 	addw	y, (0x15, sp)
      000BB4 19 14            [ 1] 3193 	adc	a, (0x14, sp)
      000BB6 6B 18            [ 1] 3194 	ld	(0x18, sp), a
      000BB8 9F               [ 1] 3195 	ld	a, xl
      000BB9 19 13            [ 1] 3196 	adc	a, (0x13, sp)
      000BBB 6B 17            [ 1] 3197 	ld	(0x17, sp), a
                                   3198 ; genPointerSet
      000BBD 1E 07            [ 2] 3199 	ldw	x, (0x07, sp)
      000BBF EF 02            [ 2] 3200 	ldw	(0x2, x), y
      000BC1 16 17            [ 2] 3201 	ldw	y, (0x17, sp)
      000BC3 FF               [ 2] 3202 	ldw	(x), y
                           000BC4  3203 	C$pff.c$970$2_0$385 ==.
                                   3204 ;	../src/pff.c: 970: btr -= rcnt; *br += rcnt;					/* Update read counter */
                                   3205 ; genMinus
      000BC4 1E 1F            [ 2] 3206 	ldw	x, (0x1f, sp)
      000BC6 72 F0 11         [ 2] 3207 	subw	x, (0x11, sp)
                                   3208 ; genAssign
      000BC9 1F 1F            [ 2] 3209 	ldw	(0x1f, sp), x
                                   3210 ; genPointerGet
      000BCB 1E 03            [ 2] 3211 	ldw	x, (0x03, sp)
      000BCD FE               [ 2] 3212 	ldw	x, (x)
                                   3213 ; genPlus
      000BCE 72 FB 11         [ 2] 3214 	addw	x, (0x11, sp)
                                   3215 ; genPointerSet
      000BD1 16 03            [ 2] 3216 	ldw	y, (0x03, sp)
      000BD3 90 FF            [ 2] 3217 	ldw	(y), x
                           000BD5  3218 	C$pff.c$971$2_0$385 ==.
                                   3219 ;	../src/pff.c: 971: if (rbuff) rbuff += rcnt;					/* Advances the data pointer if destination is memory */
                                   3220 ; genIfx
      000BD5 1E 01            [ 2] 3221 	ldw	x, (0x01, sp)
      000BD7 26 03            [ 1] 3222 	jrne	00208$
      000BD9 CCr0Ar6D         [ 2] 3223 	jp	00124$
      000BDC                       3224 00208$:
                                   3225 ; genPlus
      000BDC 1E 01            [ 2] 3226 	ldw	x, (0x01, sp)
      000BDE 72 FB 11         [ 2] 3227 	addw	x, (0x11, sp)
                                   3228 ; genAssign
      000BE1 1F 01            [ 2] 3229 	ldw	(0x01, sp), x
                                   3230 ; genGoto
      000BE3 CCr0Ar6D         [ 2] 3231 	jp	00124$
                                   3232 ; genLabel
      000BE6                       3233 00126$:
                           000BE6  3234 	C$pff.c$974$1_0$384 ==.
                                   3235 ;	../src/pff.c: 974: return FR_OK;
                                   3236 ; genReturn
      000BE6 4F               [ 1] 3237 	clr	a
                                   3238 ; genLabel
      000BE7                       3239 00127$:
                           000BE7  3240 	C$pff.c$975$1_0$384 ==.
                                   3241 ;	../src/pff.c: 975: }
                                   3242 ; genEndFunction
      000BE7 5B 1A            [ 2] 3243 	addw	sp, #26
                           000BE9  3244 	C$pff.c$975$1_0$384 ==.
                           000BE9  3245 	XG$pf_read$0$0 ==.
      000BE9 81               [ 4] 3246 	ret
                           000BEA  3247 	G$pf_write$0$0 ==.
                           000BEA  3248 	C$pff.c$985$1_0$394 ==.
                                   3249 ;	../src/pff.c: 985: FRESULT pf_write (
                                   3250 ; genLabel
                                   3251 ;	-----------------------------------------
                                   3252 ;	 function pf_write
                                   3253 ;	-----------------------------------------
                                   3254 ;	Register assignment might be sub-optimal.
                                   3255 ;	Stack space usage: 30 bytes.
      000BEA                       3256 _pf_write:
      000BEA 52 1E            [ 2] 3257 	sub	sp, #30
                           000BEC  3258 	C$pff.c$993$2_0$394 ==.
                                   3259 ;	../src/pff.c: 993: const BYTE *p = buff;
                                   3260 ; genCast
                                   3261 ; genAssign
      000BEC 1E 21            [ 2] 3262 	ldw	x, (0x21, sp)
                                   3263 ; genAssign
      000BEE 1F 05            [ 2] 3264 	ldw	(0x05, sp), x
                           000BF0  3265 	C$pff.c$996$2_0$394 ==.
                                   3266 ;	../src/pff.c: 996: FATFS *fs = FatFs;
                                   3267 ; genAssign
      000BF0 CEu00u00         [ 2] 3268 	ldw	x, _FatFs+0
      000BF3 1F 07            [ 2] 3269 	ldw	(0x07, sp), x
                           000BF5  3270 	C$pff.c$999$1_0$394 ==.
                                   3271 ;	../src/pff.c: 999: *bw = 0;
                                   3272 ; genAssign
      000BF5 16 25            [ 2] 3273 	ldw	y, (0x25, sp)
      000BF7 17 09            [ 2] 3274 	ldw	(0x09, sp), y
                                   3275 ; genPointerSet
      000BF9 1E 09            [ 2] 3276 	ldw	x, (0x09, sp)
      000BFB 6F 01            [ 1] 3277 	clr	(0x1, x)
      000BFD 7F               [ 1] 3278 	clr	(x)
                           000BFE  3279 	C$pff.c$1000$1_0$394 ==.
                                   3280 ;	../src/pff.c: 1000: if (!fs) return FR_NOT_ENABLED;		/* Check file system */
                                   3281 ; genIfx
      000BFE 1E 07            [ 2] 3282 	ldw	x, (0x07, sp)
      000C00 27 03            [ 1] 3283 	jreq	00236$
      000C02 CCr0Cr0A         [ 2] 3284 	jp	00102$
      000C05                       3285 00236$:
                                   3286 ; genReturn
      000C05 A6 05            [ 1] 3287 	ld	a, #0x05
      000C07 CCr0ErA9         [ 2] 3288 	jp	00139$
                                   3289 ; genLabel
      000C0A                       3290 00102$:
                           000C0A  3291 	C$pff.c$1001$1_0$394 ==.
                                   3292 ;	../src/pff.c: 1001: if (!(fs->flag & FA_OPENED)) return FR_NOT_OPENED;	/* Check if opened */
                                   3293 ; genPlus
      000C0A 1E 07            [ 2] 3294 	ldw	x, (0x07, sp)
      000C0C 5C               [ 1] 3295 	incw	x
      000C0D 1F 0B            [ 2] 3296 	ldw	(0x0b, sp), x
                                   3297 ; genPointerGet
      000C0F 1E 0B            [ 2] 3298 	ldw	x, (0x0b, sp)
      000C11 F6               [ 1] 3299 	ld	a, (x)
                                   3300 ; genAnd
      000C12 A5 01            [ 1] 3301 	bcp	a, #0x01
      000C14 27 03            [ 1] 3302 	jreq	00237$
      000C16 CCr0Cr1E         [ 2] 3303 	jp	00104$
      000C19                       3304 00237$:
                                   3305 ; skipping generated iCode
                                   3306 ; genReturn
      000C19 A6 04            [ 1] 3307 	ld	a, #0x04
      000C1B CCr0ErA9         [ 2] 3308 	jp	00139$
                                   3309 ; genLabel
      000C1E                       3310 00104$:
                           000C1E  3311 	C$pff.c$1004$1_0$394 ==.
                                   3312 ;	../src/pff.c: 1004: if ((fs->flag & FA__WIP) && disk_writep(0, 0)) ABORT(FR_DISK_ERR);
                                   3313 ; genAnd
      000C1E A4 40            [ 1] 3314 	and	a, #0x40
      000C20 6B 1C            [ 1] 3315 	ld	(0x1c, sp), a
      000C22 0F 1B            [ 1] 3316 	clr	(0x1b, sp)
                           000C24  3317 	C$pff.c$1003$1_0$394 ==.
                                   3318 ;	../src/pff.c: 1003: if (!btw) {		/* Finalize request */
                                   3319 ; genIfx
      000C24 1E 23            [ 2] 3320 	ldw	x, (0x23, sp)
      000C26 27 03            [ 1] 3321 	jreq	00238$
      000C28 CCr0Cr57         [ 2] 3322 	jp	00111$
      000C2B                       3323 00238$:
                           000C2B  3324 	C$pff.c$1004$2_0$395 ==.
                                   3325 ;	../src/pff.c: 1004: if ((fs->flag & FA__WIP) && disk_writep(0, 0)) ABORT(FR_DISK_ERR);
                                   3326 ; genIfx
      000C2B 1E 1B            [ 2] 3327 	ldw	x, (0x1b, sp)
      000C2D 26 03            [ 1] 3328 	jrne	00239$
      000C2F CCr0Cr4B         [ 2] 3329 	jp	00106$
      000C32                       3330 00239$:
                                   3331 ; genIPush
      000C32 5F               [ 1] 3332 	clrw	x
      000C33 89               [ 2] 3333 	pushw	x
      000C34 5F               [ 1] 3334 	clrw	x
      000C35 89               [ 2] 3335 	pushw	x
                                   3336 ; genIPush
      000C36 5F               [ 1] 3337 	clrw	x
      000C37 89               [ 2] 3338 	pushw	x
                                   3339 ; genCall
      000C38 CDr00r00         [ 4] 3340 	call	_disk_writep
      000C3B 5B 06            [ 2] 3341 	addw	sp, #6
                                   3342 ; genIfx
      000C3D 4D               [ 1] 3343 	tnz	a
      000C3E 26 03            [ 1] 3344 	jrne	00240$
      000C40 CCr0Cr4B         [ 2] 3345 	jp	00106$
      000C43                       3346 00240$:
                                   3347 ; genPointerSet
      000C43 1E 0B            [ 2] 3348 	ldw	x, (0x0b, sp)
      000C45 7F               [ 1] 3349 	clr	(x)
                                   3350 ; genReturn
      000C46 A6 01            [ 1] 3351 	ld	a, #0x01
      000C48 CCr0ErA9         [ 2] 3352 	jp	00139$
                                   3353 ; genLabel
      000C4B                       3354 00106$:
                           000C4B  3355 	C$pff.c$1005$2_0$395 ==.
                                   3356 ;	../src/pff.c: 1005: fs->flag &= ~FA__WIP;
                                   3357 ; genPointerGet
      000C4B 1E 0B            [ 2] 3358 	ldw	x, (0x0b, sp)
      000C4D F6               [ 1] 3359 	ld	a, (x)
                                   3360 ; genAnd
      000C4E A4 BF            [ 1] 3361 	and	a, #0xbf
                                   3362 ; genPointerSet
      000C50 1E 0B            [ 2] 3363 	ldw	x, (0x0b, sp)
      000C52 F7               [ 1] 3364 	ld	(x), a
                           000C53  3365 	C$pff.c$1006$2_0$395 ==.
                                   3366 ;	../src/pff.c: 1006: return FR_OK;
                                   3367 ; genReturn
      000C53 4F               [ 1] 3368 	clr	a
      000C54 CCr0ErA9         [ 2] 3369 	jp	00139$
                                   3370 ; genLabel
      000C57                       3371 00111$:
                           000C57  3372 	C$pff.c$1009$1_0$394 ==.
                                   3373 ;	../src/pff.c: 1009: fs->fptr &= 0xFFFFFE00;
                                   3374 ; genPlus
      000C57 1E 07            [ 2] 3375 	ldw	x, (0x07, sp)
      000C59 1C 00 16         [ 2] 3376 	addw	x, #0x0016
      000C5C 1F 1D            [ 2] 3377 	ldw	(0x1d, sp), x
                           000C5E  3378 	C$pff.c$1008$2_0$397 ==.
                                   3379 ;	../src/pff.c: 1008: if (!(fs->flag & FA__WIP)) {	/* Round-down fptr to the sector boundary */
                                   3380 ; genIfx
      000C5E 1E 1B            [ 2] 3381 	ldw	x, (0x1b, sp)
      000C60 27 03            [ 1] 3382 	jreq	00241$
      000C62 CCr0Cr83         [ 2] 3383 	jp	00112$
      000C65                       3384 00241$:
                           000C65  3385 	C$pff.c$1009$3_0$398 ==.
                                   3386 ;	../src/pff.c: 1009: fs->fptr &= 0xFFFFFE00;
                                   3387 ; genPointerGet
      000C65 1E 1D            [ 2] 3388 	ldw	x, (0x1d, sp)
      000C67 E6 03            [ 1] 3389 	ld	a, (0x3, x)
      000C69 90 97            [ 1] 3390 	ld	yl, a
      000C6B E6 02            [ 1] 3391 	ld	a, (0x2, x)
      000C6D FE               [ 2] 3392 	ldw	x, (x)
                                   3393 ; genAnd
      000C6E A4 FE            [ 1] 3394 	and	a, #0xfe
      000C70 90 95            [ 1] 3395 	ld	yh, a
      000C72 4F               [ 1] 3396 	clr	a
      000C73 90 97            [ 1] 3397 	ld	yl, a
      000C75 02               [ 1] 3398 	rlwa	x
      000C76 6B 19            [ 1] 3399 	ld	(0x19, sp), a
      000C78 01               [ 1] 3400 	rrwa	x
      000C79 9F               [ 1] 3401 	ld	a, xl
                                   3402 ; genPointerSet
      000C7A 1E 1D            [ 2] 3403 	ldw	x, (0x1d, sp)
      000C7C EF 02            [ 2] 3404 	ldw	(0x2, x), y
      000C7E E7 01            [ 1] 3405 	ld	(0x1, x), a
      000C80 7B 19            [ 1] 3406 	ld	a, (0x19, sp)
      000C82 F7               [ 1] 3407 	ld	(x), a
                                   3408 ; genLabel
      000C83                       3409 00112$:
                           000C83  3410 	C$pff.c$1012$1_0$394 ==.
                                   3411 ;	../src/pff.c: 1012: remain = fs->fsize - fs->fptr;
                                   3412 ; genAssign
      000C83 1E 07            [ 2] 3413 	ldw	x, (0x07, sp)
                                   3414 ; genPointerGet
      000C85 90 93            [ 1] 3415 	ldw	y, x
      000C87 90 EE 1C         [ 2] 3416 	ldw	y, (0x1c, y)
      000C8A EE 1A            [ 2] 3417 	ldw	x, (0x1a, x)
      000C8C 1F 15            [ 2] 3418 	ldw	(0x15, sp), x
                                   3419 ; genPointerGet
      000C8E 1E 1D            [ 2] 3420 	ldw	x, (0x1d, sp)
      000C90 E6 03            [ 1] 3421 	ld	a, (0x3, x)
      000C92 6B 1C            [ 1] 3422 	ld	(0x1c, sp), a
      000C94 E6 02            [ 1] 3423 	ld	a, (0x2, x)
      000C96 6B 1B            [ 1] 3424 	ld	(0x1b, sp), a
      000C98 FE               [ 2] 3425 	ldw	x, (x)
      000C99 1F 19            [ 2] 3426 	ldw	(0x19, sp), x
                                   3427 ; genMinus
      000C9B 72 F2 1B         [ 2] 3428 	subw	y, (0x1b, sp)
      000C9E 7B 16            [ 1] 3429 	ld	a, (0x16, sp)
      000CA0 12 1A            [ 1] 3430 	sbc	a, (0x1a, sp)
      000CA2 97               [ 1] 3431 	ld	xl, a
      000CA3 7B 15            [ 1] 3432 	ld	a, (0x15, sp)
      000CA5 12 19            [ 1] 3433 	sbc	a, (0x19, sp)
                                   3434 ; genAssign
      000CA7 17 17            [ 2] 3435 	ldw	(0x17, sp), y
      000CA9 95               [ 1] 3436 	ld	xh, a
                           000CAA  3437 	C$pff.c$1013$1_0$394 ==.
                                   3438 ;	../src/pff.c: 1013: if (btw > remain) btw = (UINT)remain;			/* Truncate btw by remaining bytes */
                                   3439 ; genCast
                                   3440 ; genAssign
      000CAA 16 23            [ 2] 3441 	ldw	y, (0x23, sp)
      000CAC 17 1B            [ 2] 3442 	ldw	(0x1b, sp), y
      000CAE 0F 1A            [ 1] 3443 	clr	(0x1a, sp)
      000CB0 0F 19            [ 1] 3444 	clr	(0x19, sp)
                                   3445 ; genCmp
                                   3446 ; genCmpTop
      000CB2 7B 18            [ 1] 3447 	ld	a, (0x18, sp)
      000CB4 11 1C            [ 1] 3448 	cp	a, (0x1c, sp)
      000CB6 7B 17            [ 1] 3449 	ld	a, (0x17, sp)
      000CB8 12 1B            [ 1] 3450 	sbc	a, (0x1b, sp)
      000CBA 9F               [ 1] 3451 	ld	a, xl
      000CBB 12 1A            [ 1] 3452 	sbc	a, (0x1a, sp)
      000CBD 9E               [ 1] 3453 	ld	a, xh
      000CBE 12 19            [ 1] 3454 	sbc	a, (0x19, sp)
      000CC0 25 03            [ 1] 3455 	jrc	00242$
      000CC2 CCr0CrC9         [ 2] 3456 	jp	00157$
      000CC5                       3457 00242$:
                                   3458 ; skipping generated iCode
                                   3459 ; genCast
                                   3460 ; genAssign
      000CC5 1E 17            [ 2] 3461 	ldw	x, (0x17, sp)
                                   3462 ; genAssign
      000CC7 1F 23            [ 2] 3463 	ldw	(0x23, sp), x
                           000CC9  3464 	C$pff.c$1015$1_0$394 ==.
                                   3465 ;	../src/pff.c: 1015: while (btw)	{									/* Repeat until all data transferred */
                                   3466 ; genLabel
      000CC9                       3467 00157$:
                                   3468 ; genAssign
      000CC9 16 1D            [ 2] 3469 	ldw	y, (0x1d, sp)
      000CCB 17 0D            [ 2] 3470 	ldw	(0x0d, sp), y
                                   3471 ; genPlus
      000CCD 1E 07            [ 2] 3472 	ldw	x, (0x07, sp)
      000CCF 1C 00 22         [ 2] 3473 	addw	x, #0x0022
      000CD2 1F 0F            [ 2] 3474 	ldw	(0x0f, sp), x
                                   3475 ; genAssign
      000CD4 16 07            [ 2] 3476 	ldw	y, (0x07, sp)
      000CD6 17 11            [ 2] 3477 	ldw	(0x11, sp), y
                                   3478 ; genAssign
      000CD8 16 07            [ 2] 3479 	ldw	y, (0x07, sp)
      000CDA 17 13            [ 2] 3480 	ldw	(0x13, sp), y
                                   3481 ; genLabel
      000CDC                       3482 00136$:
                                   3483 ; genIfx
      000CDC 1E 23            [ 2] 3484 	ldw	x, (0x23, sp)
      000CDE 26 03            [ 1] 3485 	jrne	00243$
      000CE0 CCr0ErA8         [ 2] 3486 	jp	00138$
      000CE3                       3487 00243$:
                           000CE3  3488 	C$pff.c$1016$1_0$394 ==.
                                   3489 ;	../src/pff.c: 1016: if ((UINT)fs->fptr % 512 == 0) {			/* On the sector boundary? */
                                   3490 ; genPointerGet
      000CE3 1E 0D            [ 2] 3491 	ldw	x, (0x0d, sp)
      000CE5 90 93            [ 1] 3492 	ldw	y, x
      000CE7 90 EE 02         [ 2] 3493 	ldw	y, (0x2, y)
      000CEA 17 17            [ 2] 3494 	ldw	(0x17, sp), y
      000CEC FE               [ 2] 3495 	ldw	x, (x)
      000CED 1F 15            [ 2] 3496 	ldw	(0x15, sp), x
                                   3497 ; genCast
                                   3498 ; genAssign
      000CEF 1E 17            [ 2] 3499 	ldw	x, (0x17, sp)
                                   3500 ; genAnd
      000CF1 41               [ 1] 3501 	exg	a, xl
      000CF2 6B 1E            [ 1] 3502 	ld	(0x1e, sp), a
      000CF4 41               [ 1] 3503 	exg	a, xl
      000CF5 9E               [ 1] 3504 	ld	a, xh
      000CF6 A4 01            [ 1] 3505 	and	a, #0x01
      000CF8 6B 1D            [ 1] 3506 	ld	(0x1d, sp), a
                                   3507 ; genIfx
      000CFA 1E 1D            [ 2] 3508 	ldw	x, (0x1d, sp)
      000CFC 27 03            [ 1] 3509 	jreq	00244$
      000CFE CCr0DrE8         [ 2] 3510 	jp	00127$
      000D01                       3511 00244$:
                           000D01  3512 	C$pff.c$1017$3_0$400 ==.
                                   3513 ;	../src/pff.c: 1017: cs = (BYTE)(fs->fptr / 512 & (fs->csize - 1));	/* Sector offset in the cluster */
                                   3514 ; genRightShiftLiteral
      000D01 16 16            [ 2] 3515 	ldw	y, (0x16, sp)
      000D03 17 1B            [ 2] 3516 	ldw	(0x1b, sp), y
      000D05 7B 15            [ 1] 3517 	ld	a, (0x15, sp)
      000D07 6B 1A            [ 1] 3518 	ld	(0x1a, sp), a
      000D09 0F 19            [ 1] 3519 	clr	(0x19, sp)
      000D0B 04 1A            [ 1] 3520 	srl	(0x1a, sp)
      000D0D 06 1B            [ 1] 3521 	rrc	(0x1b, sp)
      000D0F 06 1C            [ 1] 3522 	rrc	(0x1c, sp)
                                   3523 ; genPointerGet
      000D11 1E 13            [ 2] 3524 	ldw	x, (0x13, sp)
      000D13 E6 02            [ 1] 3525 	ld	a, (0x2, x)
      000D15 6B 1E            [ 1] 3526 	ld	(0x1e, sp), a
                                   3527 ; genCast
                                   3528 ; genAssign
                                   3529 ; genMinus
      000D17 0A 1E            [ 1] 3530 	dec	(0x1e, sp)
                                   3531 ; genCast
                                   3532 ; genAssign
      000D19 7B 1E            [ 1] 3533 	ld	a, (0x1e, sp)
      000D1B 6B 1D            [ 1] 3534 	ld	(0x1d, sp), a
                                   3535 ; genCast
                                   3536 ; genAssign
      000D1D 7B 1C            [ 1] 3537 	ld	a, (0x1c, sp)
      000D1F 6B 1E            [ 1] 3538 	ld	(0x1e, sp), a
                                   3539 ; genAnd
      000D21 7B 1E            [ 1] 3540 	ld	a, (0x1e, sp)
      000D23 14 1D            [ 1] 3541 	and	a, (0x1d, sp)
                                   3542 ; genAssign
      000D25 6B 1E            [ 1] 3543 	ld	(0x1e, sp), a
                           000D27  3544 	C$pff.c$1018$3_0$400 ==.
                                   3545 ;	../src/pff.c: 1018: if (!cs) {								/* On the cluster boundary? */
                                   3546 ; genIfx
      000D27 4D               [ 1] 3547 	tnz	a
      000D28 27 03            [ 1] 3548 	jreq	00245$
      000D2A CCr0Dr7C         [ 2] 3549 	jp	00121$
      000D2D                       3550 00245$:
                           000D2D  3551 	C$pff.c$1019$4_0$401 ==.
                                   3552 ;	../src/pff.c: 1019: if (fs->fptr == 0) {				/* On the top of the file? */
                                   3553 ; genIfx
      000D2D 1E 17            [ 2] 3554 	ldw	x, (0x17, sp)
      000D2F 26 04            [ 1] 3555 	jrne	00246$
      000D31 1E 15            [ 2] 3556 	ldw	x, (0x15, sp)
      000D33 27 03            [ 1] 3557 	jreq	00247$
      000D35                       3558 00246$:
      000D35 CCr0Dr48         [ 2] 3559 	jp	00116$
      000D38                       3560 00247$:
                           000D38  3561 	C$pff.c$1020$5_0$402 ==.
                                   3562 ;	../src/pff.c: 1020: clst = fs->org_clust;
                                   3563 ; genPointerGet
      000D38 1E 11            [ 2] 3564 	ldw	x, (0x11, sp)
      000D3A 90 93            [ 1] 3565 	ldw	y, x
      000D3C 90 EE 20         [ 2] 3566 	ldw	y, (0x20, y)
      000D3F EE 1E            [ 2] 3567 	ldw	x, (0x1e, x)
                                   3568 ; genAssign
      000D41 17 1C            [ 2] 3569 	ldw	(0x1c, sp), y
      000D43 1F 1A            [ 2] 3570 	ldw	(0x1a, sp), x
                                   3571 ; genGoto
      000D45 CCr0Dr5C         [ 2] 3572 	jp	00117$
                                   3573 ; genLabel
      000D48                       3574 00116$:
                           000D48  3575 	C$pff.c$1022$5_0$403 ==.
                                   3576 ;	../src/pff.c: 1022: clst = get_fat(fs->curr_clust);
                                   3577 ; genPointerGet
      000D48 1E 0F            [ 2] 3578 	ldw	x, (0x0f, sp)
      000D4A 90 93            [ 1] 3579 	ldw	y, x
      000D4C 90 EE 02         [ 2] 3580 	ldw	y, (0x2, y)
      000D4F FE               [ 2] 3581 	ldw	x, (x)
                                   3582 ; genIPush
      000D50 90 89            [ 2] 3583 	pushw	y
      000D52 89               [ 2] 3584 	pushw	x
                                   3585 ; genCall
      000D53 CDr00rF9         [ 4] 3586 	call	_get_fat
      000D56 5B 04            [ 2] 3587 	addw	sp, #4
      000D58 17 1A            [ 2] 3588 	ldw	(0x1a, sp), y
                                   3589 ; genAssign
      000D5A 1F 1C            [ 2] 3590 	ldw	(0x1c, sp), x
                                   3591 ; genLabel
      000D5C                       3592 00117$:
                           000D5C  3593 	C$pff.c$1024$4_0$401 ==.
                                   3594 ;	../src/pff.c: 1024: if (clst <= 1) ABORT(FR_DISK_ERR);
                                   3595 ; genCmp
                                   3596 ; genCmpTop
      000D5C 5F               [ 1] 3597 	clrw	x
      000D5D 5C               [ 1] 3598 	incw	x
      000D5E 13 1C            [ 2] 3599 	cpw	x, (0x1c, sp)
      000D60 4F               [ 1] 3600 	clr	a
      000D61 12 1B            [ 1] 3601 	sbc	a, (0x1b, sp)
      000D63 4F               [ 1] 3602 	clr	a
      000D64 12 1A            [ 1] 3603 	sbc	a, (0x1a, sp)
      000D66 24 03            [ 1] 3604 	jrnc	00248$
      000D68 CCr0Dr73         [ 2] 3605 	jp	00119$
      000D6B                       3606 00248$:
                                   3607 ; skipping generated iCode
                                   3608 ; genPointerSet
      000D6B 1E 0B            [ 2] 3609 	ldw	x, (0x0b, sp)
      000D6D 7F               [ 1] 3610 	clr	(x)
                                   3611 ; genReturn
      000D6E A6 01            [ 1] 3612 	ld	a, #0x01
      000D70 CCr0ErA9         [ 2] 3613 	jp	00139$
                                   3614 ; genLabel
      000D73                       3615 00119$:
                           000D73  3616 	C$pff.c$1025$4_0$401 ==.
                                   3617 ;	../src/pff.c: 1025: fs->curr_clust = clst;				/* Update current cluster */
                                   3618 ; genPointerSet
      000D73 1E 0F            [ 2] 3619 	ldw	x, (0x0f, sp)
      000D75 16 1C            [ 2] 3620 	ldw	y, (0x1c, sp)
      000D77 EF 02            [ 2] 3621 	ldw	(0x2, x), y
      000D79 16 1A            [ 2] 3622 	ldw	y, (0x1a, sp)
      000D7B FF               [ 2] 3623 	ldw	(x), y
                                   3624 ; genLabel
      000D7C                       3625 00121$:
                           000D7C  3626 	C$pff.c$1027$3_0$400 ==.
                                   3627 ;	../src/pff.c: 1027: sect = clust2sect(fs->curr_clust);		/* Get current sector */
                                   3628 ; genPointerGet
      000D7C 1E 0F            [ 2] 3629 	ldw	x, (0x0f, sp)
      000D7E 90 93            [ 1] 3630 	ldw	y, x
      000D80 90 EE 02         [ 2] 3631 	ldw	y, (0x2, y)
      000D83 FE               [ 2] 3632 	ldw	x, (x)
                                   3633 ; genIPush
      000D84 90 89            [ 2] 3634 	pushw	y
      000D86 89               [ 2] 3635 	pushw	x
                                   3636 ; genCall
      000D87 CDr01rB1         [ 4] 3637 	call	_clust2sect
      000D8A 5B 04            [ 2] 3638 	addw	sp, #4
                                   3639 ; genAssign
      000D8C 1F 19            [ 2] 3640 	ldw	(0x19, sp), x
      000D8E 17 17            [ 2] 3641 	ldw	(0x17, sp), y
                           000D90  3642 	C$pff.c$1028$3_0$400 ==.
                                   3643 ;	../src/pff.c: 1028: if (!sect) ABORT(FR_DISK_ERR);
                                   3644 ; genIfx
      000D90 5D               [ 2] 3645 	tnzw	x
      000D91 26 04            [ 1] 3646 	jrne	00249$
      000D93 90 5D            [ 2] 3647 	tnzw	y
      000D95 27 03            [ 1] 3648 	jreq	00250$
      000D97                       3649 00249$:
      000D97 CCr0DrA2         [ 2] 3650 	jp	00123$
      000D9A                       3651 00250$:
                                   3652 ; genPointerSet
      000D9A 1E 0B            [ 2] 3653 	ldw	x, (0x0b, sp)
      000D9C 7F               [ 1] 3654 	clr	(x)
                                   3655 ; genReturn
      000D9D A6 01            [ 1] 3656 	ld	a, #0x01
      000D9F CCr0ErA9         [ 2] 3657 	jp	00139$
                                   3658 ; genLabel
      000DA2                       3659 00123$:
                           000DA2  3660 	C$pff.c$1029$3_0$400 ==.
                                   3661 ;	../src/pff.c: 1029: fs->dsect = sect + cs;
                                   3662 ; genPlus
      000DA2 1E 07            [ 2] 3663 	ldw	x, (0x07, sp)
      000DA4 1C 00 26         [ 2] 3664 	addw	x, #0x0026
                                   3665 ; genCast
                                   3666 ; genAssign
      000DA7 90 5F            [ 1] 3667 	clrw	y
      000DA9 7B 1E            [ 1] 3668 	ld	a, (0x1e, sp)
      000DAB 90 97            [ 1] 3669 	ld	yl, a
      000DAD 4F               [ 1] 3670 	clr	a
      000DAE 0F 1B            [ 1] 3671 	clr	(0x1b, sp)
                                   3672 ; genPlus
      000DB0 72 F9 19         [ 2] 3673 	addw	y, (0x19, sp)
      000DB3 19 18            [ 1] 3674 	adc	a, (0x18, sp)
      000DB5 6B 02            [ 1] 3675 	ld	(0x02, sp), a
      000DB7 7B 1B            [ 1] 3676 	ld	a, (0x1b, sp)
      000DB9 19 17            [ 1] 3677 	adc	a, (0x17, sp)
      000DBB 6B 01            [ 1] 3678 	ld	(0x01, sp), a
                                   3679 ; genPointerSet
      000DBD EF 02            [ 2] 3680 	ldw	(0x2, x), y
      000DBF 7B 02            [ 1] 3681 	ld	a, (0x02, sp)
      000DC1 E7 01            [ 1] 3682 	ld	(0x1, x), a
      000DC3 7B 01            [ 1] 3683 	ld	a, (0x01, sp)
      000DC5 F7               [ 1] 3684 	ld	(x), a
                           000DC6  3685 	C$pff.c$1030$3_0$400 ==.
                                   3686 ;	../src/pff.c: 1030: if (disk_writep(0, fs->dsect)) ABORT(FR_DISK_ERR);	/* Initiate a sector write operation */
                                   3687 ; genIPush
      000DC6 90 89            [ 2] 3688 	pushw	y
      000DC8 1E 03            [ 2] 3689 	ldw	x, (0x03, sp)
      000DCA 89               [ 2] 3690 	pushw	x
                                   3691 ; genIPush
      000DCB 5F               [ 1] 3692 	clrw	x
      000DCC 89               [ 2] 3693 	pushw	x
                                   3694 ; genCall
      000DCD CDr00r00         [ 4] 3695 	call	_disk_writep
      000DD0 5B 06            [ 2] 3696 	addw	sp, #6
                                   3697 ; genIfx
      000DD2 4D               [ 1] 3698 	tnz	a
      000DD3 26 03            [ 1] 3699 	jrne	00251$
      000DD5 CCr0DrE0         [ 2] 3700 	jp	00125$
      000DD8                       3701 00251$:
                                   3702 ; genPointerSet
      000DD8 1E 0B            [ 2] 3703 	ldw	x, (0x0b, sp)
      000DDA 7F               [ 1] 3704 	clr	(x)
                                   3705 ; genReturn
      000DDB A6 01            [ 1] 3706 	ld	a, #0x01
      000DDD CCr0ErA9         [ 2] 3707 	jp	00139$
                                   3708 ; genLabel
      000DE0                       3709 00125$:
                           000DE0  3710 	C$pff.c$1031$3_0$400 ==.
                                   3711 ;	../src/pff.c: 1031: fs->flag |= FA__WIP;
                                   3712 ; genPointerGet
      000DE0 1E 0B            [ 2] 3713 	ldw	x, (0x0b, sp)
      000DE2 F6               [ 1] 3714 	ld	a, (x)
                                   3715 ; genOr
      000DE3 AA 40            [ 1] 3716 	or	a, #0x40
                                   3717 ; genPointerSet
      000DE5 1E 0B            [ 2] 3718 	ldw	x, (0x0b, sp)
      000DE7 F7               [ 1] 3719 	ld	(x), a
                                   3720 ; genLabel
      000DE8                       3721 00127$:
                           000DE8  3722 	C$pff.c$1033$2_0$399 ==.
                                   3723 ;	../src/pff.c: 1033: wcnt = 512 - (UINT)fs->fptr % 512;			/* Number of bytes to write to the sector */
                                   3724 ; genPointerGet
      000DE8 1E 0D            [ 2] 3725 	ldw	x, (0x0d, sp)
      000DEA EE 02            [ 2] 3726 	ldw	x, (0x2, x)
                                   3727 ; genAssign
      000DEC 9E               [ 1] 3728 	ld	a, xh
                                   3729 ; genAnd
      000DED A4 01            [ 1] 3730 	and	a, #0x01
      000DEF 6B 1D            [ 1] 3731 	ld	(0x1d, sp), a
                                   3732 ; genMinus
      000DF1 9F               [ 1] 3733 	ld	a, xl
      000DF2 40               [ 1] 3734 	neg	a
      000DF3 97               [ 1] 3735 	ld	xl, a
      000DF4 A6 02            [ 1] 3736 	ld	a, #0x02
      000DF6 12 1D            [ 1] 3737 	sbc	a, (0x1d, sp)
      000DF8 95               [ 1] 3738 	ld	xh, a
                                   3739 ; genAssign
      000DF9 1F 17            [ 2] 3740 	ldw	(0x17, sp), x
                           000DFB  3741 	C$pff.c$1034$2_0$399 ==.
                                   3742 ;	../src/pff.c: 1034: if (wcnt > btw) wcnt = btw;
                                   3743 ; genCmp
                                   3744 ; genCmpTop
      000DFB 1E 17            [ 2] 3745 	ldw	x, (0x17, sp)
      000DFD 13 23            [ 2] 3746 	cpw	x, (0x23, sp)
      000DFF 22 03            [ 1] 3747 	jrugt	00252$
      000E01 CCr0Er08         [ 2] 3748 	jp	00129$
      000E04                       3749 00252$:
                                   3750 ; skipping generated iCode
                                   3751 ; genAssign
      000E04 16 23            [ 2] 3752 	ldw	y, (0x23, sp)
      000E06 17 17            [ 2] 3753 	ldw	(0x17, sp), y
                                   3754 ; genLabel
      000E08                       3755 00129$:
                           000E08  3756 	C$pff.c$1035$1_0$394 ==.
                                   3757 ;	../src/pff.c: 1035: if (disk_writep(p, wcnt)) ABORT(FR_DISK_ERR);	/* Send data to the sector */
                                   3758 ; genCast
                                   3759 ; genAssign
      000E08 16 17            [ 2] 3760 	ldw	y, (0x17, sp)
      000E0A 17 03            [ 2] 3761 	ldw	(0x03, sp), y
      000E0C 0F 02            [ 1] 3762 	clr	(0x02, sp)
      000E0E 0F 01            [ 1] 3763 	clr	(0x01, sp)
                                   3764 ; genIPush
      000E10 1E 03            [ 2] 3765 	ldw	x, (0x03, sp)
      000E12 89               [ 2] 3766 	pushw	x
      000E13 1E 03            [ 2] 3767 	ldw	x, (0x03, sp)
      000E15 89               [ 2] 3768 	pushw	x
                                   3769 ; genIPush
      000E16 1E 09            [ 2] 3770 	ldw	x, (0x09, sp)
      000E18 89               [ 2] 3771 	pushw	x
                                   3772 ; genCall
      000E19 CDr00r00         [ 4] 3773 	call	_disk_writep
      000E1C 5B 06            [ 2] 3774 	addw	sp, #6
                                   3775 ; genIfx
      000E1E 4D               [ 1] 3776 	tnz	a
      000E1F 26 03            [ 1] 3777 	jrne	00253$
      000E21 CCr0Er2C         [ 2] 3778 	jp	00131$
      000E24                       3779 00253$:
                                   3780 ; genPointerSet
      000E24 1E 0B            [ 2] 3781 	ldw	x, (0x0b, sp)
      000E26 7F               [ 1] 3782 	clr	(x)
                                   3783 ; genReturn
      000E27 A6 01            [ 1] 3784 	ld	a, #0x01
      000E29 CCr0ErA9         [ 2] 3785 	jp	00139$
                                   3786 ; genLabel
      000E2C                       3787 00131$:
                           000E2C  3788 	C$pff.c$1036$2_0$399 ==.
                                   3789 ;	../src/pff.c: 1036: fs->fptr += wcnt; p += wcnt;				/* Update pointers and counters */
                                   3790 ; genPointerGet
      000E2C 1E 0D            [ 2] 3791 	ldw	x, (0x0d, sp)
      000E2E E6 03            [ 1] 3792 	ld	a, (0x3, x)
      000E30 88               [ 1] 3793 	push	a
      000E31 E6 02            [ 1] 3794 	ld	a, (0x2, x)
      000E33 90 95            [ 1] 3795 	ld	yh, a
      000E35 FE               [ 2] 3796 	ldw	x, (x)
      000E36 84               [ 1] 3797 	pop	a
                                   3798 ; genPlus
      000E37 1B 04            [ 1] 3799 	add	a, (0x04, sp)
      000E39 6B 1C            [ 1] 3800 	ld	(0x1c, sp), a
      000E3B 90 9E            [ 1] 3801 	ld	a, yh
      000E3D 19 03            [ 1] 3802 	adc	a, (0x03, sp)
      000E3F 6B 1B            [ 1] 3803 	ld	(0x1b, sp), a
      000E41 9F               [ 1] 3804 	ld	a, xl
      000E42 19 02            [ 1] 3805 	adc	a, (0x02, sp)
      000E44 6B 1A            [ 1] 3806 	ld	(0x1a, sp), a
      000E46 9E               [ 1] 3807 	ld	a, xh
      000E47 19 01            [ 1] 3808 	adc	a, (0x01, sp)
      000E49 6B 19            [ 1] 3809 	ld	(0x19, sp), a
                                   3810 ; genPointerSet
      000E4B 1E 0D            [ 2] 3811 	ldw	x, (0x0d, sp)
      000E4D 16 1B            [ 2] 3812 	ldw	y, (0x1b, sp)
      000E4F EF 02            [ 2] 3813 	ldw	(0x2, x), y
      000E51 16 19            [ 2] 3814 	ldw	y, (0x19, sp)
      000E53 FF               [ 2] 3815 	ldw	(x), y
                                   3816 ; genPlus
      000E54 1E 05            [ 2] 3817 	ldw	x, (0x05, sp)
      000E56 72 FB 17         [ 2] 3818 	addw	x, (0x17, sp)
                                   3819 ; genAssign
      000E59 1F 05            [ 2] 3820 	ldw	(0x05, sp), x
                           000E5B  3821 	C$pff.c$1037$2_0$399 ==.
                                   3822 ;	../src/pff.c: 1037: btw -= wcnt; *bw += wcnt;
                                   3823 ; genMinus
      000E5B 1E 23            [ 2] 3824 	ldw	x, (0x23, sp)
      000E5D 72 F0 17         [ 2] 3825 	subw	x, (0x17, sp)
                                   3826 ; genAssign
      000E60 1F 23            [ 2] 3827 	ldw	(0x23, sp), x
                                   3828 ; genPointerGet
      000E62 1E 09            [ 2] 3829 	ldw	x, (0x09, sp)
      000E64 FE               [ 2] 3830 	ldw	x, (x)
                                   3831 ; genPlus
      000E65 72 FB 17         [ 2] 3832 	addw	x, (0x17, sp)
      000E68 1F 1D            [ 2] 3833 	ldw	(0x1d, sp), x
                                   3834 ; genPointerSet
      000E6A 1E 09            [ 2] 3835 	ldw	x, (0x09, sp)
      000E6C 16 1D            [ 2] 3836 	ldw	y, (0x1d, sp)
      000E6E FF               [ 2] 3837 	ldw	(x), y
                           000E6F  3838 	C$pff.c$1038$2_0$399 ==.
                                   3839 ;	../src/pff.c: 1038: if ((UINT)fs->fptr % 512 == 0) {
                                   3840 ; genCast
                                   3841 ; genAssign
      000E6F 16 1B            [ 2] 3842 	ldw	y, (0x1b, sp)
      000E71 17 1D            [ 2] 3843 	ldw	(0x1d, sp), y
                                   3844 ; genAnd
      000E73 7B 1E            [ 1] 3845 	ld	a, (0x1e, sp)
      000E75 6B 1C            [ 1] 3846 	ld	(0x1c, sp), a
      000E77 7B 1D            [ 1] 3847 	ld	a, (0x1d, sp)
      000E79 A4 01            [ 1] 3848 	and	a, #0x01
      000E7B 6B 1B            [ 1] 3849 	ld	(0x1b, sp), a
                                   3850 ; genIfx
      000E7D 1E 1B            [ 2] 3851 	ldw	x, (0x1b, sp)
      000E7F 27 03            [ 1] 3852 	jreq	00254$
      000E81 CCr0CrDC         [ 2] 3853 	jp	00136$
      000E84                       3854 00254$:
                           000E84  3855 	C$pff.c$1039$3_0$408 ==.
                                   3856 ;	../src/pff.c: 1039: if (disk_writep(0, 0)) ABORT(FR_DISK_ERR);	/* Finalize the currtent secter write operation */
                                   3857 ; genIPush
      000E84 5F               [ 1] 3858 	clrw	x
      000E85 89               [ 2] 3859 	pushw	x
      000E86 5F               [ 1] 3860 	clrw	x
      000E87 89               [ 2] 3861 	pushw	x
                                   3862 ; genIPush
      000E88 5F               [ 1] 3863 	clrw	x
      000E89 89               [ 2] 3864 	pushw	x
                                   3865 ; genCall
      000E8A CDr00r00         [ 4] 3866 	call	_disk_writep
      000E8D 5B 06            [ 2] 3867 	addw	sp, #6
                                   3868 ; genIfx
      000E8F 4D               [ 1] 3869 	tnz	a
      000E90 26 03            [ 1] 3870 	jrne	00255$
      000E92 CCr0Er9D         [ 2] 3871 	jp	00133$
      000E95                       3872 00255$:
                                   3873 ; genPointerSet
      000E95 1E 0B            [ 2] 3874 	ldw	x, (0x0b, sp)
      000E97 7F               [ 1] 3875 	clr	(x)
                                   3876 ; genReturn
      000E98 A6 01            [ 1] 3877 	ld	a, #0x01
      000E9A CCr0ErA9         [ 2] 3878 	jp	00139$
                                   3879 ; genLabel
      000E9D                       3880 00133$:
                           000E9D  3881 	C$pff.c$1040$3_0$408 ==.
                                   3882 ;	../src/pff.c: 1040: fs->flag &= ~FA__WIP;
                                   3883 ; genPointerGet
      000E9D 1E 0B            [ 2] 3884 	ldw	x, (0x0b, sp)
      000E9F F6               [ 1] 3885 	ld	a, (x)
                                   3886 ; genAnd
      000EA0 A4 BF            [ 1] 3887 	and	a, #0xbf
                                   3888 ; genPointerSet
      000EA2 1E 0B            [ 2] 3889 	ldw	x, (0x0b, sp)
      000EA4 F7               [ 1] 3890 	ld	(x), a
                                   3891 ; genGoto
      000EA5 CCr0CrDC         [ 2] 3892 	jp	00136$
                                   3893 ; genLabel
      000EA8                       3894 00138$:
                           000EA8  3895 	C$pff.c$1044$1_0$394 ==.
                                   3896 ;	../src/pff.c: 1044: return FR_OK;
                                   3897 ; genReturn
      000EA8 4F               [ 1] 3898 	clr	a
                                   3899 ; genLabel
      000EA9                       3900 00139$:
                           000EA9  3901 	C$pff.c$1045$1_0$394 ==.
                                   3902 ;	../src/pff.c: 1045: }
                                   3903 ; genEndFunction
      000EA9 5B 1E            [ 2] 3904 	addw	sp, #30
                           000EAB  3905 	C$pff.c$1045$1_0$394 ==.
                           000EAB  3906 	XG$pf_write$0$0 ==.
      000EAB 81               [ 4] 3907 	ret
                                   3908 	.area CODE
                                   3909 	.area CONST
                                   3910 	.area INITIALIZER
                                   3911 	.area CABS (ABS)
