                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module mmcsd
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _SD_GetResponseVal
                                     12 	.globl _dly
                                     13 	.globl _SD_Init
                                     14 	.globl _SD_Detect
                                     15 	.globl _SD_SendCmd
                                     16 	.globl _SD_GetDataResponse
                                     17 	.globl _SD_GetResponse
                                     18 	.globl _SD_GoIdleState
                                     19 	.globl _SD_WriteByte
                                     20 	.globl _SD_ReadByte
                                     21 	.globl _SD_LowLevel_Init
                                     22 ;--------------------------------------------------------
                                     23 ; ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DATA
                                     26 ;--------------------------------------------------------
                                     27 ; ram data
                                     28 ;--------------------------------------------------------
                                     29 	.area INITIALIZED
                                     30 ;--------------------------------------------------------
                                     31 ; absolute external ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DABS (ABS)
                                     34 
                                     35 ; default segment ordering for linker
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area CONST
                                     40 	.area INITIALIZER
                                     41 	.area CODE
                                     42 
                                     43 ;--------------------------------------------------------
                                     44 ; global & static initialisations
                                     45 ;--------------------------------------------------------
                                     46 	.area HOME
                                     47 	.area GSINIT
                                     48 	.area GSFINAL
                                     49 	.area GSINIT
                                     50 ;--------------------------------------------------------
                                     51 ; Home
                                     52 ;--------------------------------------------------------
                                     53 	.area HOME
                                     54 	.area HOME
                                     55 ;--------------------------------------------------------
                                     56 ; code
                                     57 ;--------------------------------------------------------
                                     58 	.area CODE
                           000000    59 	G$SD_Init$0$0 ==.
                           000000    60 	C$mmcsd.c$90$0_0$332 ==.
                                     61 ;	../src/mmcsd.c: 90: uint8_t SD_Init(void)
                                     62 ; genLabel
                                     63 ;	-----------------------------------------
                                     64 ;	 function SD_Init
                                     65 ;	-----------------------------------------
                                     66 ;	Register assignment might be sub-optimal.
                                     67 ;	Stack space usage: 4 bytes.
      000000                         68 _SD_Init:
      000000 52 04            [ 2]   69 	sub	sp, #4
                           000002    70 	C$mmcsd.c$96$1_0$332 ==.
                                     71 ;	../src/mmcsd.c: 96: SD_LowLevel_Init();
                                     72 ; genCall
      000002 CDr03r2C         [ 4]   73 	call	_SD_LowLevel_Init
                           000005    74 	C$mmcsd.c$99$1_0$332 ==.
                                     75 ;	../src/mmcsd.c: 99: SD_CS_LOW();
                                     76 ; genPointerGet
      000005 C6 50 0A         [ 1]   77 	ld	a, 0x500a
                                     78 ; genAnd
      000008 A4 EF            [ 1]   79 	and	a, #0xef
                                     80 ; genPointerSet
      00000A C7 50 0A         [ 1]   81 	ld	0x500a, a
                           00000D    82 	C$mmcsd.c$103$2_0$333 ==.
                                     83 ;	../src/mmcsd.c: 103: for (i = 0; i <= 9; i++)
                                     84 ; genAssign
      00000D 5F               [ 1]   85 	clrw	x
      00000E 90 5F            [ 1]   86 	clrw	y
                                     87 ; genAssign
      000010 1F 03            [ 2]   88 	ldw	(0x03, sp), x
      000012 17 01            [ 2]   89 	ldw	(0x01, sp), y
                                     90 ; genLabel
      000014                         91 00104$:
                           000014    92 	C$mmcsd.c$106$3_0$334 ==.
                                     93 ;	../src/mmcsd.c: 106: SD_WriteByte(SD_DUMMY_BYTE);
                                     94 ; genIPush
      000014 4B FF            [ 1]   95 	push	#0xff
                                     96 ; genCall
      000016 CDr03r0E         [ 4]   97 	call	_SD_WriteByte
      000019 84               [ 1]   98 	pop	a
                           00001A    99 	C$mmcsd.c$103$2_0$333 ==.
                                    100 ;	../src/mmcsd.c: 103: for (i = 0; i <= 9; i++)
                                    101 ; genPlus
      00001A 1E 03            [ 2]  102 	ldw	x, (0x03, sp)
      00001C 5C               [ 1]  103 	incw	x
      00001D 1F 03            [ 2]  104 	ldw	(0x03, sp), x
      00001F 26 05            [ 1]  105 	jrne	00119$
      000021 1E 01            [ 2]  106 	ldw	x, (0x01, sp)
      000023 5C               [ 1]  107 	incw	x
      000024 1F 01            [ 2]  108 	ldw	(0x01, sp), x
      000026                        109 00119$:
                                    110 ; genCmp
                                    111 ; genCmpTop
      000026 AE 00 09         [ 2]  112 	ldw	x, #0x0009
      000029 13 03            [ 2]  113 	cpw	x, (0x03, sp)
      00002B 4F               [ 1]  114 	clr	a
      00002C 12 02            [ 1]  115 	sbc	a, (0x02, sp)
      00002E 4F               [ 1]  116 	clr	a
      00002F 12 01            [ 1]  117 	sbc	a, (0x01, sp)
      000031 25 03            [ 1]  118 	jrc	00120$
      000033 CCr00r14         [ 2]  119 	jp	00104$
      000036                        120 00120$:
                                    121 ; skipping generated iCode
                           000036   122 	C$mmcsd.c$110$1_0$332 ==.
                                    123 ;	../src/mmcsd.c: 110: res = SD_GoIdleState();
                                    124 ; genCall
      000036 CDr01rBF         [ 4]  125 	call	_SD_GoIdleState
                           000039   126 	C$mmcsd.c$116$1_0$332 ==.
                                    127 ;	../src/mmcsd.c: 116: return (res);
                                    128 ; genReturn
      000039 4F               [ 1]  129 	clr	a
                                    130 ; genLabel
      00003A                        131 00106$:
                           00003A   132 	C$mmcsd.c$117$1_0$332 ==.
                                    133 ;	../src/mmcsd.c: 117: }
                                    134 ; genEndFunction
      00003A 5B 04            [ 2]  135 	addw	sp, #4
                           00003C   136 	C$mmcsd.c$117$1_0$332 ==.
                           00003C   137 	XG$SD_Init$0$0 ==.
      00003C 81               [ 4]  138 	ret
                           00003D   139 	G$SD_Detect$0$0 ==.
                           00003D   140 	C$mmcsd.c$124$1_0$337 ==.
                                    141 ;	../src/mmcsd.c: 124: uint8_t SD_Detect(void)
                                    142 ; genLabel
                                    143 ;	-----------------------------------------
                                    144 ;	 function SD_Detect
                                    145 ;	-----------------------------------------
                                    146 ;	Register assignment is optimal.
                                    147 ;	Stack space usage: 1 bytes.
      00003D                        148 _SD_Detect:
      00003D 88               [ 1]  149 	push	a
                           00003E   150 	C$mmcsd.c$126$2_0$337 ==.
                                    151 ;	../src/mmcsd.c: 126: __IO uint8_t status = SD_PRESENT;
                                    152 ; genAssign
      00003E A6 01            [ 1]  153 	ld	a, #0x01
      000040 6B 01            [ 1]  154 	ld	(0x01, sp), a
                           000042   155 	C$mmcsd.c$136$1_0$337 ==.
                                    156 ;	../src/mmcsd.c: 136: return SD_PRESENT;
                                    157 ; genReturn
      000042 A6 01            [ 1]  158 	ld	a, #0x01
                                    159 ; genLabel
      000044                        160 00101$:
                           000044   161 	C$mmcsd.c$138$1_0$337 ==.
                                    162 ;	../src/mmcsd.c: 138: }
                                    163 ; genEndFunction
      000044 5B 01            [ 2]  164 	addw	sp, #1
                           000046   165 	C$mmcsd.c$138$1_0$337 ==.
                           000046   166 	XG$SD_Detect$0$0 ==.
      000046 81               [ 4]  167 	ret
                           000047   168 	G$SD_SendCmd$0$0 ==.
                           000047   169 	C$mmcsd.c$663$1_0$339 ==.
                                    170 ;	../src/mmcsd.c: 663: void SD_SendCmd(uint8_t Cmd, uint32_t Arg, uint8_t Crc)
                                    171 ; genLabel
                                    172 ;	-----------------------------------------
                                    173 ;	 function SD_SendCmd
                                    174 ;	-----------------------------------------
                                    175 ;	Register assignment might be sub-optimal.
                                    176 ;	Stack space usage: 10 bytes.
      000047                        177 _SD_SendCmd:
      000047 52 0A            [ 2]  178 	sub	sp, #10
                           000049   179 	C$mmcsd.c$669$1_0$339 ==.
                                    180 ;	../src/mmcsd.c: 669: Frame[0] = (uint8_t)(Cmd | 0x40); /*!< Construct byte 1 */
                                    181 ; skipping iCode since result will be rematerialized
                                    182 ; genAssign
      000049 7B 0D            [ 1]  183 	ld	a, (0x0d, sp)
                                    184 ; genOr
      00004B AA 40            [ 1]  185 	or	a, #0x40
                                    186 ; genPointerSet
      00004D 6B 01            [ 1]  187 	ld	(0x01, sp), a
                           00004F   188 	C$mmcsd.c$671$1_0$339 ==.
                                    189 ;	../src/mmcsd.c: 671: Frame[1] = (uint8_t)(Arg >> 24); /*!< Construct byte 2 */
                                    190 ; genPlus
      00004F 96               [ 1]  191 	ldw	x, sp
      000050 5C               [ 1]  192 	incw	x
      000051 5C               [ 1]  193 	incw	x
                                    194 ; genRightShiftLiteral
      000052 7B 0E            [ 1]  195 	ld	a, (0x0e, sp)
      000054 90 5F            [ 1]  196 	clrw	y
      000056 0F 07            [ 1]  197 	clr	(0x07, sp)
                                    198 ; genCast
                                    199 ; genAssign
                                    200 ; genPointerSet
      000058 F7               [ 1]  201 	ld	(x), a
                           000059   202 	C$mmcsd.c$673$1_0$339 ==.
                                    203 ;	../src/mmcsd.c: 673: Frame[2] = (uint8_t)(Arg >> 16); /*!< Construct byte 3 */
                                    204 ; genPlus
      000059 96               [ 1]  205 	ldw	x, sp
      00005A 1C 00 03         [ 2]  206 	addw	x, #3
                                    207 ; genRightShiftLiteral
      00005D 16 0E            [ 2]  208 	ldw	y, (0x0e, sp)
      00005F 4F               [ 1]  209 	clr	a
      000060 0F 07            [ 1]  210 	clr	(0x07, sp)
                                    211 ; genCast
                                    212 ; genAssign
      000062 90 9F            [ 1]  213 	ld	a, yl
                                    214 ; genPointerSet
      000064 F7               [ 1]  215 	ld	(x), a
                           000065   216 	C$mmcsd.c$675$1_0$339 ==.
                                    217 ;	../src/mmcsd.c: 675: Frame[3] = (uint8_t)(Arg >> 8); /*!< Construct byte 4 */
                                    218 ; genPlus
      000065 96               [ 1]  219 	ldw	x, sp
      000066 1C 00 04         [ 2]  220 	addw	x, #4
                                    221 ; genCast
                                    222 ; genAssign
      000069 16 10            [ 2]  223 	ldw	y, (0x10, sp)
                                    224 ; genRightShiftLiteral
      00006B 4F               [ 1]  225 	clr	a
                                    226 ; genCast
                                    227 ; genAssign
      00006C 90 9E            [ 1]  228 	ld	a, yh
                                    229 ; genPointerSet
      00006E F7               [ 1]  230 	ld	(x), a
                           00006F   231 	C$mmcsd.c$677$1_0$339 ==.
                                    232 ;	../src/mmcsd.c: 677: Frame[4] = (uint8_t)(Arg); /*!< Construct byte 5 */
                                    233 ; genPlus
      00006F 96               [ 1]  234 	ldw	x, sp
      000070 1C 00 05         [ 2]  235 	addw	x, #5
                                    236 ; genCast
                                    237 ; genAssign
      000073 7B 11            [ 1]  238 	ld	a, (0x11, sp)
                                    239 ; genPointerSet
      000075 F7               [ 1]  240 	ld	(x), a
                           000076   241 	C$mmcsd.c$679$1_0$339 ==.
                                    242 ;	../src/mmcsd.c: 679: Frame[5] = (Crc); /*!< Construct CRC: byte 6 */
                                    243 ; genPlus
      000076 96               [ 1]  244 	ldw	x, sp
      000077 1C 00 06         [ 2]  245 	addw	x, #6
                                    246 ; genPointerSet
      00007A 7B 12            [ 1]  247 	ld	a, (0x12, sp)
      00007C F7               [ 1]  248 	ld	(x), a
                           00007D   249 	C$mmcsd.c$681$2_0$340 ==.
                                    250 ;	../src/mmcsd.c: 681: for (i = 0; i < 6; i++)
                                    251 ; genAssign
      00007D 5F               [ 1]  252 	clrw	x
      00007E 90 5F            [ 1]  253 	clrw	y
                                    254 ; skipping iCode since result will be rematerialized
                                    255 ; genAssign
      000080 1F 09            [ 2]  256 	ldw	(0x09, sp), x
                                    257 ; genLabel
      000082                        258 00102$:
                           000082   259 	C$mmcsd.c$683$3_0$341 ==.
                                    260 ;	../src/mmcsd.c: 683: SD_WriteByte(Frame[i]); /*!< Send the Cmd bytes */
                                    261 ; genPlus
      000082 96               [ 1]  262 	ldw	x, sp
      000083 5C               [ 1]  263 	incw	x
      000084 72 FB 09         [ 2]  264 	addw	x, (0x09, sp)
                                    265 ; genPointerGet
      000087 F6               [ 1]  266 	ld	a, (x)
                                    267 ; genIPush
      000088 90 89            [ 2]  268 	pushw	y
      00008A 88               [ 1]  269 	push	a
                                    270 ; genCall
      00008B CDr03r0E         [ 4]  271 	call	_SD_WriteByte
      00008E 84               [ 1]  272 	pop	a
      00008F 90 85            [ 2]  273 	popw	y
                           000091   274 	C$mmcsd.c$681$2_0$340 ==.
                                    275 ;	../src/mmcsd.c: 681: for (i = 0; i < 6; i++)
                                    276 ; genPlus
      000091 1E 09            [ 2]  277 	ldw	x, (0x09, sp)
      000093 5C               [ 1]  278 	incw	x
      000094 1F 09            [ 2]  279 	ldw	(0x09, sp), x
      000096 26 02            [ 1]  280 	jrne	00112$
      000098 90 5C            [ 1]  281 	incw	y
      00009A                        282 00112$:
                                    283 ; genCmp
                                    284 ; genCmpTop
      00009A 1E 09            [ 2]  285 	ldw	x, (0x09, sp)
      00009C A3 00 06         [ 2]  286 	cpw	x, #0x0006
      00009F 90 9F            [ 1]  287 	ld	a, yl
      0000A1 A2 00            [ 1]  288 	sbc	a, #0x00
      0000A3 90 9E            [ 1]  289 	ld	a, yh
      0000A5 A2 00            [ 1]  290 	sbc	a, #0x00
      0000A7 24 03            [ 1]  291 	jrnc	00113$
      0000A9 CCr00r82         [ 2]  292 	jp	00102$
      0000AC                        293 00113$:
                                    294 ; skipping generated iCode
                                    295 ; genLabel
      0000AC                        296 00104$:
                           0000AC   297 	C$mmcsd.c$685$2_0$339 ==.
                                    298 ;	../src/mmcsd.c: 685: }
                                    299 ; genEndFunction
      0000AC 5B 0A            [ 2]  300 	addw	sp, #10
                           0000AE   301 	C$mmcsd.c$685$2_0$339 ==.
                           0000AE   302 	XG$SD_SendCmd$0$0 ==.
      0000AE 81               [ 4]  303 	ret
                           0000AF   304 	G$SD_GetDataResponse$0$0 ==.
                           0000AF   305 	C$mmcsd.c$699$2_0$343 ==.
                                    306 ;	../src/mmcsd.c: 699: uint8_t SD_GetDataResponse(void)
                                    307 ; genLabel
                                    308 ;	-----------------------------------------
                                    309 ;	 function SD_GetDataResponse
                                    310 ;	-----------------------------------------
                                    311 ;	Register assignment might be sub-optimal.
                                    312 ;	Stack space usage: 5 bytes.
      0000AF                        313 _SD_GetDataResponse:
      0000AF 52 05            [ 2]  314 	sub	sp, #5
                           0000B1   315 	C$mmcsd.c$701$2_0$343 ==.
                                    316 ;	../src/mmcsd.c: 701: uint32_t i = 0;
                                    317 ; genAssign
      0000B1 5F               [ 1]  318 	clrw	x
      0000B2 90 5F            [ 1]  319 	clrw	y
                           0000B4   320 	C$mmcsd.c$702$2_0$343 ==.
                                    321 ;	../src/mmcsd.c: 702: uint8_t response = 0, rvalue = 0;
                                    322 ; genAssign
      0000B4 0F 01            [ 1]  323 	clr	(0x01, sp)
                           0000B6   324 	C$mmcsd.c$704$1_0$343 ==.
                                    325 ;	../src/mmcsd.c: 704: while (i <= 64)
                                    326 ; genAssign
      0000B6 1F 04            [ 2]  327 	ldw	(0x04, sp), x
      0000B8 17 02            [ 2]  328 	ldw	(0x02, sp), y
                                    329 ; genLabel
      0000BA                        330 00108$:
                                    331 ; genCmp
                                    332 ; genCmpTop
      0000BA AE 00 40         [ 2]  333 	ldw	x, #0x0040
      0000BD 13 04            [ 2]  334 	cpw	x, (0x04, sp)
      0000BF 4F               [ 1]  335 	clr	a
      0000C0 12 03            [ 1]  336 	sbc	a, (0x03, sp)
      0000C2 4F               [ 1]  337 	clr	a
      0000C3 12 02            [ 1]  338 	sbc	a, (0x02, sp)
      0000C5 24 03            [ 1]  339 	jrnc	00156$
      0000C7 CCr01r16         [ 2]  340 	jp	00111$
      0000CA                        341 00156$:
                                    342 ; skipping generated iCode
                           0000CA   343 	C$mmcsd.c$707$2_0$344 ==.
                                    344 ;	../src/mmcsd.c: 707: response = SD_ReadByte();
                                    345 ; genCall
      0000CA CDr03r1E         [ 4]  346 	call	_SD_ReadByte
                                    347 ; genAssign
                           0000CD   348 	C$mmcsd.c$709$2_0$344 ==.
                                    349 ;	../src/mmcsd.c: 709: response &= 0x1F;
                                    350 ; genAnd
      0000CD A4 1F            [ 1]  351 	and	a, #0x1f
      0000CF 6B 01            [ 1]  352 	ld	(0x01, sp), a
                           0000D1   353 	C$mmcsd.c$710$2_0$344 ==.
                                    354 ;	../src/mmcsd.c: 710: switch (response)
                                    355 ; genCmpEQorNE
      0000D1 7B 01            [ 1]  356 	ld	a, (0x01, sp)
      0000D3 A1 05            [ 1]  357 	cp	a, #0x05
      0000D5 26 03            [ 1]  358 	jrne	00158$
      0000D7 CCr00rEF         [ 2]  359 	jp	00101$
      0000DA                        360 00158$:
                                    361 ; skipping generated iCode
                                    362 ; genCmpEQorNE
      0000DA 7B 01            [ 1]  363 	ld	a, (0x01, sp)
      0000DC A1 0B            [ 1]  364 	cp	a, #0x0b
      0000DE 26 03            [ 1]  365 	jrne	00161$
      0000E0 CCr00rF4         [ 2]  366 	jp	00102$
      0000E3                        367 00161$:
                                    368 ; skipping generated iCode
                                    369 ; genCmpEQorNE
      0000E3 7B 01            [ 1]  370 	ld	a, (0x01, sp)
      0000E5 A1 0D            [ 1]  371 	cp	a, #0x0d
      0000E7 26 03            [ 1]  372 	jrne	00164$
      0000E9 CCr00rF9         [ 2]  373 	jp	00103$
      0000EC                        374 00164$:
                                    375 ; skipping generated iCode
                                    376 ; genGoto
      0000EC CCr00rFE         [ 2]  377 	jp	00104$
                           0000EF   378 	C$mmcsd.c$712$3_0$345 ==.
                                    379 ;	../src/mmcsd.c: 712: case SD_DATA_OK:
                                    380 ; genLabel
      0000EF                        381 00101$:
                           0000EF   382 	C$mmcsd.c$714$4_0$346 ==.
                                    383 ;	../src/mmcsd.c: 714: rvalue = SD_DATA_OK;
                                    384 ; genAssign
      0000EF A6 05            [ 1]  385 	ld	a, #0x05
                           0000F1   386 	C$mmcsd.c$715$4_0$346 ==.
                                    387 ;	../src/mmcsd.c: 715: break;
                                    388 ; genGoto
      0000F1 CCr01r00         [ 2]  389 	jp	00105$
                           0000F4   390 	C$mmcsd.c$717$3_0$345 ==.
                                    391 ;	../src/mmcsd.c: 717: case SD_DATA_CRC_ERROR:
                                    392 ; genLabel
      0000F4                        393 00102$:
                           0000F4   394 	C$mmcsd.c$718$3_0$345 ==.
                                    395 ;	../src/mmcsd.c: 718: return SD_DATA_CRC_ERROR;
                                    396 ; genReturn
      0000F4 A6 0B            [ 1]  397 	ld	a, #0x0b
      0000F6 CCr01r21         [ 2]  398 	jp	00114$
                           0000F9   399 	C$mmcsd.c$719$3_0$345 ==.
                                    400 ;	../src/mmcsd.c: 719: case SD_DATA_WRITE_ERROR:
                                    401 ; genLabel
      0000F9                        402 00103$:
                           0000F9   403 	C$mmcsd.c$720$3_0$345 ==.
                                    404 ;	../src/mmcsd.c: 720: return SD_DATA_WRITE_ERROR;
                                    405 ; genReturn
      0000F9 A6 0D            [ 1]  406 	ld	a, #0x0d
      0000FB CCr01r21         [ 2]  407 	jp	00114$
                           0000FE   408 	C$mmcsd.c$721$3_0$345 ==.
                                    409 ;	../src/mmcsd.c: 721: default:
                                    410 ; genLabel
      0000FE                        411 00104$:
                           0000FE   412 	C$mmcsd.c$723$4_0$347 ==.
                                    413 ;	../src/mmcsd.c: 723: rvalue = SD_DATA_OTHER_ERROR;
                                    414 ; genAssign
      0000FE A6 FF            [ 1]  415 	ld	a, #0xff
                           000100   416 	C$mmcsd.c$726$2_0$344 ==.
                                    417 ;	../src/mmcsd.c: 726: }
                                    418 ; genLabel
      000100                        419 00105$:
                           000100   420 	C$mmcsd.c$728$2_0$344 ==.
                                    421 ;	../src/mmcsd.c: 728: if (rvalue == SD_DATA_OK)
                                    422 ; genCmpEQorNE
      000100 A1 05            [ 1]  423 	cp	a, #0x05
      000102 26 03            [ 1]  424 	jrne	00167$
      000104 CCr01r16         [ 2]  425 	jp	00111$
      000107                        426 00167$:
                                    427 ; skipping generated iCode
                           000107   428 	C$mmcsd.c$731$2_0$344 ==.
                                    429 ;	../src/mmcsd.c: 731: i++;
                                    430 ; genPlus
      000107 1E 04            [ 2]  431 	ldw	x, (0x04, sp)
      000109 5C               [ 1]  432 	incw	x
      00010A 1F 04            [ 2]  433 	ldw	(0x04, sp), x
      00010C 26 05            [ 1]  434 	jrne	00169$
      00010E 1E 02            [ 2]  435 	ldw	x, (0x02, sp)
      000110 5C               [ 1]  436 	incw	x
      000111 1F 02            [ 2]  437 	ldw	(0x02, sp), x
      000113                        438 00169$:
                                    439 ; genGoto
      000113 CCr00rBA         [ 2]  440 	jp	00108$
                           000116   441 	C$mmcsd.c$735$1_0$343 ==.
                                    442 ;	../src/mmcsd.c: 735: while (SD_ReadByte() == 0);
                                    443 ; genLabel
      000116                        444 00111$:
                                    445 ; genCall
      000116 CDr03r1E         [ 4]  446 	call	_SD_ReadByte
                                    447 ; genIfx
      000119 4D               [ 1]  448 	tnz	a
      00011A 26 03            [ 1]  449 	jrne	00170$
      00011C CCr01r16         [ 2]  450 	jp	00111$
      00011F                        451 00170$:
                           00011F   452 	C$mmcsd.c$738$1_0$343 ==.
                                    453 ;	../src/mmcsd.c: 738: return response;
                                    454 ; genReturn
      00011F 7B 01            [ 1]  455 	ld	a, (0x01, sp)
                                    456 ; genLabel
      000121                        457 00114$:
                           000121   458 	C$mmcsd.c$739$1_0$343 ==.
                                    459 ;	../src/mmcsd.c: 739: }
                                    460 ; genEndFunction
      000121 5B 05            [ 2]  461 	addw	sp, #5
                           000123   462 	C$mmcsd.c$739$1_0$343 ==.
                           000123   463 	XG$SD_GetDataResponse$0$0 ==.
      000123 81               [ 4]  464 	ret
                           000124   465 	G$SD_GetResponse$0$0 ==.
                           000124   466 	C$mmcsd.c$748$1_0$349 ==.
                                    467 ;	../src/mmcsd.c: 748: uint8_t SD_GetResponse(uint8_t Response)
                                    468 ; genLabel
                                    469 ;	-----------------------------------------
                                    470 ;	 function SD_GetResponse
                                    471 ;	-----------------------------------------
                                    472 ;	Register assignment might be sub-optimal.
                                    473 ;	Stack space usage: 4 bytes.
      000124                        474 _SD_GetResponse:
      000124 52 04            [ 2]  475 	sub	sp, #4
                           000126   476 	C$mmcsd.c$750$2_0$349 ==.
                                    477 ;	../src/mmcsd.c: 750: uint32_t Count = 0xFFF;
                                    478 ; genAssign
      000126 90 AE 0F FF      [ 2]  479 	ldw	y, #0x0fff
      00012A 5F               [ 1]  480 	clrw	x
                           00012B   481 	C$mmcsd.c$753$1_0$349 ==.
                                    482 ;	../src/mmcsd.c: 753: while ((SD_ReadByte() != Response) && Count) 
                                    483 ; genAssign
      00012B 17 03            [ 2]  484 	ldw	(0x03, sp), y
                                    485 ; genLabel
      00012D                        486 00102$:
                                    487 ; genCall
      00012D 89               [ 2]  488 	pushw	x
      00012E CDr03r1E         [ 4]  489 	call	_SD_ReadByte
      000131 85               [ 2]  490 	popw	x
                                    491 ; genCmpEQorNE
      000132 11 07            [ 1]  492 	cp	a, (0x07, sp)
      000134 26 03            [ 1]  493 	jrne	00132$
      000136 CCr01r51         [ 2]  494 	jp	00114$
      000139                        495 00132$:
                                    496 ; skipping generated iCode
                                    497 ; genIfx
      000139 16 03            [ 2]  498 	ldw	y, (0x03, sp)
      00013B 26 06            [ 1]  499 	jrne	00134$
      00013D 5D               [ 2]  500 	tnzw	x
      00013E 26 03            [ 1]  501 	jrne	00134$
      000140 CCr01r51         [ 2]  502 	jp	00114$
      000143                        503 00134$:
                           000143   504 	C$mmcsd.c$755$2_0$350 ==.
                                    505 ;	../src/mmcsd.c: 755: Count--;
                                    506 ; genMinus
      000143 16 03            [ 2]  507 	ldw	y, (0x03, sp)
      000145 72 A2 00 01      [ 2]  508 	subw	y, #0x0001
      000149 17 03            [ 2]  509 	ldw	(0x03, sp), y
      00014B 24 01            [ 1]  510 	jrnc	00135$
      00014D 5A               [ 2]  511 	decw	x
      00014E                        512 00135$:
                                    513 ; genGoto
      00014E CCr01r2D         [ 2]  514 	jp	00102$
                                    515 ; genLabel
      000151                        516 00114$:
                                    517 ; genAssign
      000151 16 03            [ 2]  518 	ldw	y, (0x03, sp)
                           000153   519 	C$mmcsd.c$757$1_0$349 ==.
                                    520 ;	../src/mmcsd.c: 757: if (Count == 0)
                                    521 ; genIfx
      000153 90 5D            [ 2]  522 	tnzw	y
      000155 26 03            [ 1]  523 	jrne	00136$
      000157 5D               [ 2]  524 	tnzw	x
      000158 27 03            [ 1]  525 	jreq	00137$
      00015A                        526 00136$:
      00015A CCr01r62         [ 2]  527 	jp	00106$
      00015D                        528 00137$:
                           00015D   529 	C$mmcsd.c$760$2_0$351 ==.
                                    530 ;	../src/mmcsd.c: 760: return SD_RESPONSE_FAILURE;
                                    531 ; genReturn
      00015D A6 FF            [ 1]  532 	ld	a, #0xff
      00015F CCr01r63         [ 2]  533 	jp	00108$
                                    534 ; genLabel
      000162                        535 00106$:
                           000162   536 	C$mmcsd.c$765$2_0$352 ==.
                                    537 ;	../src/mmcsd.c: 765: return SD_RESPONSE_NO_ERROR;
                                    538 ; genReturn
      000162 4F               [ 1]  539 	clr	a
                                    540 ; genLabel
      000163                        541 00108$:
                           000163   542 	C$mmcsd.c$767$1_0$349 ==.
                                    543 ;	../src/mmcsd.c: 767: }
                                    544 ; genEndFunction
      000163 5B 04            [ 2]  545 	addw	sp, #4
                           000165   546 	C$mmcsd.c$767$1_0$349 ==.
                           000165   547 	XG$SD_GetResponse$0$0 ==.
      000165 81               [ 4]  548 	ret
                           000166   549 	G$SD_GetResponseVal$0$0 ==.
                           000166   550 	C$mmcsd.c$772$1_0$354 ==.
                                    551 ;	../src/mmcsd.c: 772: void SD_GetResponseVal(uint8_t *pResp, uint8_t response)
                                    552 ; genLabel
                                    553 ;	-----------------------------------------
                                    554 ;	 function SD_GetResponseVal
                                    555 ;	-----------------------------------------
                                    556 ;	Register assignment might be sub-optimal.
                                    557 ;	Stack space usage: 0 bytes.
      000166                        558 _SD_GetResponseVal:
                           000166   559 	C$mmcsd.c$775$1_0$354 ==.
                                    560 ;	../src/mmcsd.c: 775: if(SD_GetResponse(response) == SD_RESPONSE_FAILURE)
                                    561 ; genIPush
      000166 7B 05            [ 1]  562 	ld	a, (0x05, sp)
      000168 88               [ 1]  563 	push	a
                                    564 ; genCall
      000169 CDr01r24         [ 4]  565 	call	_SD_GetResponse
      00016C 5B 01            [ 2]  566 	addw	sp, #1
                           00016E   567 	C$mmcsd.c$777$1_0$354 ==.
                                    568 ;	../src/mmcsd.c: 777: *pResp++ = 0xff;
                                    569 ; genAssign
      00016E 16 03            [ 2]  570 	ldw	y, (0x03, sp)
                                    571 ; genPlus
      000170 93               [ 1]  572 	ldw	x, y
      000171 5C               [ 1]  573 	incw	x
                           000172   574 	C$mmcsd.c$775$1_0$354 ==.
                                    575 ;	../src/mmcsd.c: 775: if(SD_GetResponse(response) == SD_RESPONSE_FAILURE)
                                    576 ; genCmpEQorNE
      000172 4C               [ 1]  577 	inc	a
      000173 26 03            [ 1]  578 	jrne	00112$
      000175 CCr01r7B         [ 2]  579 	jp	00113$
      000178                        580 00112$:
      000178 CCr01r84         [ 2]  581 	jp	00102$
      00017B                        582 00113$:
                                    583 ; skipping generated iCode
                           00017B   584 	C$mmcsd.c$777$2_0$355 ==.
                                    585 ;	../src/mmcsd.c: 777: *pResp++ = 0xff;
                                    586 ; genPointerSet
      00017B A6 FF            [ 1]  587 	ld	a, #0xff
      00017D 90 F7            [ 1]  588 	ld	(y), a
                                    589 ; genAssign
      00017F 1F 03            [ 2]  590 	ldw	(0x03, sp), x
                                    591 ; genGoto
      000181 CCr01r8A         [ 2]  592 	jp	00103$
                                    593 ; genLabel
      000184                        594 00102$:
                           000184   595 	C$mmcsd.c$779$2_0$356 ==.
                                    596 ;	../src/mmcsd.c: 779: *pResp++ = response;
                                    597 ; genPointerSet
      000184 7B 05            [ 1]  598 	ld	a, (0x05, sp)
      000186 90 F7            [ 1]  599 	ld	(y), a
                                    600 ; genAssign
      000188 1F 03            [ 2]  601 	ldw	(0x03, sp), x
                                    602 ; genLabel
      00018A                        603 00103$:
                           00018A   604 	C$mmcsd.c$782$1_0$354 ==.
                                    605 ;	../src/mmcsd.c: 782: *pResp++ = SD_ReadByte();
                                    606 ; genAssign
      00018A 1E 03            [ 2]  607 	ldw	x, (0x03, sp)
                                    608 ; genCall
      00018C 89               [ 2]  609 	pushw	x
      00018D CDr03r1E         [ 4]  610 	call	_SD_ReadByte
      000190 85               [ 2]  611 	popw	x
                                    612 ; genPointerSet
      000191 F7               [ 1]  613 	ld	(x), a
                                    614 ; genPlus
      000192 5C               [ 1]  615 	incw	x
                                    616 ; genAssign
      000193 1F 03            [ 2]  617 	ldw	(0x03, sp), x
                           000195   618 	C$mmcsd.c$783$1_0$354 ==.
                                    619 ;	../src/mmcsd.c: 783: *pResp++ = SD_ReadByte();
                                    620 ; genAssign
      000195 1E 03            [ 2]  621 	ldw	x, (0x03, sp)
                                    622 ; genCall
      000197 89               [ 2]  623 	pushw	x
      000198 CDr03r1E         [ 4]  624 	call	_SD_ReadByte
      00019B 85               [ 2]  625 	popw	x
                                    626 ; genPointerSet
      00019C F7               [ 1]  627 	ld	(x), a
                                    628 ; genPlus
      00019D 5C               [ 1]  629 	incw	x
                                    630 ; genAssign
      00019E 1F 03            [ 2]  631 	ldw	(0x03, sp), x
                           0001A0   632 	C$mmcsd.c$784$1_0$354 ==.
                                    633 ;	../src/mmcsd.c: 784: *pResp++ = SD_ReadByte();
                                    634 ; genAssign
      0001A0 1E 03            [ 2]  635 	ldw	x, (0x03, sp)
                                    636 ; genCall
      0001A2 89               [ 2]  637 	pushw	x
      0001A3 CDr03r1E         [ 4]  638 	call	_SD_ReadByte
      0001A6 85               [ 2]  639 	popw	x
                                    640 ; genPointerSet
      0001A7 F7               [ 1]  641 	ld	(x), a
                                    642 ; genPlus
      0001A8 5C               [ 1]  643 	incw	x
                                    644 ; genAssign
      0001A9 1F 03            [ 2]  645 	ldw	(0x03, sp), x
                           0001AB   646 	C$mmcsd.c$785$1_0$354 ==.
                                    647 ;	../src/mmcsd.c: 785: *pResp++ = SD_ReadByte();
                                    648 ; genAssign
      0001AB 1E 03            [ 2]  649 	ldw	x, (0x03, sp)
                                    650 ; genCall
      0001AD 89               [ 2]  651 	pushw	x
      0001AE CDr03r1E         [ 4]  652 	call	_SD_ReadByte
      0001B1 85               [ 2]  653 	popw	x
                                    654 ; genPointerSet
      0001B2 F7               [ 1]  655 	ld	(x), a
                                    656 ; genPlus
      0001B3 5C               [ 1]  657 	incw	x
                                    658 ; genAssign
      0001B4 1F 03            [ 2]  659 	ldw	(0x03, sp), x
                           0001B6   660 	C$mmcsd.c$786$1_0$354 ==.
                                    661 ;	../src/mmcsd.c: 786: *pResp = SD_ReadByte();
                                    662 ; genAssign
      0001B6 1E 03            [ 2]  663 	ldw	x, (0x03, sp)
                                    664 ; genCall
      0001B8 89               [ 2]  665 	pushw	x
      0001B9 CDr03r1E         [ 4]  666 	call	_SD_ReadByte
      0001BC 85               [ 2]  667 	popw	x
                                    668 ; genPointerSet
      0001BD F7               [ 1]  669 	ld	(x), a
                                    670 ; genLabel
      0001BE                        671 00104$:
                           0001BE   672 	C$mmcsd.c$787$1_0$354 ==.
                                    673 ;	../src/mmcsd.c: 787: }
                                    674 ; genEndFunction
                           0001BE   675 	C$mmcsd.c$787$1_0$354 ==.
                           0001BE   676 	XG$SD_GetResponseVal$0$0 ==.
      0001BE 81               [ 4]  677 	ret
                           0001BF   678 	G$SD_GoIdleState$0$0 ==.
                           0001BF   679 	C$mmcsd.c$871$1_0$358 ==.
                                    680 ;	../src/mmcsd.c: 871: uint8_t SD_GoIdleState(void)
                                    681 ; genLabel
                                    682 ;	-----------------------------------------
                                    683 ;	 function SD_GoIdleState
                                    684 ;	-----------------------------------------
                                    685 ;	Register assignment might be sub-optimal.
                                    686 ;	Stack space usage: 6 bytes.
      0001BF                        687 _SD_GoIdleState:
      0001BF 52 06            [ 2]  688 	sub	sp, #6
                           0001C1   689 	C$mmcsd.c$874$2_0$358 ==.
                                    690 ;	../src/mmcsd.c: 874: uint8_t resp[6] = {0};
                                    691 ; skipping iCode since result will be rematerialized
                                    692 ; genPointerSet
      0001C1 0F 01            [ 1]  693 	clr	(0x01, sp)
                                    694 ; genPlus
      0001C3 96               [ 1]  695 	ldw	x, sp
      0001C4 5C               [ 1]  696 	incw	x
      0001C5 5C               [ 1]  697 	incw	x
                                    698 ; genPointerSet
      0001C6 7F               [ 1]  699 	clr	(x)
                                    700 ; genPlus
      0001C7 96               [ 1]  701 	ldw	x, sp
      0001C8 1C 00 03         [ 2]  702 	addw	x, #3
                                    703 ; genPointerSet
      0001CB 7F               [ 1]  704 	clr	(x)
                                    705 ; genPlus
      0001CC 96               [ 1]  706 	ldw	x, sp
      0001CD 1C 00 04         [ 2]  707 	addw	x, #4
                                    708 ; genPointerSet
      0001D0 7F               [ 1]  709 	clr	(x)
                                    710 ; genPlus
      0001D1 96               [ 1]  711 	ldw	x, sp
      0001D2 1C 00 05         [ 2]  712 	addw	x, #5
                                    713 ; genPointerSet
      0001D5 7F               [ 1]  714 	clr	(x)
                                    715 ; genPlus
      0001D6 96               [ 1]  716 	ldw	x, sp
      0001D7 1C 00 06         [ 2]  717 	addw	x, #6
                                    718 ; genPointerSet
      0001DA 7F               [ 1]  719 	clr	(x)
                           0001DB   720 	C$mmcsd.c$876$1_0$358 ==.
                                    721 ;	../src/mmcsd.c: 876: SD_CS_LOW();
                                    722 ; genPointerGet
      0001DB C6 50 0A         [ 1]  723 	ld	a, 0x500a
                                    724 ; genAnd
      0001DE A4 EF            [ 1]  725 	and	a, #0xef
                                    726 ; genPointerSet
      0001E0 C7 50 0A         [ 1]  727 	ld	0x500a, a
                           0001E3   728 	C$mmcsd.c$879$1_0$358 ==.
                                    729 ;	../src/mmcsd.c: 879: SD_SendCmd(SD_CMD_GO_IDLE_STATE, (uint32_t)0, 0x95);
                                    730 ; genIPush
      0001E3 4B 95            [ 1]  731 	push	#0x95
                                    732 ; genIPush
      0001E5 5F               [ 1]  733 	clrw	x
      0001E6 89               [ 2]  734 	pushw	x
      0001E7 5F               [ 1]  735 	clrw	x
      0001E8 89               [ 2]  736 	pushw	x
                                    737 ; genIPush
      0001E9 4B 00            [ 1]  738 	push	#0x00
                                    739 ; genCall
      0001EB CDr00r47         [ 4]  740 	call	_SD_SendCmd
      0001EE 5B 06            [ 2]  741 	addw	sp, #6
                           0001F0   742 	C$mmcsd.c$882$1_0$358 ==.
                                    743 ;	../src/mmcsd.c: 882: if (SD_GetResponse(SD_IN_IDLE_STATE))
                                    744 ; genIPush
      0001F0 4B 01            [ 1]  745 	push	#0x01
                                    746 ; genCall
      0001F2 CDr01r24         [ 4]  747 	call	_SD_GetResponse
      0001F5 5B 01            [ 2]  748 	addw	sp, #1
                                    749 ; genIfx
      0001F7 4D               [ 1]  750 	tnz	a
      0001F8 26 03            [ 1]  751 	jrne	00157$
      0001FA CCr02r02         [ 2]  752 	jp	00102$
      0001FD                        753 00157$:
                           0001FD   754 	C$mmcsd.c$885$2_0$359 ==.
                                    755 ;	../src/mmcsd.c: 885: return SD_RESPONSE_FAILURE;
                                    756 ; genReturn
      0001FD A6 FF            [ 1]  757 	ld	a, #0xff
      0001FF CCr03r0B         [ 2]  758 	jp	00116$
                                    759 ; genLabel
      000202                        760 00102$:
                           000202   761 	C$mmcsd.c$888$1_0$358 ==.
                                    762 ;	../src/mmcsd.c: 888: SD_SendCmd(SD_CMD_IF_COND, (uint32_t)0x156, 0x43);
                                    763 ; genIPush
      000202 4B 43            [ 1]  764 	push	#0x43
                                    765 ; genIPush
      000204 4B 56            [ 1]  766 	push	#0x56
      000206 4B 01            [ 1]  767 	push	#0x01
      000208 5F               [ 1]  768 	clrw	x
      000209 89               [ 2]  769 	pushw	x
                                    770 ; genIPush
      00020A 4B 08            [ 1]  771 	push	#0x08
                                    772 ; genCall
      00020C CDr00r47         [ 4]  773 	call	_SD_SendCmd
      00020F 5B 06            [ 2]  774 	addw	sp, #6
                           000211   775 	C$mmcsd.c$889$1_0$358 ==.
                                    776 ;	../src/mmcsd.c: 889: SD_GetResponseVal(resp,0x01);
                                    777 ; skipping iCode since result will be rematerialized
                                    778 ; skipping iCode since result will be rematerialized
                                    779 ; genIPush
      000211 4B 01            [ 1]  780 	push	#0x01
                                    781 ; genIPush
      000213 96               [ 1]  782 	ldw	x, sp
      000214 5C               [ 1]  783 	incw	x
      000215 5C               [ 1]  784 	incw	x
      000216 89               [ 2]  785 	pushw	x
                                    786 ; genCall
      000217 CDr01r66         [ 4]  787 	call	_SD_GetResponseVal
      00021A 5B 03            [ 2]  788 	addw	sp, #3
                           00021C   789 	C$mmcsd.c$890$1_0$358 ==.
                                    790 ;	../src/mmcsd.c: 890: if(resp[0]==0x01){
                                    791 ; genPointerGet
      00021C 7B 01            [ 1]  792 	ld	a, (0x01, sp)
                                    793 ; genCmpEQorNE
      00021E 4A               [ 1]  794 	dec	a
      00021F 26 03            [ 1]  795 	jrne	00159$
      000221 CCr02r27         [ 2]  796 	jp	00160$
      000224                        797 00159$:
      000224 CCr02rAE         [ 2]  798 	jp	00123$
      000227                        799 00160$:
                                    800 ; skipping generated iCode
                           000227   801 	C$mmcsd.c$892$2_0$360 ==.
                                    802 ;	../src/mmcsd.c: 892: if ((resp[3] == 0x01)&&(resp[4] == 0x56)){
                                    803 ; skipping iCode since result will be rematerialized
                                    804 ; genPointerGet
      000227 7B 04            [ 1]  805 	ld	a, (0x04, sp)
                                    806 ; genCmpEQorNE
      000229 4A               [ 1]  807 	dec	a
      00022A 26 03            [ 1]  808 	jrne	00162$
      00022C CCr02r32         [ 2]  809 	jp	00163$
      00022F                        810 00162$:
      00022F CCr02rA9         [ 2]  811 	jp	00107$
      000232                        812 00163$:
                                    813 ; skipping generated iCode
                                    814 ; skipping iCode since result will be rematerialized
                                    815 ; genPointerGet
      000232 7B 05            [ 1]  816 	ld	a, (0x05, sp)
                                    817 ; genCmpEQorNE
      000234 A1 56            [ 1]  818 	cp	a, #0x56
      000236 26 03            [ 1]  819 	jrne	00165$
      000238 CCr02r3E         [ 2]  820 	jp	00166$
      00023B                        821 00165$:
      00023B CCr02rA9         [ 2]  822 	jp	00107$
      00023E                        823 00166$:
                                    824 ; skipping generated iCode
                           00023E   825 	C$mmcsd.c$895$4_0$362 ==.
                                    826 ;	../src/mmcsd.c: 895: do{
                                    827 ; skipping iCode since result will be rematerialized
                                    828 ; skipping iCode since result will be rematerialized
                                    829 ; genLabel
      00023E                        830 00103$:
                           00023E   831 	C$mmcsd.c$896$4_0$362 ==.
                                    832 ;	../src/mmcsd.c: 896: SD_SendCmd(SD_CMD_55, (uint32_t)0, 0x01);
                                    833 ; genIPush
      00023E 4B 01            [ 1]  834 	push	#0x01
                                    835 ; genIPush
      000240 5F               [ 1]  836 	clrw	x
      000241 89               [ 2]  837 	pushw	x
      000242 5F               [ 1]  838 	clrw	x
      000243 89               [ 2]  839 	pushw	x
                                    840 ; genIPush
      000244 4B 37            [ 1]  841 	push	#0x37
                                    842 ; genCall
      000246 CDr00r47         [ 4]  843 	call	_SD_SendCmd
      000249 5B 06            [ 2]  844 	addw	sp, #6
                           00024B   845 	C$mmcsd.c$897$4_0$362 ==.
                                    846 ;	../src/mmcsd.c: 897: SD_GetResponseVal(resp,0x01);
                                    847 ; skipping iCode since result will be rematerialized
                                    848 ; genIPush
      00024B 4B 01            [ 1]  849 	push	#0x01
                                    850 ; genIPush
      00024D 96               [ 1]  851 	ldw	x, sp
      00024E 5C               [ 1]  852 	incw	x
      00024F 5C               [ 1]  853 	incw	x
      000250 89               [ 2]  854 	pushw	x
                                    855 ; genCall
      000251 CDr01r66         [ 4]  856 	call	_SD_GetResponseVal
      000254 5B 03            [ 2]  857 	addw	sp, #3
                           000256   858 	C$mmcsd.c$898$4_0$362 ==.
                                    859 ;	../src/mmcsd.c: 898: dly((uint32_t)10);
                                    860 ; genIPush
      000256 4B 0A            [ 1]  861 	push	#0x0a
      000258 5F               [ 1]  862 	clrw	x
      000259 89               [ 2]  863 	pushw	x
      00025A 4B 00            [ 1]  864 	push	#0x00
                                    865 ; genCall
      00025C CDr00r00         [ 4]  866 	call	_dly
      00025F 5B 04            [ 2]  867 	addw	sp, #4
                           000261   868 	C$mmcsd.c$899$4_0$362 ==.
                                    869 ;	../src/mmcsd.c: 899: SD_SendCmd(SD_ACMD_41&0x7f, (1UL<<30), 0x1);
                                    870 ; genIPush
      000261 4B 01            [ 1]  871 	push	#0x01
                                    872 ; genIPush
      000263 5F               [ 1]  873 	clrw	x
      000264 89               [ 2]  874 	pushw	x
      000265 4B 00            [ 1]  875 	push	#0x00
      000267 4B 40            [ 1]  876 	push	#0x40
                                    877 ; genIPush
      000269 4B 69            [ 1]  878 	push	#0x69
                                    879 ; genCall
      00026B CDr00r47         [ 4]  880 	call	_SD_SendCmd
      00026E 5B 06            [ 2]  881 	addw	sp, #6
                           000270   882 	C$mmcsd.c$900$4_0$362 ==.
                                    883 ;	../src/mmcsd.c: 900: dly((uint32_t)1000);
                                    884 ; genIPush
      000270 4B E8            [ 1]  885 	push	#0xe8
      000272 4B 03            [ 1]  886 	push	#0x03
      000274 5F               [ 1]  887 	clrw	x
      000275 89               [ 2]  888 	pushw	x
                                    889 ; genCall
      000276 CDr00r00         [ 4]  890 	call	_dly
      000279 5B 04            [ 2]  891 	addw	sp, #4
                           00027B   892 	C$mmcsd.c$901$4_0$362 ==.
                                    893 ;	../src/mmcsd.c: 901: SD_GetResponseVal(resp,0x00);
                                    894 ; genCast
                                    895 ; genAssign
      00027B 96               [ 1]  896 	ldw	x, sp
      00027C 5C               [ 1]  897 	incw	x
                                    898 ; genIPush
      00027D 4B 00            [ 1]  899 	push	#0x00
                                    900 ; genIPush
      00027F 89               [ 2]  901 	pushw	x
                                    902 ; genCall
      000280 CDr01r66         [ 4]  903 	call	_SD_GetResponseVal
      000283 5B 03            [ 2]  904 	addw	sp, #3
                           000285   905 	C$mmcsd.c$902$3_0$361 ==.
                                    906 ;	../src/mmcsd.c: 902: } while(resp[0]); //until resved 0x0
                                    907 ; genPointerGet
      000285 7B 01            [ 1]  908 	ld	a, (0x01, sp)
                                    909 ; genIfx
      000287 4D               [ 1]  910 	tnz	a
      000288 27 03            [ 1]  911 	jreq	00167$
      00028A CCr02r3E         [ 2]  912 	jp	00103$
      00028D                        913 00167$:
                           00028D   914 	C$mmcsd.c$904$3_0$361 ==.
                                    915 ;	../src/mmcsd.c: 904: SD_SendCmd(SD_CMD_58, (uint32_t)0,0x01);
                                    916 ; genIPush
      00028D 4B 01            [ 1]  917 	push	#0x01
                                    918 ; genIPush
      00028F 5F               [ 1]  919 	clrw	x
      000290 89               [ 2]  920 	pushw	x
      000291 5F               [ 1]  921 	clrw	x
      000292 89               [ 2]  922 	pushw	x
                                    923 ; genIPush
      000293 4B 3A            [ 1]  924 	push	#0x3a
                                    925 ; genCall
      000295 CDr00r47         [ 4]  926 	call	_SD_SendCmd
      000298 5B 06            [ 2]  927 	addw	sp, #6
                           00029A   928 	C$mmcsd.c$905$3_0$361 ==.
                                    929 ;	../src/mmcsd.c: 905: SD_GetResponseVal(resp,58);
                                    930 ; skipping iCode since result will be rematerialized
                                    931 ; skipping iCode since result will be rematerialized
                                    932 ; genIPush
      00029A 4B 3A            [ 1]  933 	push	#0x3a
                                    934 ; genIPush
      00029C 96               [ 1]  935 	ldw	x, sp
      00029D 5C               [ 1]  936 	incw	x
      00029E 5C               [ 1]  937 	incw	x
      00029F 89               [ 2]  938 	pushw	x
                                    939 ; genCall
      0002A0 CDr01r66         [ 4]  940 	call	_SD_GetResponseVal
      0002A3 5B 03            [ 2]  941 	addw	sp, #3
                           0002A5   942 	C$mmcsd.c$906$3_0$361 ==.
                                    943 ;	../src/mmcsd.c: 906: return SD_RESPONSE_NO_ERROR;
                                    944 ; genReturn
      0002A5 4F               [ 1]  945 	clr	a
      0002A6 CCr03r0B         [ 2]  946 	jp	00116$
                                    947 ; genLabel
      0002A9                        948 00107$:
                           0002A9   949 	C$mmcsd.c$909$3_0$363 ==.
                                    950 ;	../src/mmcsd.c: 909: return SD_RESPONSE_FAILURE;
                                    951 ; genReturn
      0002A9 A6 FF            [ 1]  952 	ld	a, #0xff
      0002AB CCr03r0B         [ 2]  953 	jp	00116$
                           0002AE   954 	C$mmcsd.c$914$1_0$358 ==.
                                    955 ;	../src/mmcsd.c: 914: do{
                                    956 ; genLabel
      0002AE                        957 00123$:
                                    958 ; skipping iCode since result will be rematerialized
                                    959 ; skipping iCode since result will be rematerialized
                                    960 ; genLabel
      0002AE                        961 00110$:
                           0002AE   962 	C$mmcsd.c$915$3_0$365 ==.
                                    963 ;	../src/mmcsd.c: 915: SD_SendCmd(SD_CMD_55, 0, 0x01);
                                    964 ; genIPush
      0002AE 4B 01            [ 1]  965 	push	#0x01
                                    966 ; genIPush
      0002B0 5F               [ 1]  967 	clrw	x
      0002B1 89               [ 2]  968 	pushw	x
      0002B2 5F               [ 1]  969 	clrw	x
      0002B3 89               [ 2]  970 	pushw	x
                                    971 ; genIPush
      0002B4 4B 37            [ 1]  972 	push	#0x37
                                    973 ; genCall
      0002B6 CDr00r47         [ 4]  974 	call	_SD_SendCmd
      0002B9 5B 06            [ 2]  975 	addw	sp, #6
                           0002BB   976 	C$mmcsd.c$916$3_0$365 ==.
                                    977 ;	../src/mmcsd.c: 916: SD_GetResponseVal(resp,0x01);
                                    978 ; skipping iCode since result will be rematerialized
                                    979 ; genIPush
      0002BB 4B 01            [ 1]  980 	push	#0x01
                                    981 ; genIPush
      0002BD 96               [ 1]  982 	ldw	x, sp
      0002BE 5C               [ 1]  983 	incw	x
      0002BF 5C               [ 1]  984 	incw	x
      0002C0 89               [ 2]  985 	pushw	x
                                    986 ; genCall
      0002C1 CDr01r66         [ 4]  987 	call	_SD_GetResponseVal
      0002C4 5B 03            [ 2]  988 	addw	sp, #3
                           0002C6   989 	C$mmcsd.c$917$3_0$365 ==.
                                    990 ;	../src/mmcsd.c: 917: dly((uint32_t)1000);
                                    991 ; genIPush
      0002C6 4B E8            [ 1]  992 	push	#0xe8
      0002C8 4B 03            [ 1]  993 	push	#0x03
      0002CA 5F               [ 1]  994 	clrw	x
      0002CB 89               [ 2]  995 	pushw	x
                                    996 ; genCall
      0002CC CDr00r00         [ 4]  997 	call	_dly
      0002CF 5B 04            [ 2]  998 	addw	sp, #4
                           0002D1   999 	C$mmcsd.c$918$3_0$365 ==.
                                   1000 ;	../src/mmcsd.c: 918: SD_SendCmd(SD_ACMD_41&0x7f, 0UL, 0x1);
                                   1001 ; genIPush
      0002D1 4B 01            [ 1] 1002 	push	#0x01
                                   1003 ; genIPush
      0002D3 5F               [ 1] 1004 	clrw	x
      0002D4 89               [ 2] 1005 	pushw	x
      0002D5 5F               [ 1] 1006 	clrw	x
      0002D6 89               [ 2] 1007 	pushw	x
                                   1008 ; genIPush
      0002D7 4B 69            [ 1] 1009 	push	#0x69
                                   1010 ; genCall
      0002D9 CDr00r47         [ 4] 1011 	call	_SD_SendCmd
      0002DC 5B 06            [ 2] 1012 	addw	sp, #6
                           0002DE  1013 	C$mmcsd.c$919$3_0$365 ==.
                                   1014 ;	../src/mmcsd.c: 919: SD_GetResponseVal(resp,0x00);
                                   1015 ; skipping iCode since result will be rematerialized
                                   1016 ; genIPush
      0002DE 4B 00            [ 1] 1017 	push	#0x00
                                   1018 ; genIPush
      0002E0 96               [ 1] 1019 	ldw	x, sp
      0002E1 5C               [ 1] 1020 	incw	x
      0002E2 5C               [ 1] 1021 	incw	x
      0002E3 89               [ 2] 1022 	pushw	x
                                   1023 ; genCall
      0002E4 CDr01r66         [ 4] 1024 	call	_SD_GetResponseVal
      0002E7 5B 03            [ 2] 1025 	addw	sp, #3
                           0002E9  1026 	C$mmcsd.c$920$3_0$365 ==.
                                   1027 ;	../src/mmcsd.c: 920: dly((uint32_t)1000);
                                   1028 ; genIPush
      0002E9 4B E8            [ 1] 1029 	push	#0xe8
      0002EB 4B 03            [ 1] 1030 	push	#0x03
      0002ED 5F               [ 1] 1031 	clrw	x
      0002EE 89               [ 2] 1032 	pushw	x
                                   1033 ; genCall
      0002EF CDr00r00         [ 4] 1034 	call	_dly
      0002F2 5B 04            [ 2] 1035 	addw	sp, #4
                           0002F4  1036 	C$mmcsd.c$921$2_0$364 ==.
                                   1037 ;	../src/mmcsd.c: 921: } while(resp[0]);
                                   1038 ; genPointerGet
      0002F4 7B 01            [ 1] 1039 	ld	a, (0x01, sp)
                                   1040 ; genIfx
      0002F6 4D               [ 1] 1041 	tnz	a
      0002F7 27 03            [ 1] 1042 	jreq	00168$
      0002F9 CCr02rAE         [ 2] 1043 	jp	00110$
      0002FC                       1044 00168$:
                           0002FC  1045 	C$mmcsd.c$926$1_0$358 ==.
                                   1046 ;	../src/mmcsd.c: 926: SD_CS_HIGH();
                                   1047 ; genPointerGet
      0002FC C6 50 0A         [ 1] 1048 	ld	a, 0x500a
                                   1049 ; genOr
      0002FF AA 10            [ 1] 1050 	or	a, #0x10
                                   1051 ; genPointerSet
      000301 C7 50 0A         [ 1] 1052 	ld	0x500a, a
                           000304  1053 	C$mmcsd.c$929$1_0$358 ==.
                                   1054 ;	../src/mmcsd.c: 929: SD_WriteByte(SD_DUMMY_BYTE);
                                   1055 ; genIPush
      000304 4B FF            [ 1] 1056 	push	#0xff
                                   1057 ; genCall
      000306 CDr03r0E         [ 4] 1058 	call	_SD_WriteByte
      000309 84               [ 1] 1059 	pop	a
                           00030A  1060 	C$mmcsd.c$931$1_0$358 ==.
                                   1061 ;	../src/mmcsd.c: 931: return SD_RESPONSE_NO_ERROR;
                                   1062 ; genReturn
      00030A 4F               [ 1] 1063 	clr	a
                                   1064 ; genLabel
      00030B                       1065 00116$:
                           00030B  1066 	C$mmcsd.c$932$1_0$358 ==.
                                   1067 ;	../src/mmcsd.c: 932: }
                                   1068 ; genEndFunction
      00030B 5B 06            [ 2] 1069 	addw	sp, #6
                           00030D  1070 	C$mmcsd.c$932$1_0$358 ==.
                           00030D  1071 	XG$SD_GoIdleState$0$0 ==.
      00030D 81               [ 4] 1072 	ret
                           00030E  1073 	G$SD_WriteByte$0$0 ==.
                           00030E  1074 	C$mmcsd.c$941$1_0$367 ==.
                                   1075 ;	../src/mmcsd.c: 941: uint8_t SD_WriteByte(uint8_t Data)
                                   1076 ; genLabel
                                   1077 ;	-----------------------------------------
                                   1078 ;	 function SD_WriteByte
                                   1079 ;	-----------------------------------------
                                   1080 ;	Register assignment is optimal.
                                   1081 ;	Stack space usage: 0 bytes.
      00030E                       1082 _SD_WriteByte:
                           00030E  1083 	C$mmcsd.c$944$1_0$367 ==.
                                   1084 ;	../src/mmcsd.c: 944: while (SPI->SR & (SPI_FLAG_TXE) == 0)
                                   1085 ; genPointerGet
                                   1086 ; Dummy read
      00030E C6 52 03         [ 1] 1087 	ld	a, 0x5203
                           000311  1088 	C$mmcsd.c$948$1_0$367 ==.
                                   1089 ;	../src/mmcsd.c: 948: SPI->DR = (Data);
                                   1090 ; genPointerSet
      000311 AE 52 04         [ 2] 1091 	ldw	x, #0x5204
      000314 7B 03            [ 1] 1092 	ld	a, (0x03, sp)
      000316 F7               [ 1] 1093 	ld	(x), a
                           000317  1094 	C$mmcsd.c$951$1_0$367 ==.
                                   1095 ;	../src/mmcsd.c: 951: while (SPI->SR & (SPI_FLAG_RXNE) == 0)
                                   1096 ; genPointerGet
                                   1097 ; Dummy read
      000317 C6 52 03         [ 1] 1098 	ld	a, 0x5203
                           00031A  1099 	C$mmcsd.c$955$1_0$367 ==.
                                   1100 ;	../src/mmcsd.c: 955: return SPI->DR;
                                   1101 ; genPointerGet
      00031A C6 52 04         [ 1] 1102 	ld	a, 0x5204
                                   1103 ; genReturn
                                   1104 ; genLabel
      00031D                       1105 00107$:
                           00031D  1106 	C$mmcsd.c$956$1_0$367 ==.
                                   1107 ;	../src/mmcsd.c: 956: }
                                   1108 ; genEndFunction
                           00031D  1109 	C$mmcsd.c$956$1_0$367 ==.
                           00031D  1110 	XG$SD_WriteByte$0$0 ==.
      00031D 81               [ 4] 1111 	ret
                           00031E  1112 	G$SD_ReadByte$0$0 ==.
                           00031E  1113 	C$mmcsd.c$963$1_0$371 ==.
                                   1114 ;	../src/mmcsd.c: 963: uint8_t SD_ReadByte(void)
                                   1115 ; genLabel
                                   1116 ;	-----------------------------------------
                                   1117 ;	 function SD_ReadByte
                                   1118 ;	-----------------------------------------
                                   1119 ;	Register assignment is optimal.
                                   1120 ;	Stack space usage: 0 bytes.
      00031E                       1121 _SD_ReadByte:
                           00031E  1122 	C$mmcsd.c$968$1_0$371 ==.
                                   1123 ;	../src/mmcsd.c: 968: while (SPI->SR&(SPI_FLAG_TXE) == 0)
                                   1124 ; genPointerGet
                                   1125 ; Dummy read
      00031E C6 52 03         [ 1] 1126 	ld	a, 0x5203
                           000321  1127 	C$mmcsd.c$971$1_0$371 ==.
                                   1128 ;	../src/mmcsd.c: 971: SPI->DR = SD_DUMMY_BYTE;
                                   1129 ; genPointerSet
      000321 35 FF 52 04      [ 1] 1130 	mov	0x5204+0, #0xff
                           000325  1131 	C$mmcsd.c$974$1_0$371 ==.
                                   1132 ;	../src/mmcsd.c: 974: while (SPI->SR&(SPI_FLAG_RXNE) == 0)
                                   1133 ; genPointerGet
                                   1134 ; Dummy read
      000325 C6 52 03         [ 1] 1135 	ld	a, 0x5203
                           000328  1136 	C$mmcsd.c$977$1_0$371 ==.
                                   1137 ;	../src/mmcsd.c: 977: Data = (uint8_t)SPI->DR;
                                   1138 ; genPointerGet
      000328 C6 52 04         [ 1] 1139 	ld	a, 0x5204
                           00032B  1140 	C$mmcsd.c$980$1_0$371 ==.
                                   1141 ;	../src/mmcsd.c: 980: return Data;
                                   1142 ; genReturn
                                   1143 ; genLabel
      00032B                       1144 00107$:
                           00032B  1145 	C$mmcsd.c$981$1_0$371 ==.
                                   1146 ;	../src/mmcsd.c: 981: }
                                   1147 ; genEndFunction
                           00032B  1148 	C$mmcsd.c$981$1_0$371 ==.
                           00032B  1149 	XG$SD_ReadByte$0$0 ==.
      00032B 81               [ 4] 1150 	ret
                           00032C  1151 	G$SD_LowLevel_Init$0$0 ==.
                           00032C  1152 	C$mmcsd.c$1025$1_0$375 ==.
                                   1153 ;	../src/mmcsd.c: 1025: void SD_LowLevel_Init(void)
                                   1154 ; genLabel
                                   1155 ;	-----------------------------------------
                                   1156 ;	 function SD_LowLevel_Init
                                   1157 ;	-----------------------------------------
                                   1158 ;	Register assignment is optimal.
                                   1159 ;	Stack space usage: 0 bytes.
      00032C                       1160 _SD_LowLevel_Init:
                           00032C  1161 	C$mmcsd.c$1035$1_0$375 ==.
                                   1162 ;	../src/mmcsd.c: 1035: SPI->CR1 = SPI_FIRSTBIT_MSB | SPI_BAUDRATEPRESCALER_64|SPI_CLOCKPOLARITY_HIGH | SPI_CLOCKPHASE_2EDGE;
                                   1163 ; genPointerSet
      00032C 35 2B 52 00      [ 1] 1164 	mov	0x5200+0, #0x2b
                           000330  1165 	C$mmcsd.c$1037$1_0$375 ==.
                                   1166 ;	../src/mmcsd.c: 1037: SPI->CR2 = SPI_DATADIRECTION_2LINES_FULLDUPLEX|SPI_NSS_SOFT|SPI_CR2_SSI;
                                   1167 ; genPointerSet
      000330 35 03 52 01      [ 1] 1168 	mov	0x5201+0, #0x03
                           000334  1169 	C$mmcsd.c$1039$1_0$375 ==.
                                   1170 ;	../src/mmcsd.c: 1039: SPI->CR1 |= SPI_MODE_MASTER;
                                   1171 ; genPointerGet
      000334 C6 52 00         [ 1] 1172 	ld	a, 0x5200
                                   1173 ; genOr
      000337 AA 04            [ 1] 1174 	or	a, #0x04
                                   1175 ; genPointerSet
      000339 C7 52 00         [ 1] 1176 	ld	0x5200, a
                           00033C  1177 	C$mmcsd.c$1041$1_0$375 ==.
                                   1178 ;	../src/mmcsd.c: 1041: SPI->CRCPR = 0x07;
                                   1179 ; genPointerSet
      00033C 35 07 52 05      [ 1] 1180 	mov	0x5205+0, #0x07
                           000340  1181 	C$mmcsd.c$1044$1_0$375 ==.
                                   1182 ;	../src/mmcsd.c: 1044: SPI->CR1 |= SPI_CR1_SPE;
                                   1183 ; genPointerGet
      000340 C6 52 00         [ 1] 1184 	ld	a, 0x5200
                                   1185 ; genOr
      000343 AA 40            [ 1] 1186 	or	a, #0x40
                                   1187 ; genPointerSet
      000345 C7 52 00         [ 1] 1188 	ld	0x5200, a
                           000348  1189 	C$mmcsd.c$1048$1_0$375 ==.
                                   1190 ;	../src/mmcsd.c: 1048: SD_CS_GPIO_PORT->CR2 &= (~SD_CS_PIN); //Reset corresponding bit
                                   1191 ; genPointerGet
      000348 C6 50 0E         [ 1] 1192 	ld	a, 0x500e
                                   1193 ; genAnd
      00034B A4 EF            [ 1] 1194 	and	a, #0xef
                                   1195 ; genPointerSet
      00034D C7 50 0E         [ 1] 1196 	ld	0x500e, a
                           000350  1197 	C$mmcsd.c$1049$1_0$375 ==.
                                   1198 ;	../src/mmcsd.c: 1049: SD_CS_GPIO_PORT->ODR |= SD_CS_PIN; // high level
                                   1199 ; genPointerGet
      000350 C6 50 0A         [ 1] 1200 	ld	a, 0x500a
                                   1201 ; genOr
      000353 AA 10            [ 1] 1202 	or	a, #0x10
                                   1203 ; genPointerSet
      000355 C7 50 0A         [ 1] 1204 	ld	0x500a, a
                           000358  1205 	C$mmcsd.c$1050$1_0$375 ==.
                                   1206 ;	../src/mmcsd.c: 1050: SD_CS_GPIO_PORT->DDR |= SD_CS_PIN; // output mode 
                                   1207 ; genPointerGet
      000358 C6 50 0C         [ 1] 1208 	ld	a, 0x500c
                                   1209 ; genOr
      00035B AA 10            [ 1] 1210 	or	a, #0x10
                                   1211 ; genPointerSet
      00035D C7 50 0C         [ 1] 1212 	ld	0x500c, a
                           000360  1213 	C$mmcsd.c$1051$1_0$375 ==.
                                   1214 ;	../src/mmcsd.c: 1051: SD_CS_GPIO_PORT->CR1 &= ~SD_CS_PIN; //open drain here
                                   1215 ; genPointerGet
      000360 C6 50 0D         [ 1] 1216 	ld	a, 0x500d
                                   1217 ; genAnd
      000363 A4 EF            [ 1] 1218 	and	a, #0xef
                                   1219 ; genPointerSet
      000365 C7 50 0D         [ 1] 1220 	ld	0x500d, a
                                   1221 ; genLabel
      000368                       1222 00101$:
                           000368  1223 	C$mmcsd.c$1052$1_0$375 ==.
                                   1224 ;	../src/mmcsd.c: 1052: }
                                   1225 ; genEndFunction
                           000368  1226 	C$mmcsd.c$1052$1_0$375 ==.
                           000368  1227 	XG$SD_LowLevel_Init$0$0 ==.
      000368 81               [ 4] 1228 	ret
                                   1229 	.area CODE
                                   1230 	.area CONST
                                   1231 	.area INITIALIZER
                                   1232 	.area CABS (ABS)
